{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "agentpool1Count": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "The number of agents for the cluster.  This value can be from 1 to 100"
            },
            "type": "int"
        },
        "agentpool1Offset": {
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99
            ],
            "defaultValue": 0,
            "metadata": {
                "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
            },
            "type": "int"
        },
        "agentpool1Subnet": {
            "defaultValue": "10.240.0.0/12",
            "metadata": {
                "description": "Sets the subnet of agent pool 'agentpool1'."
            },
            "type": "string"
        },
        "agentpool1VMSize": {
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A10",
                "Standard_A11",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_A9",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D11_v2_Promo",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS11_v2_Promo",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS12_v2_Promo",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS13_v2_Promo",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS14_v2_Promo",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS3_v2_Promo",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2",
                "Standard_DS5_v2_Promo",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
            "type": "string"
        },
        "agentpool1osImageName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
            },
            "type": "string"
        },
        "agentpool1osImageOffer": {
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Linux OS image type."
            },
            "type": "string"
        },
        "agentpool1osImagePublisher": {
            "defaultValue": "Canonical",
            "metadata": {
                "description": "OS image publisher."
            },
            "type": "string"
        },
        "agentpool1osImageResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
            },
            "type": "string"
        },
        "agentpool1osImageSKU": {
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "OS image SKU."
            },
            "type": "string"
        },
        "agentpool1osImageVersion": {
            "defaultValue": "16.04.201804050",
            "metadata": {
                "description": "OS image version."
            },
            "type": "string"
        },
        "apiServerCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSU1RVENDQ2ltZ0F3SUJBZ0lRRFM3NmNpRzhDTXA1YTVtVmFiNEFFakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1qUXhOREF5TURSYUZ3MHlNREEwTWpNeE5EQXlNRFJhTUJReApFakFRQmdOVkJBTVRDV0Z3YVhObGNuWmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBSjJYeUlPWjRpdmlVVWZTNnc5UGhySXVsMVRFaWNWS3J5VElqVmo4bWpsU2NTSnFDbE5tQXF6U1I4RHIKYldUSzF0a05QYTM5eWdTY1ZHam1Mb09IZE4rcWhEa0xhWGQxaDJ2Ni9kUkh6ZUlUVHJBb3dZU3FUSG1sMERHVQppRC90dmtFMnFiNEFxWEoxMWRKTVpiYVBQbXdiSy8ydUFQaU9FMEZUTnVqMjJnM29EckNidWJoQ204cUdHbFIyClFobTBWYVRVUGJ3SFE3WGJneXY2Z0djcFowdUVZRDhJdlRVSjVvYnltVk1QZ1ZGRUxDdmJid0J3Tlo5WlhIVnYKT25NRGM2b1ZtaTF0RkJnbFdEb2FDazRaQlhER2VjZEo3YXpEMXhiL0w4ODRyMUNLTmUwQUlxeDB0ZU5SbUt1egpGRjNFWlVmQTZmODhaMUdKQS93Zk1oKzlCWG1UMEVuQTR4Rk5nOUtwNWd5SytxdElYek9jS1Fva0l6R3hNNFhTCnZoUHJZbWpJUytoY2MvRDZScHN4T1RJdTY0eStQeWtnVXd3ZFZDNnRPMnREcXpNd2lLejhscWlpanNIZHdHcmIKMENpanZXNEd5Y205NVlXc05qME5UK0tjMk1JMEhnWGNKWFVhRkdmTEpBNi9XU3c2WVp3TFg2UjBtd2ZXRFJUUAppWURHNjBURkkxVnc2QXBHU1pUZTJYdGZNK1doVEp2ZmhPVzBaUkFldkExVjAzVFg4WS9UR2J6RFNPQ0pTS0MvCnQyLzdnZjhaVlM2NjdzOG50NzdmZ2Qvb25ZM2xQSVY5cWlxczNzWW55ekwyWHB1b1oxenF4ZExqakJJSVpudS8KZzdxNmpMNjRQZDRPeUV5a2tDSjZlNUtMYVpwM1BGOERyTW9QWHd5a09KSmxPS2lEQWdNQkFBR2pnZ2VVTUlJSAprREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvCkJBSXdBRENDQjFrR0ExVWRFUVNDQjFBd2dnZE1naWx0WVhOcGJYVnphUzVoZFhOMGNtRnNhV0ZsWVhOMExtTnMKYjNWa1lYQndMbUY2ZFhKbExtTnZiWUl1YldGemFXMTFjMmt1WVhWemRISmhiR2xoYzI5MWRHaGxZWE4wTG1OcwpiM1ZrWVhCd0xtRjZkWEpsTG1OdmJZSW5iV0Z6YVcxMWMya3VZbkpoZW1sc2MyOTFkR2d1WTJ4dmRXUmhjSEF1CllYcDFjbVV1WTI5dGdpbHRZWE5wYlhWemFTNWpZVzVoWkdGalpXNTBjbUZzTG1Oc2IzVmtZWEJ3TG1GNmRYSmwKTG1OdmJZSW1iV0Z6YVcxMWMya3VZMkZ1WVdSaFpXRnpkQzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDS0cxaApjMmx0ZFhOcExtTmxiblJ5WVd4cGJtUnBZUzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDSlcxaGMybHRkWE5wCkxtTmxiblJ5WVd4MWN5NWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNLVzFoYzJsdGRYTnBMbU5sYm5SeVlXeDEKYzJWMVlYQXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXh0WVhOcGJYVnphUzVqYUdsdVlXVmhjM1F1WTJ4dgpkV1JoY0hBdVkyaHBibUZqYkc5MVpHRndhUzVqYm9JdGJXRnphVzExYzJrdVkyaHBibUZ1YjNKMGFDNWpiRzkxClpHRndjQzVqYUdsdVlXTnNiM1ZrWVhCcExtTnVnaVJ0WVhOcGJYVnphUzVsWVhOMFlYTnBZUzVqYkc5MVpHRncKY0M1aGVuVnlaUzVqYjIyQ0ltMWhjMmx0ZFhOcExtVmhjM1IxY3k1amJHOTFaR0Z3Y0M1aGVuVnlaUzVqYjIyQwpJMjFoYzJsdGRYTnBMbVZoYzNSMWN6SXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaWR0WVhOcGJYVnphUzVsCllYTjBkWE15WlhWaGNDNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNKVzFoYzJsdGRYTnBMbXBoY0dGdVpXRnoKZEM1amJHOTFaR0Z3Y0M1aGVuVnlaUzVqYjIyQ0pXMWhjMmx0ZFhOcExtcGhjR0Z1ZDJWemRDNWpiRzkxWkdGdwpjQzVoZW5WeVpTNWpiMjJDS0cxaGMybHRkWE5wTG10dmNtVmhZMlZ1ZEhKaGJDNWpiRzkxWkdGd2NDNWhlblZ5ClpTNWpiMjJDSm0xaGMybHRkWE5wTG10dmNtVmhjMjkxZEdndVkyeHZkV1JoY0hBdVlYcDFjbVV1WTI5dGdpcHQKWVhOcGJYVnphUzV1YjNKMGFHTmxiblJ5WVd4MWN5NWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNKMjFoYzJsdApkWE5wTG01dmNuUm9aWFZ5YjNCbExtTnNiM1ZrWVhCd0xtRjZkWEpsTG1OdmJZSXFiV0Z6YVcxMWMya3VjMjkxCmRHaGpaVzUwY21Gc2RYTXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaWx0WVhOcGJYVnphUzV6YjNWMGFHVmgKYzNSaGMybGhMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUltYldGemFXMTFjMmt1YzI5MWRHaHBibVJwWVM1agpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNJMjFoYzJsdGRYTnBMblZyYzI5MWRHZ3VZMnh2ZFdSaGNIQXVZWHAxCmNtVXVZMjl0Z2lKdFlYTnBiWFZ6YVM1MWEzZGxjM1F1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2lsdFlYTnAKYlhWemFTNTNaWE4wWTJWdWRISmhiSFZ6TG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJbWJXRnphVzExYzJrdQpkMlZ6ZEdWMWNtOXdaUzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDSlcxaGMybHRkWE5wTG5kbGMzUnBibVJwCllTNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNJbTFoYzJsdGRYTnBMbmRsYzNSMWN5NWpiRzkxWkdGd2NDNWgKZW5WeVpTNWpiMjJDSTIxaGMybHRkWE5wTG5kbGMzUjFjekl1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2l4dApZWE5wYlhWemFTNWphR2x1WVdWaGMzUXVZMnh2ZFdSaGNIQXVZMmhwYm1GamJHOTFaR0Z3YVM1amJvSXRiV0Z6CmFXMTFjMmt1WTJocGJtRnViM0owYUM1amJHOTFaR0Z3Y0M1amFHbHVZV05zYjNWa1lYQnBMbU51Z2pKdFlYTnAKYlhWemFTNW5aWEp0WVc1NVkyVnVkSEpoYkM1amJHOTFaR0Z3Y0M1dGFXTnliM052Wm5SaGVuVnlaUzVrWllJMApiV0Z6YVcxMWMya3VaMlZ5YldGdWVXNXZjblJvWldGemRDNWpiRzkxWkdGd2NDNXRhV055YjNOdlpuUmhlblZ5ClpTNWtaWUl4YldGemFXMTFjMmt1ZFhObmIzWjJhWEpuYVc1cFlTNWpiRzkxWkdGd2NDNTFjMmR2ZG1Oc2IzVmsKWVhCcExtNWxkSUl0YldGemFXMTFjMmt1ZFhObmIzWnBiM2RoTG1Oc2IzVmtZWEJ3TG5WeloyOTJZMnh2ZFdSaApjR2t1Ym1WMGdqQnRZWE5wYlhWemFTNTFjMmR2ZG1GeWFYcHZibUV1WTJ4dmRXUmhjSEF1ZFhObmIzWmpiRzkxClpHRndhUzV1WlhTQ0xtMWhjMmx0ZFhOcExuVnpaMjkyZEdWNFlYTXVZMnh2ZFdSaGNIQXVkWE5uYjNaamJHOTEKWkdGd2FTNXVaWFNDS1cxaGMybHRkWE5wTG1aeVlXNWpaV05sYm5SeVlXd3VZMnh2ZFdSaGNIQXVZWHAxY21VdQpZMjl0Z2dwcmRXSmxjbTVsZEdWemdoSnJkV0psY201bGRHVnpMbVJsWm1GMWJIU0NGbXQxWW1WeWJtVjBaWE11ClpHVm1ZWFZzZEM1emRtT0NKR3QxWW1WeWJtVjBaWE11WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmgKYklJV2EzVmlaWEp1WlhSbGN5NXJkV0psTFhONWMzUmxiWUlhYTNWaVpYSnVaWFJsY3k1cmRXSmxMWE41YzNSbApiUzV6ZG1PQ0tHdDFZbVZ5Ym1WMFpYTXVhM1ZpWlMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lICkJBci8vd1dIQkFyLy93K0hCQW9BQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFIcG5vSC81UmsyRFpoOGsKWU5JenBVbHljTkZveE9ub3RnSWc4dkZ1TURqb25zMXFvajZodG90cE9JTmpETEtCYTM4V0tSdW9OcmZrcDJoTQptOUN0UnZUbDdmd29JWGtScUpCQzl5ZTNUM1ErUTczUE9xV0tQTTZ2bEJSSDUxbGxBR0tLc2tGUkNNVCtpMExsCi9hbjB4NGZIcWdkU0xnWXdhSVdMTE1rV2NSY0xvUHNUbXo3TlpWSi8wbFBSUDRvVWF0UkNud1lxREpzek1seE8KeVlDV0hFVkVJQ1F2WGkvT1V3djVuOThUMmk1RDV6ZDdNY0dnbExia0RSekNJMEwvTUhxR2lySHhDTk1JZ2tMZQpKWDZESjVwcDdpTHVkbS9mWFFvWmJDRzNVRkQ5TUZhcnFYNlo1aTJXMDBpWC9sMjFOMktYbkJvRVVIUE1jdHVJCmpsLzJINlJhNHdEcm1oREJyKy91Yk9Lcmd5S3dudEhzaTJqZm1vT2VJRUtpeG93RFJuc3Z6Qms2ekY2M3FCTkoKYm40RGZ1NlFVMUNwUWZVcm9vVFUyRU5PL2xrb1NsaFplYnZsM01sZXZhUS9tY2xkampPZzcwVVpRVVE0eFlmTwpMQWMyYkdmWjhNYkd1MWRrUFhlM01qTHprWTNBNlZReWtBOXdockNJUk5FNlJzWDA2OXpQSWxiZ2ZadVlobkp6CmpMeU42ei9NOHRMNnpCM0tla3czandsMXBGYmZkanVWaHdMZElCLzdaS0tYMGdCWWtPTGVSeGZ4bnMzNDNMbU4KUlFEcmtKT0dUR3FBQzF0UEg3cmQvOXIwUE9tbG9oV09yazI0QU9Wa04wQU5SUlVUVFo2QmREV2xHK2o2am42MAo1UzA4Y1c4a1JYU25ZVTJvQjJmTHFVeXc1SlRWCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        "apiServerPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBblpmSWc1bmlLK0pSUjlMckQwK0dzaTZYVk1TSnhVcXZKTWlOV1B5YU9WSnhJbW9LClUyWUNyTkpId090dFpNclcyUTA5cmYzS0JKeFVhT1l1ZzRkMDM2cUVPUXRwZDNXSGEvcjkxRWZONGhOT3NDakIKaEtwTWVhWFFNWlNJUCsyK1FUYXB2Z0NwY25YVjBreGx0bzgrYkJzci9hNEErSTRUUVZNMjZQYmFEZWdPc0p1NQp1RUtieW9ZYVZIWkNHYlJWcE5ROXZBZER0ZHVESy9xQVp5bG5TNFJnUHdpOU5Rbm1odktaVXcrQlVVUXNLOXR2CkFIQTFuMWxjZFc4NmN3TnpxaFdhTFcwVUdDVllPaG9LVGhrRmNNWjV4MG50ck1QWEZ2OHZ6eml2VUlvMTdRQWkKckhTMTQxR1lxN01VWGNSbFI4RHAvenhuVVlrRC9COHlINzBGZVpQUVNjRGpFVTJEMHFubURJcjZxMGhmTTV3cApDaVFqTWJFemhkSytFK3RpYU1oTDZGeHo4UHBHbXpFNU1pN3JqTDQvS1NCVERCMVVMcTA3YTBPck16Q0lyUHlXCnFLS093ZDNBYXR2UUtLTzliZ2JKeWIzbGhhdzJQUTFQNHB6WXdqUWVCZHdsZFJvVVo4c2tEcjlaTERwaG5BdGYKcEhTYkI5WU5GTStKZ01iclJNVWpWWERvQ2taSmxON1plMTh6NWFGTW05K0U1YlJsRUI2OERWWFRkTmZ4ajlNWgp2TU5JNElsSW9MKzNiL3VCL3hsVkxycnV6eWUzdnQrQjMraWRqZVU4aFgycUtxemV4aWZMTXZaZW02aG5YT3JGCjB1T01FZ2htZTcrRHVycU12cmc5M2c3SVRLU1FJbnA3a290cG1uYzhYd09zeWc5ZkRLUTRrbVU0cUlNQ0F3RUEKQVFLQ0FnQjlzOXRSOVlYdGdTbGFSQWdRLzFzdWQzRm9RUml2a1NIaEVrT0V6b0JwNXJPdFFxNFgxYytlY0dDaApwbWhzdEVycGVPRlJEcFY4VmdJU1prQ0YwNTlLNVNWd3B3U3FMOG9rUEdFSldYa0VzbWZhcGJldWpYUlF1QTAzCjd3VTdFUFRuNmFVOWxDT1UxQjhKRHIwM0FFMUhSK2t3QVFKdlFFeGxsKzI5cDJGSkpHZkxRWHZEV1FZUlppUk0KYU1QUzR3QkphSzRSZEMzek9qUUgrVmxBY0VzZmRtaWEvdXFGQ3UraGhwTDhLT3I2bW9rdE5tdjFDb3dMSGVsZApGcXFsb1FRNmo5NmFDMTZ5Mzk3ZkFYUmsxUnA4MlNPNzdlRXlKRWhGNUtrSy9ta0FzaTNQYklNNzBpQmZRTytwClRUK2FoNVJOeHJnZlNkd1RzbG5HV2svTjl5VU1rMTllYXYvQ1NoS0NpRWVUNzJlbmpqNzI4eGkvdjluV2RQc1gKVDNwRDUzdk8zZzBuK1NwWWpoTGcraXh3TmkzeXQ0aFdKOUxQbHMraTQ0TnJ4ejhXeUJYLy9EblNKNEhsRUo2OQpkNmxCaWt2SXNneTNwMWZwSlZmMU5XYmdOeGpweFM1Z2dCNFlwMzErK29zYXZZUjgxUkxjUlF5RmdPS3pZMGZNCitkb1NMbFNIME9WQTVOME5aL1hHQWVuTU5EYlpvNTRaa09Pd2M1T0ZCZG1wd1BjM0FMSWFzSHkzeVA2WDk0QUgKL2kxejZ6a0ZRbmRISnp1dE5oWXZxMDRsL1lON29yTE5kUFhZMU1kaGxtMHRqT1FpYUxjVU5jZnFodERidmZDNAo0SkpPSy9Pc2ZwSnh3N1RsRmhseXBZOEZpbWpSTUZXbnlxOThBakw1K3paVTdsS2pLUUtDQVFFQXdxUVhTSUNtCmIxWXNzaUlIOHN3ckhEaHhpSVZiYTZvMitHSncycVdMdmpSVVdFbnE0UFZ0Y1E1Zmc0RGtJOHJBamIrbEo5VkcKdDI0NWFWMTk1anNoeW0rN2NuNnp0ZFhSL2xaQm0wNi96K3BsbnhscTFtdkxFeDVLb3B3cythVnUzVjZHUWNqVwovMEI3NXhlSHVLejJuNmtOZDNURnkraE0zb2IzU0dwdTRYdCt4L1M0V04rTWNKeko0TEFnTjh3aml0cDB4T0kxCnlTSFJXQXkwaGZjcWxuNHIrWnRGcCt4RTBHUWkrbm9OMktGZldsTVBFVnhLb3YwNFpuWkRIajJTd3ozcW5KMXgKem1JdDcycHo1OEVwOGtHYzVqS3orUDFPYXlMTFVyYmdVd25wZTB1d2crcmdaTzB6MW9IQ3lyZGl0dVg2ZnM4MwpGNEd2Y3VYQ0xDWnlGUUtDQVFFQXowWFcvVGwwdnc3SFI0dUs2aE1EVkVWOHFLNThoc2N0RDVqUkdlcjJPaU9yCjdyUGJCamNLZGdWRjJFb0ErbnRZMGNITTQ0MFdZbkNVUGRFL09sU2VnQmU5QzZPOEszQzVyWko1YXJTeVYxZGsKME11SmJSVWI3RjFhR1IxVmIvMTFEUEprT0c0VHdISGJxVS9RTTVrcG5RT3B6VG1xNU5DZkVwbDJmSnllWTdFeQo4SGY2cys5akpSMjZHQnpXbTFuRFFyMytsSGRjTkpCVUtra0plWDU0VnF0dzlobndoaWNWRXVoWHkvWWZ3RzRFCms1OGVpZGJtVVBmb1gvUC9MN0M1bFVxa2labHJTakczQjRGV1Q1M25MazFmbmhzQzFRMWlBVGFySC9QcUR6STAKSVNaaFV4QXhZbkFtVWtoZ1lRU3JMQk4vSDZzN2k1dVZrV3lYWnhVT053S0NBUUFKN25XQnJZN1FmNFVvVWJRMgpIMVRUeTgxL09jN0FYNThPYlhkMHNKM0F4c3JHOW42Vm0vQkpwSUliSTZpQWF3Z0lNNDhweVNnaWsrMDZBeHM1CmRDcjFPVjVIS1UvaUoxYmZzMmNGbGE4VDNOSHluRWxuUjNqRk1QWjk5Wm9WNHVzVlFJMTVMZFpLaisvQ2l1RFIKKzRGYUJEWTdzaW1samVUZU5lVElQU1lMTzFIc3dmL21DUUlSZk82UUdHeU1iRTRqOTZHZHFpMDBaaFZZZU0xOQpTRzlUM253LzhEeE5wVENkc1g1WGFZTHJXdENTdTBvNWlJd0daUVZMdFIwWG5leXZLYW1lOUNtcWJqZ0p6MVM2CnJwQ0ZXL08xaTBERG82a3Nya25SbnFNem1YM2dYS3hWRHRjRVQxWWx5OWswbnNiYXJrRnAxd2pvbWlWcHAyK1EKOFNWQkFvSUJBQ3pEdnB6TjdlTGRoRGgxY0xrQkJqVUxGTk14YS8rSHdMbWZuWGxsZjJ3ckRCVHZqeHdXZ3hIZQpMYWw2d2g5V3lHWDAzeFUrQVZtZFNzYlhERHJDejhDR1gvUEZsdndpeWxjc1RVQzRhZFBuTWdUT0VJNFlnd0ZYCllBQVFqOFV5RGplUG1nbDk3SkloaFBsYUhYTW5YdzlrSFNZUGtGTCtvM3hXM0hvcE1TUUN2eWVrSWViK2lvRVgKbkh0Y3J4UzZIQ3VyOFBHTG5jUlViM2o2Y1N0bUh3TkkzNHFuSzRVdHA2Vi92SVoyVDRFMXdaTklTRVlvdlhFNwpPVnFQemNzMDliL0NjU3F1a2JkaWFVOGJwZEpvSGVlb0drQ0JRT2xXakpZS2dvYlNIUGpQTk9iNzdRVU5lRHowClQ3SnhveThRM1E4VjN0eXVGSndnSy90T1lweUd0WjBDZ2dFQVlybVdNZDBaOStBTzFFbjhvWGd2ZWl0cURKUUEKb0VxeHlXTktVbVhHY1M3S1lLM2kxS0xpM1NTbFozaUxyc29sbmRQV2RyeThuc3FNcDR6YjNwaWtHcWZ0Tk9VUApYb2RRTzBybUlsYXlJR3FscUdKSk1KSWZONWRUSnBCQXRpb3dGS3VTRm52TjVKMHNuZHhVeTFDdy9Ua1VOamFBCkREZ3lxUXIyMzVReTgxTFNYT2lkeWI4dWY5OE1KdGJXa2M5TnRjOHBVcUR1d2VQUDJwM2VGOUROai82alhOcDYKVlg3ZUtxbFZYNXYxbGZRYTd1WEN1UEpaaURVSExNb1p3OUc3ekVkYW1JcDIzeUhFOWlLZVJRU0xWdDhRam1mZwo1ci95cFZmeTd0a2MwK1NFUXA2ZkV5Y2RWU2pEcWN0RVZaYzJJRmVCMm9lVkVjRkxidEdsMHJvVDNnPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "caCertificate": {
            "metadata": {
                "description": "The base 64 certificate authority certificate"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQUxCeGpHemUwWmNXSFZ4bjRxT1BuVzh3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESTBNVFF3TWpBeVdoY05NakF3TkRJek1UUXdNakF5V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTzhkCjVzOVdLN2lUUnVUZTBMajBOdE5jY25tNlNvTFpVUGh0NmM0bnRrc1lwcnZRSFR6YUFKeXRMcUcxM1dFbG1tdG0KcWNNeEFlS01nMUo5b2wzUC9yOFFEWm93d2J1SHR4QUVsdmo2MEJyeUNIcXhMaEFQazNwbnJrSUZqMEVGd1JIbApISjZ5clBGVWpsQWUwMW1GY2V2c2JXZFgwY1g3emRWc1hRVWJ2blJnc2RhZ0xnZVJsbjdtamhqcWdPcS95V3g2Cm1lQmhpbjBtV1lJSnZjTkh3UHlvMGhpY2x0TTNCbVltZDFpTzVsWVBjdDQ0aU11bSt1SElvcmJaV2dhZFRCeGcKMlMyb0tBWDlmRTJYb2ZEbUpPKzdJYU9YQWFnQWtkVUFVNnZ2bWxRcVphWGdtbFNOdmN2ZktJWlI1UlpPd0pybwpkY1pSV0FZYVVTRFpFdGVabVpsNDZhY1JXcGh3azJNZVp2eC9XMGlHRVg4MDY2azdaWGsyeW1OS2dPV1VTNmg4Cnk4dUVTSkxEU25FYmhJWDltemJhYk9LenhlS3kvOWc1MmJWamFacjA2U1UzandNa3hvNnV2ejN6U3FqdVE1Y1cKejVmSVJSaXd2WmRZd0xncVNxa29ZQjcvVmlHOU5LaG92U0RneVhwSVF6ODVaS0FETVVRSE8wOGREUFJWMHIybgpJbE9UTWF1OW56L1YzMFlRL3dVK3hFeVppSE1INEhZdnNYdUs4N3d1WUVBTFJCUDBQdzI0S1o1RXRYbzd4WHdHCkxVVE84dk5EK3hpTk15KzNoOWtzUVhxQ1BCMVhZTVI0WEJwOXZVTjdrY2c1M1B6bjZxN1pOMjdrNWp0bXd2YnkKOU5pRDVWTXNUaVJUUDNaVWpZcnBKT0lYaEhqc3NuZGVXTlFWZlBFakFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQzNNSFFQCnN2ZkFVZXN4a1l2Wm5JT3ZUbWFvd1ZnQ1lSRG1OU1NoejIrR2ZaTXlIMFZhQ1NLRXRLWFNhMkRkcm8zVjBGbEQKRkh2Vzh4emlCS2Jha3ZpdllPY2lvKzFsY1c1OUNDcVRrSG11KzFqZ21xVTJHWDhQdFhmRlYwbHFtSS84VGpJNgo0TS9lUHN5TU8zU2p4UVR5S1NmN3hIcndSTFc0OWVOZm9YOFdacTc0TWpFdkU5aWdRVHFrMGVaR2R0emxzNHF1CjlES1lNcEJYZU95MHVTNnowWDVWUkJxT3FLNTA4VnZuRXcxMjFoc2UyUkpybEdnRkhZMEtrdTY5bWh1WUFraHcKUitrR2hCVGJUMVZYQzQxbXJMbXdXMnV1dmQyWC9HYnl5NENVOVloclVoTmFCNVZyeHkzUm9IWEE2Vm5KekYxSQpqZDZDTldtbFFZbEFIbzJaZDgwMmlOMm40Y3FJU1c3WXFvdFVBMUdWQWxhSXl1eUFFWHNCai9XRGs1cUhQM0NICkRxNTF3RERyaWNnWXY3ejU5VWdIc0xNK0RRYmh4MTJ1Ny9MSERLcU5HQXFGTnRodUxDMUgzVXBmQmh2ZkUxSU0KY1g5Vkt6S3pnRlVOcm1GNlZ2L2R2K2ZmV2dFMlpiSzdlUGIwYWVPazcrYW82QzhCNnpCZ2h2dGFvc2ZMSEh5dgpLUjQ2OXZJN1VvWnpEczk2d3hmMTI1K0RjcFo5SUpZdzJCQU1mcjZod3M2L3FoUnpjTkl1VU54YzY4WEVwVFZ6ClVEbDVTbDJZYjZpSUVkYVFHYzRiYVlmL0VHSXMwN3Rpc0tDb3ZCMGZ0MzJpV21aa2VBMndiZ1IvMkpjM2pzNW4KdFFkYkFqaEdsV1lyUTdYaFQxOVA1Rnk2aTh3Mnh1c0JpRnpFanc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        },
        "caPrivateKey": {
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBN3gzbXoxWXJ1Sk5HNU43UXVQUTIwMXh5ZWJwS2d0bFErRzNwemllMlN4aW11OUFkClBOb0FuSzB1b2JYZFlTV2FhMmFwd3pFQjRveURVbjJpWGMvK3Z4QU5takRCdTRlM0VBU1crUHJRR3ZJSWVyRXUKRUErVGVtZXVRZ1dQUVFYQkVlVWNucktzOFZTT1VCN1RXWVZ4Nit4dFoxZlJ4ZnZOMVd4ZEJSdStkR0N4MXFBdQpCNUdXZnVhT0dPcUE2ci9KYkhxWjRHR0tmU1paZ2dtOXcwZkEvS2pTR0p5VzB6Y0daaVozV0k3bVZnOXkzamlJCnk2YjY0Y2lpdHRsYUJwMU1IR0RaTGFnb0JmMThUWmVoOE9Zazc3c2hvNWNCcUFDUjFRQlRxKythVkNwbHBlQ2EKVkkyOXk5OG9obEhsRms3QW11aDF4bEZZQmhwUklOa1MxNW1abVhqcHB4RmFtSENUWXg1bS9IOWJTSVlSZnpUcgpxVHRsZVRiS1kwcUE1WlJMcUh6THk0Uklrc05LY1J1RWhmMmJOdHBzNHJQRjRyTC8yRG5adFdOcG12VHBKVGVQCkF5VEdqcTYvUGZOS3FPNURseGJQbDhoRkdMQzlsMWpBdUNwS3FTaGdIdjlXSWIwMHFHaTlJT0RKZWtoRFB6bGsKb0FNeFJBYzdUeDBNOUZYU3ZhY2lVNU14cTcyZlA5WGZSaEQvQlQ3RVRKbUljd2ZnZGkreGU0cnp2QzVnUUF0RQpFL1EvRGJncG5rUzFlanZGZkFZdFJNN3k4MFA3R0kwekw3ZUgyU3hCZW9JOEhWZGd4SGhjR24yOVEzdVJ5RG5jCi9PZnFydGszYnVUbU8yYkM5dkwwMklQbFV5eE9KRk0vZGxTTml1a2s0aGVFZU95eWQxNVkxQlY4OFNNQ0F3RUEKQVFLQ0FnQWNPNUdYQlh1Z0RYT2ZibGVDbndNaUxaWXVuVHBTL01tOHEyMmhzN3FvWHo3QWlqQUprVXZsTStWLwpubk9IRnVPR3J0WjRmMzdUZXZlK2M2c0tISmJkaEUyMjJPN203MzFEM09iZWV1NjdYN3gwa0JyNk5ueVpSVWlqCjd2Z2RHMHJTakJTM0FDMi9TTmFNeXpiMUtQWnNmcnZrS2RCUTZneEJtTXZhNEkyNk8vaURlT0kyYnBBd1o1UjcKaUtTMEV2VDdZL1pyTWRraU1iYjd6WjZrUWdLZFVtbU1FbUVVaXppc012cUFjRTd0OW1EL3Iva200bzVZdmxISAorUjNTRGh5QWRVYnZSeDJDcDQxWHRBR2c2ZXVPaXEvTUd2Wk5HZFFlTEMyMDdWTnhnSmdEMytNWS9LdGVPUGtWCjh2RnprdFRXOVgrQ2JQUlJ0Q1hFRlIxT2E0cGhCQitkcm9PTmc4eWJQK1hFUVp4cmtaSzhEUXZWUGN1QXI4bS8KV1c5NEdaVlZBWjFWbTRUdnFiamFuOWl4STgzbkF3RHFxeU1UNC9XRGFiaWR6WWtLbFo2SDMvZHNjNW9ha2ZVTQpNZUlxZlM0SGFYSTdxQW90Y1d6MUJqdFpvUU11d1RqbmpPdCt5ekdGV3g4UUFsdWlKNWhFWk8wcG9XVFE2a2lwCmIvUXdMM01ReVoraElNdjVPck9KOWRXdzZzeDZpOXVIaVBlT3dwUjQ4V3NFZWZEaER5elVFT283bDlmTEJUaVQKNmdpZXZqV3BObTgzcDZmbFdIMnJ1MWJKeno5aFZEMWFGN1MzSXhQTUhkdVUrVGt0alJjYXlQVlByVnAyTldUTwo1V2grK1VZcUt1Q1czTjI2N3Q1SVlsWTE3dW5RS2hMak4ybmo4TkMydjMraTk1eUVnUUtDQVFFQThsL2UzMFdVCnMwNnp3Ky9BSkpqOXZ4a1Z2Nnd0V1lnVXU1TDJJcGR2aU9PUGhNdzkzTkhGaEVKR1UwOCs1UytzcEJjWVVSMVAKTUN6eGdxUHllNXpKT0w4RGJXLzNMenlrTUtBNEcwZ0h0eitmRVBjMmhNeS9sVTBmdDJqcEIwYTNsNnBHL0d4UwpQNXhLNklTWHY3TFlIbm93cjIrNXZWUWc0c1d4OFR6QU4wMWlMNEdDWTg5VUJaSDNpYWZYeGs1MERXSG9waTJ1CndPVUVHQWVNNTdQcE1Za3ROWGw2bG1WV2p3NTRLR2Q5Z3NjdG1ic1luTU1lL0hnTXE5amE0QlNYaUxpUnZMNy8KZU9CY3ZLbHBrM2g3U2FIU1ZLaDdaaEh0c2JGdytVS05DNFZDVHJPRHJpQWdxYjJMaldrNzE3T0xwcnFkUmgxSApGTHpVcUhtdEJWWG5vUUtDQVFFQS9JOGw0ajV2SmxaaURiNmY5TmJscktBNVM3THZqZkREZEZJZXhtdkNYYzJrCjhsemYzeGV1UWgvbzIwbHREdzVaaks5MUtSb0V3U3cvVnF2aW1DeGNSRXlmS05SVWs1ZmZIQ1A2OWl1a0ZPd2gKRUUrMWF6M3drNVhXTmExTkxFQitmTTRxN0tXSkllQ1o5TXNPM3pLcjJXRHBESVRMVXhVYXMreGtrL2oxTk5nTwo0NnBCRHpESVlRUlQ5cjJHd2VCY2cwdnA3QnN3ZEttdDJFYnpLK2ZKL0xZbHhISWQ5bk9vVGowdjh2K3ZuRlJvCm4yRmMvNVYrcFlCa2NjYzBTVWpDRk5zMXdUb3hxUEVNVFVaN0IwK2JsdlBlVm5yU0FxdFA4bzVpcjRPQzVHOEUKdkQrdmtXWno3ZW5oZUVUN3FIYkc5SUIxVHZPT1kwa1dLaTQwNnJnU1F3S0NBUUI4cWwwcmdGR2M3TlUvNmRodAp1cGVCckhob1R6cEFPK05XRzZBb2FMWUF0Zk9DL2I2d0R1SEdSb1IvbzFvWmJpMGhkWk9YWFRqMjhaY0RlQ3BuCjlGdjNxU0F0TVJMMkkvM2IyUDBpNHlpODA2ZVFoV2R3WlJRQnlscU83eEkxSU9XYnlBU2RIMllxdTh3M3pzTnkKNFoyU0I0MTFIMFZ0SVpHTXN0ejAxU2VWQ21OL1JlRDRUNUxMRHFwQkRxaklvbC9FNW1CUTRWeHFjU0ZxN3E5RwpHbDdPa04xRkRRZkZ4YmdBK3hOSXpQcGN3dkFzaTNSOFpVeFIxYm5HeGxMR1FURTBMS01oYnloZVZ5QzhGWE50ClcrSW1IR3JnQ296MkVqQ3RYalJhc1NWMUVJVHJrQ0FoOXZwMTlEMk1iZDFPOUZYWFcxTTcxaUZTaEZIcG1qUXAKYzJjaEFvSUJBUUNBbVByM09rY3FSQzNsUmJ6NDFEdGFMTE0vNGpxc0VYM1VTc1EwMEVYRnNhSmRiZ0RuL1l6VApTcUFzbURTWngvcTg4ZEk4UFcxU1Z3OWhPR0JHajcvalh3aGpwOG53NVJITHFGNXUza1hNQ1hmRWNIRzF5M0ltCkU5Tmd2WDlnR3U3TTZjVmRmZVJYaForZXo0NGhCQklRdTVHdXVDYzNoTFYyQzlZaXFrOWd1dXJKN2JUMjRTWUcKa0VlWWlXU0diNUZyb1VuWTJQZFJUOXlmRlhGWVY4dTNpNStyYVZmc1YzUEpjc3BwZHR1YVJEaUpmdS8xaTg5Uwp3ZzlqQjhXTjB5aFBxbGF5cnNqK2RzNkd3bTUraUlCMjJuSEpvdnd3TTc2ZmlQU2kzZG5XS3RsRWFVRWlUZ0tWCmo5TW9oQ2VIM2dMc0dFU2pFTXpkclNkR0R3VU94dTgxQW9JQkFRREVNQVYvUTl3NEFOUmIyTlYxcnJzRmFIeFcKUlorNzRiUVNmUXczcVRyVUNhNTkyY2krblhHVk1xSnVWaEgrTXdvQmN6M2tGT1FOSndINmNYMmkxYllad1psNApVaWsrTVJSNkVnWVBybkFmdnkydFpkOVZQMFZOd2ZDSzVHT25rMEVEeEtWd2QrbUF0a0dJSXlINmVEbm1pMXJGCmdNa0U2MHVmdW5YRnNmaEhUVVB5Z3B0c1NxYTk4Z21uNkFYZHJqaG1KTWJ0UWkzWFYwd1hBTHc4UnkxWXVHOTUKZkkxUW1Ceis3TzZqNTdyOUxHaWlLVkJwQ0ltbXFDdmtMNHRDa1pWR0k2cWZFdlBqcWVldk8renFXZ1ZYdVlwWQpibEtoV2NuK1JucW1lbGxxaXFtSUdrOG9IaXVrYWtHVTFUbzg0U1B0ZGdUTDBqWlFjVHd2TUlNNVJqTWcKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
            "metadata": {
                "description": "The base 64 CA private key used on the master."
            },
            "type": "securestring"
        },
        "clientCertificate": {
            "metadata": {
                "description": "The base 64 client certificate used to communicate with the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5akNDQXQ2Z0F3SUJBZ0lRRk94djdaNHVrc3lCNHBwTndXaHA0REFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1qUXhOREF5TURSYUZ3MHlNREEwTWpNeE5EQXlNRFJhTUNveApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1ROHdEUVlEVlFRREV3WmpiR2xsYm5Rd2dnSWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDMmthZGptWmdyd0Vaa3M5UlE3ZE92QldIaHdVSDkKeU54Rjg3UjR1N1czUFBNUkttaURNWk5iZHhWU1pRV0l3UVpMaUJNQ2ExV1FQRUU3bFV3QTltSGQ1TG9JWjZBMAo3MkhDNFkvaUFnK1NpY2xKNHZvY01tWmgzTGJlQzJRSVN3ZFkvUkpQNEIwRFhQY2tLNW9ia3pvNDN5a09iSlMyCmQ2NTZGMGVGc1BRLzNtUWNWVDN4NDZUQ2twQ3lpaE81eForNHcrUGNORVFtZ09pQm1FWm9tOVNjRUh2OGl0SHIKK1BNc1lRSnRNekdXdS83S2NrM3FScVdTNkhCUzBQN3k4YkE3WnFIMU5CNjFMNWFmQk9MRGlCY0hHRjRQSzN3bAp0N1QvWGtwWGxoVGtyZVlmcE1UVmNUSUp4Y0hBeUVYY0NHVGY3empreFpCbUQxMG9XcGZ5cnpOejJzOGVOWENUCjJLYTZKWVRxRUZIdm9ZZXltV2dTTTVnZ3MzVkQ4WThZNnpLcE9WeU5FWm93UE5TblVsUFVmTlJpV3R0YTBjdXcKR1ZjT085SHI1ZUsyOXJpSk9PZ1dya1UwVC9XR0huaFlKaytGWHRMcnN3Qk1NQkMrRXhEV0xIMkgzd0thTGZHLwpCL0dSaGdTY1lyZlNGZUdONXM3TUJCMjcxZmR1elpRdi9GQTEyN2t5MGE3bTB3UlhuWHF1bHVjN1c5c1dCUnRkCjRkeFFFOG5qTCsrQ3lERVN5bG5adlNlUnFxYzhOdEtOZW9NNS9GSlFFT3BORnF2aFYvOWNuMWZnNWtSZVlhZ1QKaEZuWjVzcTMzYkdDNDcwd0JaWm9XZlJwUm5rbmNSUVhBL1NPY1c1eUtQNWpiaVdHdFNJSFZuZUxwejhSZnB3VgpOVkN3RzN0RHRVamMrUUlEQVFBQm96VXdNekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBVGozaVR2NmUKckMrQjFzUEtaY1IrMURnRlJ6c3pwQ3FlMmx5U3pFdlAxNTFab2VBa1pHQVloZXhxVGZTNGM4amE4eXV3dTZtcApDMnJxdmRpViswVnBWWEM3cEdCWnhuY2J3c0RHb0xYUWNDbVV4NWhnbEFZcTlsNUE1eURaYzVhWm42RTZNTzhuCi85TE1MV3grOEpDOHJuZXJyLzRYUkxZeHhKMWNEbExrV1JpVUg5M2crTTdtcGtwai9yMGpJMm9CZjJ4Q3RtZHoKcGNqMHJzcysvNklnTEFRVEpiWmtMUFkrdG5hZFlCeUxXcXpvckNEMEgzRlVsR3IrMkhOKzRWOHpsd1NZVWtPawp3dERDSEJURlg1MHhqL3BRRmpUQktIaFZ0VHBPZEMxNy9OckptL28vU1JXVE9aS1RuUExqVzYrajRBWGhMOTFaCkJMQmVJNFEzd0VQZWVCQ2RneEkybTAwa0dhUUpVMERoRkc2NGpsZitJazBqUS82MlllWmdtUnkxSXJ6Yk12MGUKSWN2RHROZTYyVlJrRUZSdlZnd1JOaVBzMzhUd2t1S3BTM0dVNkQ4a2M5eWRrdFJBalErK2ZqWktmbDJySFVJdQpXVmRyczlYbzM1ZjVVcHFmTFNBb3EzMFUzTWFGZzRXU3h6QVJwaTM2aVNhYlJHaGcwVE01MjkzTjdkQlBrYjg3Cm9qNFQrRmpOdjBRNGc5MENYUU1mZnVaYW00MmxJaFlHblMvOFVaeml2SUlmcFBZQ244RnlCNUI1Y1Z0K2N6YzUKeGpwYjIxMWhSTVJUZEZTYzdjMy83YWZ4YldPZzJsZG80VS9nUkhIcHl6QUhNWEVadUR6YklRc242NUZna2xwVwpVNlRkTmptUUkwc1l3S2paWThQek1NVENTeHhiMXYvQnZXWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "clientPrivateKey": {
            "metadata": {
                "description": "The base 64 client private key used to communicate with the master"
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBdHBHblk1bVlLOEJHWkxQVVVPM1Ryd1ZoNGNGQi9jamNSZk8wZUx1MXR6enpFU3BvCmd6R1RXM2NWVW1VRmlNRUdTNGdUQW10VmtEeEJPNVZNQVBaaDNlUzZDR2VnTk85aHd1R1A0Z0lQa29uSlNlTDYKSERKbVlkeTIzZ3RrQ0VzSFdQMFNUK0FkQTF6M0pDdWFHNU02T044cERteVV0bmV1ZWhkSGhiRDBQOTVrSEZVOQo4ZU9rd3BLUXNvb1R1Y1dmdU1QajNEUkVKb0RvZ1poR2FKdlVuQkI3L0lyUjYvanpMR0VDYlRNeGxydit5bkpOCjZrYWxrdWh3VXREKzh2R3dPMmFoOVRRZXRTK1dud1RpdzRnWEJ4aGVEeXQ4SmJlMC8xNUtWNVlVNUszbUg2VEUKMVhFeUNjWEJ3TWhGM0FoazMrODQ1TVdRWmc5ZEtGcVg4cTh6YzlyUEhqVndrOWltdWlXRTZoQlI3NkdIc3BsbwpFak9ZSUxOMVEvR1BHT3N5cVRsY2pSR2FNRHpVcDFKVDFIelVZbHJiV3RITHNCbFhEanZSNitYaXR2YTRpVGpvCkZxNUZORS8xaGg1NFdDWlBoVjdTNjdNQVREQVF2aE1RMWl4OWg5OENtaTN4dndmeGtZWUVuR0szMGhYaGplYk8KekFRZHU5WDNiczJVTC94UU5kdTVNdEd1NXRNRVY1MTZycGJuTzF2YkZnVWJYZUhjVUJQSjR5L3Znc2d4RXNwWgoyYjBua2FxblBEYlNqWHFET2Z4U1VCRHFUUmFyNFZmL1hKOVg0T1pFWG1Hb0U0UloyZWJLdDkyeGd1TzlNQVdXCmFGbjBhVVo1SjNFVUZ3UDBqbkZ1Y2lqK1kyNGxoclVpQjFaM2k2Yy9FWDZjRlRWUXNCdDdRN1ZJM1BrQ0F3RUEKQVFLQ0FnRUFnTFdnOTlQaDl2NC80bUR4VHZqTUl2aTljQVhxT3p2dkp4WFA1c29YS3c2NklpRHV1NGNvNXZQRwpRV2RkQm5ObXQ3dEFBNVdlSmVpRTZMZXhkSUErc011KzU0dis0ekxjamlLdGFGMmhrdUsyMlBNKzlzQUZjL3JCCnBUc01rOWdwWHZCVGg2SnRjZUNKajZONXF2VVp0OXlFT2xvTVliTndlenlNUE5GcThOZ2RaZWdtbXJDdGlFc0IKM2cwQUtSa05LSnBadXZYU0VmOFJhOFBwNTNmczVQV3VJM1hPMXZpVW4zWG8yd21iYlRRdVJaVmVIc3Nka2J0eQo3TC9RN1grOGliUXFmQTc1a3l6d21EMCtqVEVWWXZnbjM3UDlleTNQV2JXazNhaStKQllCUmMvSXdOMWp0SVlKCnVacTN2WTdoWndwazVzdnRxRFl1cS9OcWFqcGdINTB0QzBONFNWV1pZTmc0dWxhcXFWeE9md3NIcVJ3Q2tWY24KaGI5VDBBSGF2MWJSR2NXREpiK0tCT2xOcHFzRy9ybUhOS2JsT2s0WUkwaVpNOEpLb0NsMmhvbGoveU5FWW9hWAptU3dsUkg5RHhueHE4NTdRRXlPcE1KNGF4SU0vVDBhcUpNbzQ1TDMxb0EwblZ4QWtvWkdveWpRZDhCMWtkT2VXCnkva01xZWdENURTNFhlVGEzQmtUT21YeUlsWUdYbCtVbE9GZlVFbktsNVVHVGZTQTRYYkhyUHc4VWxxaFo0QTAKU3M2Nm1kb0hHM29HRDBoYXF2NWNQcVBTY1IrcDZZVkphbFNYRGdWZlNsR2gyWlYwQjZML3ZkYzZqTEE2bnhnTwpHSEdhWTlHeXk1MzhjU0FRMnBSUUp6cFd0TCtXZnpMMGpacjAxRDc4QVBOd1puUFpFejBDZ2dFQkFPTmdWRW9UCllvUERJbm9FM1VSOUxLM1ZwdjFMSWJyRW1yRGFVZDl1U2ZwOC9xUm1MajcrN0krWnZodjN3MGlxNWlWLzh4cTAKSnFtVEIvOGp0Nk5USzVrWW8yRDdlVHpuVitZT0dCL0dzUjc1dVdoQkJIV2tpQVBkdm9kVXJ1N2ZyYjQyZnRjQQphTjF6UTN0aFZwVVU0QTJYUkVhYVVBbkFZelRMNThDenJ2UWZScy8xdlFpWXBNb1c3SVdBNU9EMFgvSWsyOXk0CndBcVB4Mkp3MFYrMXZWSnFkUXJ3Wm9TZVpQVmpOdytNVU1LOTd2eXBFeTBxTnJuN0dmWUpYQmQrYVcrWjJBNnUKWmxFSzZFczlwdDNVVGlzOTNXQi9MRE1kMDdKNDdlWWVyWndMVzZjcFJMUGVaWStvOHh4aU1DTTYxbmFERzg5SApvVDBmTmxoMDBzU0x0NmNDZ2dFQkFNMk5VT0RtWjhKWk5DNmhYUTY4WUdCWVhFN2pNc0NnRTFXZy9FNHhSM25XCjR6L3RBai90SDBmMzUyMHFjRkFTb0JmVFBXVHZJMVhKeEo2RVFqRTZJWWZ6eGlEcVZiZFdqRjgxckJCZ3JSZkUKZmRUdDlSVHlJRmJXMEtGclhaRmNXS0tRczZSa3J6Zk9TU1o0OEtVQi9OL0I2MFhLUG82SVdodlQzcGhpWnVpNApnUVp1SEw2QlpQc1lpaHdpUnozUFU5WVNwUVJvYjY0bzBPeWZxTGVhZVhob0xOYWw3M05ib21WbStneXkxcWkwCm42Q3F6MHAvb3A3d3JqUitNeThLdVJrdFdDUk5wTHRWRzFpOVUwVlk4UnRJRlJDaWhsVXNobnM0dGNwbFVtREQKOW5QUDBXZnRUb1VCTnNUK0pXUEtIV1lKcW5TQVRTOW4xaUVrNm40SldsOENnZ0VCQU5xZWswektDSzNSNElOYgp5L2YvTndkSlp3OGh2eU9aeDNhRjQ3U2xrV0hUN3U3WkJGd3p0Zlo0aDI3U3NhUmNGWDgyMytMc0ZrUnpoM3ZNCnR0UEZzeVMzcU5jbDA3TTRhSzVkSE5yb3F3S3liNCtLL0NPMDk4Wm4zYnEzTkorZTE2b05NYlc5d2hZeXJrNmkKRDZLMStKdDR0di8vZlRkekVMQUI0aW5KV2syRkNRd0pKaUZ1eXZzNFFXQTN4MWwzL2d5UFhncUNaTHVDOU4xMAp4Z3QxYmJ3aGVibnozVTVrRVlSVFNleWNLRWFtWW5QeWlPcWpMUTF6SHNvT3c4b2ZGSGRtZjNQV1FiQm9nV05lCnV1T05MeitxY3dGR0paUmNlR0NnbjNUa1NGN0NHUFRIM0RQcGdOTTVTYzhmcFZNcVRteVNzUm1Dc01oWkMyTFAKcUp1c0R2OENnZ0VBSFNHUi9NMnFsdGlkbEo0NTJnVElnOThCOWd3cy9TK3lqY2dxK2NueUgwcGRHb28wYjJyagpyQWR1UFFKdXVHcHJWZlVTRm1QdDFoS3FVdXpibEs1d1lod2lVRGZsdmYzK0Z1QThhblhKRWowK3VCYWhUVDZqClpxczdGaVZwTlZpcEZ5RDYxS21RUzVCb3ZaTVdSOHhvVWkzaGNocWZrd093QVpHZFVtdGZ1a3VydllXTmZWSkoKUld6TTVmL1ZxT1RoTk0yZnBXaEhxNThOUFB2RHBZRzNCV0YrT1UxN0NoWktoYVI2ZTZJODJkdi9ZMzNSc3ZVegp6dUs5VGFNMURjMnZQZW8zTzYzbFVzZFZBTmFVSHBma1U4Rjdlc2dOMGJSbHVzRG13ckJwWkYxaGFEaGpyUjdzCnFkenFMakQyaTVYeFpLeXFBNmpMUjVTbnZEckhJT1dpY1FLQ0FRRUFucHA0WU5TOURkOHZjUVNGWlR6MFpUS3IKNStkaXFyNFVhUndFbExiVmlKWVlFMVduMTUxcnRlZnVaUjdJR0lJdjNXakNWKy9LMVdSNHNYS2IxUEpxT2xHdApsbXpnWkNxT1kwUEdpSEVUT2xUOUhxN1hUNlpuMVBpeXZtTFlDMTF0NWtHTko4ZFFCUHZaQngyc2h4UHh5NzhmCkQzTUxwdWJ5cTdzdHNVdDdYQ3NLZEdPckRoQS96ZjNJMDJ5R2ZpUUY1SW5HWWxJcHBHYndzTU90NXprS3Z5VGkKb1A2eGVKNmdWY2lVci9UeDloSmUzY3RHK1h2U091RFRna0RtMFJhWHQwTVA5U0pNd25VdWJaVnBjdVVieXk4LwprcDdWS0NOcTNpV3h2OE9NOXJPZW93TTE0TUY3RmlQUUNKMUkyUnlyY1NVN0hUWG1vMVNQeERqcFRFcXBtQT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
        },
        "cloudProviderBackoff": {
            "defaultValue": "false",
            "metadata": {
                "description": "Enable cloudprovider backoff?"
            },
            "type": "string"
        },
        "cloudProviderBackoffDuration": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, how long until timeout"
            },
            "type": "string"
        },
        "cloudProviderBackoffExponent": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, retry exponent"
            },
            "type": "string"
        },
        "cloudProviderBackoffJitter": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, jitter factor between retries"
            },
            "type": "string"
        },
        "cloudProviderBackoffRetries": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, how many times to retry"
            },
            "type": "string"
        },
        "cloudProviderRatelimit": {
            "defaultValue": "false",
            "metadata": {
                "description": "Enable cloudprovider rate limiting?"
            },
            "type": "string"
        },
        "cloudProviderRatelimitBucket": {
            "defaultValue": "0",
            "metadata": {
                "description": "If rate limiting enabled, bucket size"
            },
            "type": "string"
        },
        "cloudProviderRatelimitQPS": {
            "defaultValue": "0",
            "metadata": {
                "description": "If rate limiting enabled, target maximum QPS"
            },
            "type": "string"
        },
        "cniPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.0.tgz",
            "type": "string"
        },
        "containerRuntime": {
            "allowedValues": [
                "docker",
                "clear-containers"
            ],
            "defaultValue": "docker",
            "metadata": {
                "description": "The container runtime to use (docker|clear-containers)"
            },
            "type": "string"
        },
        "dockerBridgeCidr": {
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "Docker bridge network IP address and subnet"
            },
            "type": "string"
        },
        "dockerEngineDownloadRepo": {
            "defaultValue": "https://aptdocker.azureedge.net/repo",
            "metadata": {
                "description": "The docker engine download url for kubernetes."
            },
            "type": "string"
        },
        "dockerEngineVersion": {
            "allowedValues": [
                "17.05.*",
                "17.04.*",
                "17.03.*",
                "1.13.*",
                "1.12.*",
                "1.11.*"
            ],
            "defaultValue": "1.13.*",
            "metadata": {
                "description": "The docker engine version to install."
            },
            "type": "string"
        },
        "etcdClientCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQUljUlBhQk1MbjJJeUlaNmQzRnpCWjh3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESTBNVFF3TWpBMFdoY05NakF3TkRJek1UUXdNakEwV2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa1kyeHBaVzUwTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBeHNGZmFpSllHUFdkWXN3alFnK0p3SytYVWVJTXJKSDB4cGcvTXJod0dkbWZacHRJZ0QrS3JaSDEKZU9zWUVVVWJUcldySzF4Yy9XVldEcDVxOHFGVExRU2VGRjVtWDBrT2djQVNITzE1dW11bVd1d1dDUzhmZ2JoTwpWNlhzcEcyYWtBbE1sR3JkdENObTZTYVBuZlBTakl5NGhUZmttUnpIUE05RFFlb05qZ1VuL3lHUElBeG96OEM5CjFQWWlUVkRaZWhKR1hJd1NYUUxLNGtnY1FWdis2VlhKcmxCa1Z5RmpBYVZrYlBXTFMrTHJUQTNac05xUjN2d1QKOXV6c2J1dmFCdDJMY1FtRDhJaFp6YnlKUEF0TUdlWnBlaXhwK2tCY3RkdTczM3Boa2pHK3A2clI4aklvbTc0RAo0UXU5c2FJdWlYOE95VW92TmRHTGp4VzRxRHRoMUFtR3UrSXRiNm56eWdBVGc0VTNHQ3FhbHhVNDNnT3AwK1hrCk1QUHNRZDBRNDcwL045ZGtlUmI4ZEUyWEtxcVB1SzBLRmc3R1o5ZjhVZHFnZGNYRjhGbGM5eW9GaXRlVHhHOHYKQ2dyYklpTnAwRlBhWjE0Q1p3SUNpM1pEUEIzL1dVQlBBdi9LK3RyQmVHZ3ljdVNncjFZUkZlVjc0UUtzYm5lRgpxa29Na01uMXYwYUxHcDRDRXJDdk5FcGRBV1lOR1pkL05pM3RUVTQ3enZ4NGp4MVNCMmpaSVRaS1ViVExzQmNFCnVGME9KY2kyMGJJMFJ2NHBlMU1HcWdxL0g5eWx6WDlTMHdpQVRkaURnSENBRTkveGl2UksxM0NQRS81K3JZUVUKc0NZdDZOdmY1ZkZRRTRWckxSRVhDa2EydlB6ZUxsUmh2NmFqUlcvSnN5TzU0QzZoS3JrQ0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkFyLy93V0hCQXIvL3crSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUVwMVMwUUFDVEdmYTB3Q0F5VVlmaFovbDQ1b3kyaVY2eWtXRGhPRgpSNHRKU2VwSFNjZW5PSUE5Z3hucEhsenNtaTVmRXNVZytoMGRKUjJiYVJEOFFoajMrVUhqemVMOG9hdzZzT0FtCjVEd1NJdEFpUzgrTWo5bElKTnJvaHBKRnZpVmNIVjdjdVcrSlA4NDR3UVJ5dWtqcDVsS2daR3VzbVJlbjFyYUQKR1grNWdTQjJoMExkaWlLdkxYeWRQeEd3bnZMZFNxZGdiT3hoT3c1cExuSWJIWTRuNXRPQTNNaWVqTzVjNW5pYQpXb0JzQXZqT2FmWWEvRVhOSkZHd0FVMkUyL0lvRXlObTdUMjR2Z1kzVmQrMzBsYks5RGkySGFFUENvL0t0M3J6CmRoTHpxa25yejVPdEplc0pTanNPaDRVRmJoUHI0UngwWEtjcHYyeDB1QzRVQU9HR1RqcCtpR05meXpjWkJwcncKM0RkSHFGQjFRRkVTZ1VOMm9ZS0RJbzJwKzNNdFFLRWFTVnpyZGNhUkFPV3YxM005amNQUVJGVVlIYXNyTFlSegpveURoSmdHbmUzZ1hkV2htZkY2cGZ0SnVabHFyYXRGZW1VbjM0T3NJNk9IRVVpaDAwdzZNRFc2c1Nla21Pb2RiCllqYkkyT3JOT1hoSHdUbTJlaG1GOTlYVS93QklWUG00dTRoME8rVXpYb3htdzM2VHVwRlVtbkFtdm1FOXpPcDQKVXBuQzhiMmlEdlNkbDUrOXVPZklxbUpFajhlV2g5aEZkTS9FRnNBUEIrQW9LUDAveVQ5aGdiQkt3VngxU0RhSwowUGpXdlZ0d2tQY0dpNVRDMW5uelRWNGNXSFJMelU5RWc4MDRZSDhWNEIwbExYcm9XTWxGM2hCWDdFaVJlelgyCnJaSkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdClientPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBeHNGZmFpSllHUFdkWXN3alFnK0p3SytYVWVJTXJKSDB4cGcvTXJod0dkbWZacHRJCmdEK0tyWkgxZU9zWUVVVWJUcldySzF4Yy9XVldEcDVxOHFGVExRU2VGRjVtWDBrT2djQVNITzE1dW11bVd1d1cKQ1M4ZmdiaE9WNlhzcEcyYWtBbE1sR3JkdENObTZTYVBuZlBTakl5NGhUZmttUnpIUE05RFFlb05qZ1VuL3lHUApJQXhvejhDOTFQWWlUVkRaZWhKR1hJd1NYUUxLNGtnY1FWdis2VlhKcmxCa1Z5RmpBYVZrYlBXTFMrTHJUQTNaCnNOcVIzdndUOXV6c2J1dmFCdDJMY1FtRDhJaFp6YnlKUEF0TUdlWnBlaXhwK2tCY3RkdTczM3Boa2pHK3A2clIKOGpJb203NEQ0UXU5c2FJdWlYOE95VW92TmRHTGp4VzRxRHRoMUFtR3UrSXRiNm56eWdBVGc0VTNHQ3FhbHhVNAozZ09wMCtYa01QUHNRZDBRNDcwL045ZGtlUmI4ZEUyWEtxcVB1SzBLRmc3R1o5ZjhVZHFnZGNYRjhGbGM5eW9GCml0ZVR4Rzh2Q2dyYklpTnAwRlBhWjE0Q1p3SUNpM1pEUEIzL1dVQlBBdi9LK3RyQmVHZ3ljdVNncjFZUkZlVjcKNFFLc2JuZUZxa29Na01uMXYwYUxHcDRDRXJDdk5FcGRBV1lOR1pkL05pM3RUVTQ3enZ4NGp4MVNCMmpaSVRaSwpVYlRMc0JjRXVGME9KY2kyMGJJMFJ2NHBlMU1HcWdxL0g5eWx6WDlTMHdpQVRkaURnSENBRTkveGl2UksxM0NQCkUvNStyWVFVc0NZdDZOdmY1ZkZRRTRWckxSRVhDa2EydlB6ZUxsUmh2NmFqUlcvSnN5TzU0QzZoS3JrQ0F3RUEKQVFLQ0FnQUh4MmU1bXJDQ0FaTHdXL2NCVGVSaFV6NEQ2V24va3hMV2R2ejZPamZBKzBCKzNwTCsyZjNPZjBqeApPNXBNaXJ6ZjNzSmRSeGNvbjcrM2dNSEV6MFdYSEhnbmFlNXR5a2swRU5Wa3BuSytOaHBqc3B2R0xqNzRiOE01Ck1QaExFek1hY2hLNk9GaUhCVit3dmw2ZW12MWhuTnhYOG5FVEFRcFhPZkZ5OGZzbjFOSFU3WFpSbGNyQVh0WFAKTVBiMHViWlpUYi9OUFhvMmc3WjNGc1ZzVlhKcnBYem9RcU02dWNiTE9MTHVoTW0zNWFDNThFelYzQ2diWnhoTQo4TWJzTEhUekVkYTBUT0FLR1B3U3prODh0MkI2SHdkL3paODBPVEtudDNycDZ6dElZb1FJd2VuSHBlanE5NHZsClVmVlJyM3hNeTFsRHpaQjlkYjhWa1k4Um5vbGNsbjNXaGhJZGhVSmJlUmNMRFBxVU5VWkNHUDlEMkxTU04xK3IKZklKRkttSkg2eDlIWXFVWmdxckFaR2FvQU9GbURSSGdsWG1mUFpyR2JMRVhnbXllUGVjZWN3c08zdGJHdFVELwpuTzcrR1JaMXcvWGI5Zks5YTJBck1ucVlPdERDSHpOOUpqMGExTjRmQ3RRWUcwNkNyWFdQQ1FwV2dySzZjeHNKCjZKWjVwbEJZQ1NPVVhUMnRMSzhOd096WE9aYXQ5aTVzMS9BQ3hsSU92ZzFjTjdaemI0TTllMFpZQ0hMU21DTEwKNEZ3VHZEZFZPRHg1RWFKUWxqMWJ1MkIwU2VlT1V1cHpHb2U1bXA1dHlkRHhPa3ZETER5RTBvdnlranBBcVhCUwpDUU9IbUljTEF4bm1jdGlWOXFJMGRUaVdIZ2pwOEVJdmdOVWRRN2tTZHpmTVdJcWJkUUtDQVFFQTVmQk5EbXBNCnBxc1Y5WExWblJsR1pWWmcyclBZVkdkQ3d2Rzhjc0R4cW1UZzFuL1NZYUo2VXFNaWlqZGF3c3VXU08zeDl5aWoKeVpzMnNzKzVCNi9ibk5ON2drQ3RWV0liN3ZpWk0rMHhQT3VrYVlwWkxwYzgzanVJYTJhZjNBc3dCRjhoOFJHUApsbVpaSTBOcklRZUhTSUgzMXlJMzhwSHFVYU1EV0FFNStSOWl3RUo0UExQWmlISllNa0ovU0ZrSnVkVkNqc1hKCmxNajFjaTZXNndGbkc0ME5UQlF0QWJ4SlBnejFvd1Q2N0N6Ull4UFRSem5OV0EvQXZ0QVRkbWZGOGkyTEc4VE4KeDNlQWJ6OHRWMmlhQ3NzTjJXWmRMQ2hHNklaYkE4bVB2N0NoUm9wTmtoRUEyZkthWHpnNjZCMkJpYUV1T0YxUwpQd2RBVXRERDJYVXBpd0tDQVFFQTNVaEl0ZlRoWjAwRmlhREQzSk40anpteDloM3diZGlVNzBKcHRURWliQVBvCno5OWlFd0NPdFkwMlRUTkNPbmJrWFllcVpRdGhVNHJyNXJEaEhxOVFxdFhtQ0FlK1I2VEhWbXh5MTZyZWJheEwKejVvMzdFZVk2VzY2SHI1bUJjWENDaXhUZGhqVFhjK2FpSmFDZS9uNERMeXQwTHUydTR0N0ZSSENPc09PT29nVQpVVG5RRzlaUTMvVEJ2MnJXRytxWnRlY2hNa2dVYUorT1lFTEJzaGs0TlhuampzNjI3MEhNalpOMGtGSnFOVnZaCkIyWEpQS01CM0czN1NiZ3daS2t5aFM4UFZsZmhwRUdPQU1nSVBtRjRwYW1aaytOd0N0aENIQnRQVC9KUFV0Qm0KU1hpck9tajJmNVdCMDZEb09DNHA3aXV1eFlxQm9PZ243dXp5WVhQZFN3S0NBUUJXTCtWaU10djZXUVNKRlBzVwp3S09QVm5wRlg4WUZsUk1FS1VJZXJVMm9OZG5FN1BKNW9FSkRlVngzL0ZtcnpFM1Bsa2p0QUxHcjN0NzQxVDJnCnNQMGJZblhZRTlBa3dmcUFiM1JWYjJIV1dPa3VtaW5sZWREWjUreXhmUzBNZUxFTjRtN0JnbmlVd2xaRkRuODQKU1M4Zk1ZQXBobXo4SWs5M1BDZ0RzNm44UkJScXhqOTFXV0IvY1lTM2lnOVZtZkk0VXNSNDZaQXVrY2pXZkxvYQo2bEt3bEFWWTcvTVN4SFdicVpYay9mZmowTVRIWTJYOU82QkprdFlIYjh6cncrZ0JaNnJOeE0zeEowemY1Z2xqCnl4UjZXVFFldWV6UW9XUTZ3aW1aV05MbDRob0JhOU81blYvNVVhTWxiOWs4cWRxbE1PSTNSRnVRdm5JUTJLbWcKZC9jVEFvSUJBUURLbHlCQ3ZvVVRUM2Z2YmltRHE5eG52Sm5LeTlSUXJVYUYydGJ1MWFJL0pFRWs5ODVSdVdQdQpvZStDTkpqQThCTFo4cGcxVkhyeHdyR0JqcFU4dzZObUZOazZwdVExc1kzeStPMFh1TTlWdDdYY3hzUEdaaktBCkhTajNkcmZ2TndRVXprcEhTQ2xUclBzOWJCYmdySlhHQzRSVEkxa0VVWW9KV3kzcElScjVTWmJZV3NiR2hhdWIKcnZrbmFBZkluVHZIUjJta0lFdlhFYVdIU2ZjT09IcTJzdlo4eTVLK2NBNTMyL1dQSUhVdWp2MmZBVGlCZEhnQwp1UXFranFaM3NsU1hqT05NMkw2ejVIUy9FR1JEd0hkMXJGWDRDUFdPYURuMmc2WlVlbkxYVGdjbjR2dFpTYm5NClN6UUdiajNOR2E2MzZIUmxWUTZqSTRsVC9NbFlJWDBMQW9JQkFHSkxxRjdHMHRaRXNsQUpVNUxMczBjcFJMcEcKeTZxRG5jZFhEaUhlQVJxNFM5WTRaL0ZSYTJDYzgwY1FSaEgxb0xNdWp0bGozUzBiWDVPeEF4QUxsOERRaTZFeAp3N0tORGM1KzBCWmQ2OWJQNUZHejNtOEdsanBWWjN3ek1wb0s5bnJlRmhpOHdIalNvdXlnbHNwNXFLQVZQdTIyClNQaEFQKy9TaDZIajBteEdraTJBYzB5L2k4MElYZlg1a0F5dWE3cXlEcU5QVGY5WlI4Z2dWM3RLZE9tNDFQL2wKc2gzaWYvY3lPbFdOdjlKL2VMWE9CSW5ocnBVbXV3NnVhU2JBRFNiVHgxY3VsbjVRZy9zVVgrcHFSU1JwRTdNTgpnNjU2S0xQUUNZTE9CMGdJVjZCQzJuV2FORmNTKzdnZXdXbnh0aFA1a1hWMW5UT241bVdSVTJkWUgxND0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdDiskSizeGB": {
            "defaultValue": "256",
            "metadata": {
                "description": "Size in GB to allocate for etcd volume"
            },
            "type": "string"
        },
        "etcdDownloadURLBase": {
            "defaultValue": "https://acs-mirror.azureedge.net/github-coreos",
            "metadata": {
                "description": "etcd image base URL"
            },
            "type": "string"
        },
        "etcdPeerCertificate0": {
            "metadata": {
                "description": "The base 64 server certificates used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEVENDQXZXZ0F3SUJBZ0lSQU16Sm1JaUdjb0I2M2V4SVhiazdwa1V3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESTBNVFF3TWpBMFdoY05NakF3TkRJek1UUXdNakEwV2pBVApNUkV3RHdZRFZRUURFd2hsZEdOa2NHVmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBSnR1cW9mdXc4QURkTlFOQXpPeHFiUGdBdUJRZU5FL2pkMzJFcGNncmowZkFXZ1lOQVI2RldhUXJpbnUKZEpsSDhGc0Q1bC8yKzJEcnB6RXRVMytwNVlhdm5ma2pLTWx1YWJCTEs2Wjk1K0lZaG9VNEE3dWJqbGJxVVRVZgpWNXdxZG9YQkV6MTNWUXVPQTFtV3hmSzAzOWluZStSdFkvUHliN1hqNUtPSDdrWjM0b1lWd1RVV0M4eGRwWnV2CkwxY09yZ2Q2ZHBENXJSZEs0OFcxY3dzei81bTJhaWRhY0I1NUNIVEdqVzFxYTNNaVZMVGV3bjRrMzI4SXNvbm8KWkVlS0VSSEdWTkl5dld5Mmo2UXNHbGUvNEpYT1RTNEE5Zklnb1lBeERKSnVtdXNvdkRDOG1aejN6TStSbGVWTwowck1WYU1pMDdFQU5NQ0NVRkh1eWlmNmtNTnVRUmZja3kyNVBveGxjSnA5aGV6N09nS0JHTGlCbDdjNlM2QThuCkM4RmdmbjY4ZVgwbVEvanBiWlFLN0prYU1lcUdXQVgyTXJGUXphek1RRTJlYWRJUDlsZzdlNVNXVmRZcUZhZkcKYUVtc2YvWEpVTjdITWFZWDVoWXhVUHlGSW5oS0lTdDkxajd5UU8zS0pSNXd5OUV3SnkyalB4VTVBa0JmQkRRTQpjOXRFbStLVW5TK01JMCtlR3dtUkJKNHJKNndaUDZ5MTFSS0lvVW85bkhEUGJ0emJFZDlxTWRsQ05QZWZRcGZ1Ckg5bXBNZW0wVEtHeWhwKzZlSkNHM2Qwd2twaGlTSHQrYzhYZ01mQmRFK3RTOWNET25PWVgyNk5CWHRzWlV6YVEKWUJXcGUzQ3VyZXM3bjhMbG93VDJOV1lNQUtybHgzVzZGVlpJT1Jtajd3OGVNRzhOQWdNQkFBR2pZakJnTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWhCZ05WSFJFRUdqQVlod1FLLy84Rmh3UUsvLzhQaHdRS0FBQUJod1IvQUFBQk1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUNmVm1VOSs1Q0ZJQ3RNMEgyNU50c1hVVzBqSm4zN3pKYXNkVVZ1c2VjZwpWN0RhMWdybEhBbkJKWDVib3BUYVkxNWRpSnlXRFNuWU5NYk1YZFY3KzRLcmVWZEdzSWVldmRsNFNqdTN3V2hnCkRzZFBlNEphaWZ2QzJXRTFmUVdwcXgwaDZ4L1VYOVh4Tk9vdE16eHhsYmZ4a1lqYjY2UktBZ2lmcjQraG0vQncKNzE2TmRFN2NpcXVaYlIrQ2YyWVJNcTRudnhZZVpzaHFldGRHSEJMczBYTEtFdGl6YzF6aVc5OWtKTjM2ZW1WVwpvWndMSEVIQlhaNzdVU3o4VXRxNUxyK05JNFNCcXJ0WUYrMndIZmJjQThuUkU3VmJxOG8wL0xhcTF4a29KLytBCjN4TkdIc1BMSDJKeUwxbjVzT2NDRHlFV3ljWmwyZGJnQXFuN1haaFNOajhKVWdDQlZWckRkVkJYVTZCTXgvVWoKQWFMQmtWaHZPaDhKQW40UjdTSEpPYmtpYStydXgydEtIMVl1YjNSSWJWZnFjdVBEemRXa29yZFZGVHk4alp4aQpjSnYxdmExc2RmTUxWekY0RG9qdW1yczd5aUVGblB5ZDFvcFBKVGR1OWxXdTB6SHZLTUltaU4zTmFSWXVrZkY0CnRvTElrNTJ5dWx0ZHdpMEdEQ0VITmhMRE9yV0ZaMmFPZDUrUWt2K2RBb0dPZnZFcTRBSEpyT2R3djNsOFRneXAKclFpcktKM0dMUGttNWpmeStFTVY5NHpaR1RNdm5aenJwVzhxekoxbEhTSlJGQlc3V0ZmMVFZdGRMN2ZDa0psNQp1UDNoQTlzU0lMKzNXM1BFZ0w2V25OTkVYUUlPRHlTNlJMYjBXZndhazhkeEdxM2d1bEVvc3VXRVk4SjJVNW56CldRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdPeerPrivateKey0": {
            "metadata": {
                "description": "The base 64 server private keys used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBbTI2cWgrN0R3QU4wMUEwRE03R3BzK0FDNEZCNDBUK04zZllTbHlDdVBSOEJhQmcwCkJIb1ZacEN1S2U1MG1VZndXd1BtWC9iN1lPdW5NUzFUZjZubGhxK2QrU01veVc1cHNFc3JwbjNuNGhpR2hUZ0QKdTV1T1Z1cFJOUjlYbkNwMmhjRVRQWGRWQzQ0RFdaYkY4clRmMktkNzVHMWo4L0p2dGVQa280ZnVSbmZpaGhYQgpOUllMekYybG02OHZWdzZ1QjNwMmtQbXRGMHJqeGJWekN6UC9tYlpxSjFwd0hua0lkTWFOYldwcmN5SlV0TjdDCmZpVGZid2l5aWVoa1I0b1JFY1pVMGpLOWJMYVBwQ3dhVjcvZ2xjNU5MZ0QxOGlDaGdERU1rbTZhNnlpOE1MeVoKblBmTXo1R1Y1VTdTc3hWb3lMVHNRQTB3SUpRVWU3S0ovcVF3MjVCRjl5VExiaytqR1Z3bW4yRjdQczZBb0VZdQpJR1h0enBMb0R5Y0x3V0IrZnJ4NWZTWkQrT2x0bEFyc21Sb3g2b1pZQmZZeXNWRE5yTXhBVFo1cDBnLzJXRHQ3CmxKWlYxaW9WcDhab1NheC85Y2xRM3NjeHBoZm1GakZRL0lVaWVFb2hLMzNXUHZKQTdjb2xIbkRMMFRBbkxhTS8KRlRrQ1FGOEVOQXh6MjBTYjRwU2RMNHdqVDU0YkNaRUVuaXNuckJrL3JMWFZFb2loU2oyY2NNOXUzTnNSMzJveAoyVUkwOTU5Q2wrNGYyYWt4NmJSTW9iS0duN3A0a0liZDNUQ1NtR0pJZTM1enhlQXg4RjBUNjFMMXdNNmM1aGZiCm8wRmUyeGxUTnBCZ0ZhbDdjSzZ0Nnp1Znd1V2pCUFkxWmd3QXF1WEhkYm9WVmtnNUdhUHZEeDR3YncwQ0F3RUEKQVFLQ0FnQk9mUFcwS3NmQ2dIeFFVRG5ic3MxbFBhdDJKbXk4RFlIUUllQ0ZYRVZnSy9ZRDRLVHoxY3BVdnA2VQpJZ3ZURTFhMlB5UG9OY24reVVEbVBtTTV4a3RYVmZ0SndZMXBHazVZYmIwZkY5a3VmUUFBNmFaSTZHWmFVWHlzCmZLVTdBTjVVOElpTXMyUElyKy9WSDZQWnlhaDN1U3VBMEJSM0xXZG56Q3E2d1h0N0xqSy9UdUQvczZCRmxNeDUKNzE3U2NXRkQrWDFCL0RLQjNwbGlUeHhHL2YwR1crMEM3bEpMc1FhcUlWRnRmUjNCU0FiS1J1cWoxRzdYbk9hNwphUlNxWTNmM0o5WFJSem9NV2F2elZTb0FRYTVoTjRvVnZ2cHpTRE1GanI4d2VwWFVSZit5QktyMWJ0U0h4SmFTCjh0akhBZnFsejJhMWVYTmlJQ1N2eWhxUThjeVJhYTVpR1dxSERlVHdpWndndjNiVXZMYnpSWDNpcmx6TUxUWUQKajZaMkVHWXZzV1BpSjdZUkZ5TTVzWFQ2aEl0bjZ6ZitEcURCZzhiL2FoMUluOFNmd2JsYUVReVhPeTFKRlZ1Vwp5VkN3cFdFR1EzSGgyQjJJMTIzRmQySDFlWDIwbXZPbHovNkI3QnluRVE3Wk0wSHVUak9MdnJIdDdmNUhsZ1FKCmNuV0hYT2ZIQzNiNW5Nc1JJYTdIaERHeGNBbkIxN3N0eDJHMzd1bHR5QXJPdHBzcU4reW5oaEJWTnZoNzVua3MKYVRWVjZJREV0RjdaUVlrNlIxWDlwVlVuNXlXZTZmQ2NpTTJKUUlwUmFqV0xVQUk3Y01mVy9DTDJyS0lDdWVpegozTDZHd24rS0NvTEFKN3ROSWFIZExXcWM1THp2K01OeEE1dVE2MTU1SGFWZzdrZ0g2UUtDQVFFQXhEWktMVFJyCkxpVEk5VTdGT2ZNT3J4OXJ6MTRoZnpscHU2UmpFU3hYUTM1YURBWFgxNjFiQ2hLQmx4TGozOFNVT2IvMEFJK3kKMHZkZ0FwUXFlK3EvSlo4dGN1blBKc21FQ3lKemlvRWhvUjhLWVE5Q1pPS3I4aXZDTFFOTjZWWm9URDBiL1l4RgpQOGRNY3RMdG9FcXl5VndTb1hzZUJXNkdxMEVYMGRxMW1rREVKVnRZSjA5KzAreVJ5cWlKUFlXQk5RTC9RcTVnCmVla2lucDRpZGpFRHIvQjRPaXd1eUFLemh5SzFOYzdnTU8vWnk3U3FwMTd6ZTRLVkwvZXp6eDVHMFhmK1lQcDEKbmtYUDRoREpjYUpjT3ZBbDVBQndObVV6MG01NzRpOU9UNW1QWDhqQ2NkRHg5WFFDUjI1UmZsYnNGOTJEaEZrZwpocUMzT0hWckY5RGN1d0tDQVFFQXlzdFBoZnNiUXpDQnRDMlBKMTEwamdBWDB0ODN5VlJBbjMxWHFZODY1NFBkCkI4NEVEaFp5c3VlbXdNaHRTcGhQNjVkTlhSbmJlZk1zM01JaHBESS9pQU5nbXJGTWs5TGwyV3J5K0ZCWU9JcU8KRlFGWmVMc2MwM3FVbFl6bjN3NW0xMkdpSjM5NW0zY1ZlQ0xKQ0p2MjV5Q05mYlQwTDJucENwcXdRSnZqQ3lwRwo3YVByY2poWTVnZTRFS3hsSGZDL0FBdk81Tm9lZFYvNnpqRHI3UldPSkFtNG16anRYVHlmK0RjQ0Q3clpsY21BCmkzSVlQZFdoa1FocWJWTndsM3VxdXBzQVpFekpqTm9tV3Y3QituaER4VFFNRnFHN3g0Z040YnVFR2t5cFZFdUQKTW52dmN1Rk1KSWV6THJHMld0OXdvWnYxUjlEL3dVSjBUYkNESHR0SzF3S0NBUUVBd2Nabi9UcmVldVREUGxoNwp1UjVNcXpDWjFXSytMQm8wVEtjdFcyRnlFT3J3M1J6TUxHazlGclp1R3hnQnloVW0yZDJ6aVBaaGdhM2l1TWxCCko3NE81b1hNYWNkMDJIWjluRTE2MUJkeGNlRG83REFZdnUrSkpwS0dvdE8zbHpESnNqbExzbHhjYTM5VkJiVkEKRG1TWEt2dHVQdUlMSlF3aG5YR2NwNWlhYnV0MWl2c3FGVENTTFpOZDdFb0R0Nmxva0VVVWVQTWp2bUk2MlhHTQowVExZMUdIbEtuWkdBU3VCeDN6RWY0NStwSFhMbnowZXFFckNwWUN4KzN4aXJMTFc5N25NbEZQbDR0aEpWSmFGCmkxN3dQUmk4SXU4MzR0Q1JuRW1XdVN0RTZLSGNFWm1BUnMwMmw5VHBCMGh3M1JmVTlFREV5T2tJa1V5WmhmMlkKTlI0RlR3S0NBUUFIR2YyTDdKSTAxU01Gb3o3TEd4dTB5VTRNUldMWHV3cVVTemhocUxGZ1lCN0NZaldFSk1jWgplc0U5S1FlaXdCaTBZRlVHT0p5VjlhMFJnZjdabUNUZlozYmZrK3ZobFZZVk9naU9KNG9mV01MRys0Z2RrVGZlCk5BRzJCdndydEg1bmRuVE9PMG1QNXlpcVQxV0k1cVZMekxrSHVPbUFLNDVNbjhRaVR4TXhWZWFyOWJ5T0FHa2sKalFxbUV0TnJxLzJVUzlXUDhBOTIvc2h5cGdYdEJIODR4ZHBnSFNzNnc1KzZlbnFwQUZzVVFyMHNwTzh5WXlQSQpSMm9xcit4V2NhODEzNjJ3MVh1TllpcExyM1l0aGo2aFRrUktHcG5Qei9Ua2ZjT1BoRFc5elBNb05telpNZ2lQCmt1ejBhcWEvSWVuNHp0UlZFbjJTVC9od3JBaTdjT1I3QW9JQkFCVlRoOFhVWXNxTitBWW9vdnkyNlA0YitEOFQKTnFvMkREWjNOQzNaRzV0REhnaFVTUHltNGRIQmJueS95cUo4aW9yYVprV2V5Vng0MFlpREpWUFZEc3hPUFI1eApPckRlVjd0UGF0ZlhCMVBlS0RJUGordTZibGM0NnE1eG1xZUZ1UzlDUEk0WHNQaUxJTkx5WUFlbjZmSkc2RDYwCis3S1VBalVXU2ZSVytwTy81TTdtMytlOHRaSHBHRmpib0dleGxTWUZxMFBud3EwZkJIYjkxTTdXVUE3OU85MUYKL1FaVnFwdXExTis5ME5HRTFKWlRnTWdLL1laWjJNZDkyOHJPbHpvWDZhNXlpWVZhd3F5T0JoZjEvcU9PQisxOApQRG96ejlHMTI3NzlwYnJoR29BVzBCc3BpQURFbzQrckMvSTZCUFVRNGhJZjJCVVhXdVF0Z2dWRmh0UT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdServerCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEakNDQXZhZ0F3SUJBZ0lRRytucnYxdi8xMXVMQ2s2L0FmczJNREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBME1qUXhOREF5TURSYUZ3MHlNREEwTWpNeE5EQXlNRFJhTUJVeApFekFSQmdOVkJBTVRDbVYwWTJSelpYSjJaWEl3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLCkFvSUNBUUM3bWF0dTVRbm45YlhCaE1lZ1owdVlhTzVseTJUQXZFRjl2ZGZ1MlV1QVp6VTFVeGt2dzJVcGxLLysKTFBUV2FJQXlXK083d0YwcTNvQ2xnY2FqSDY5T3AxQmt6R2REUmNJMEJyeWhmQ0l5d0prbGJSZHBFSTluRmZsTQp1QXMzMHlza2VLOTB6Vyt6aXZ5VDVCY3g2Tm11TmRLeE5aTDRLd2NFR3FHMHdHSzRacDJGWnQzL29HdDZYY2dRClpsUkZBTFZrS0xQckZSNkllclhiNW1Hd1FHcnpZb1JEckxPUkhwUDQ5ZzMzaUZVcGh3a2M1OGZQTFlxSHpGZE8Kanp0TFF6SXpnVVd3L0I4YlJJRGgyZjVVN3dKbjl5dkxiN083UE9mWks1amdvblM3eDZGdWRMMU0ySGJTWHp5NgpVZHFZQnBYbk5EaDZMRGtzQVV1ZmsvbHFYSkJsVFRLS0w5TGt6YnUrM2NPZGNyOWsyb1ova0JEVHFkV0UvQXlxCjBFS2tpWHY2UVBYZEVZZkFycGtHbEUvTmJ6bmgrTDN5bThFVUZVMm1Ka2hUOG5nVC9BY0pMd3lGdDQveG9JUDUKUG5sd3h6K2tVcjBIc0xRTEtkRnZVQVFWOEhURExKT3NRMEJZK09YMTBheEpFTDhFOTlTN0cxL240RHZTQnlKWgo3NHZScG9LU1g3WUVlN01tWTJ4Vk44Ukt2dlNwZ1VwQUhlZTV1eEVEQkJNYkh3QzVqQm1sNFduRVZmcWs3enhaCmZma2JMK1BDNmhFY0JCU1hiQ0dHendJdjgvdFFDcUdHc3JYZm5VNjM5Y1dFL1VHQW4yRjlyUHFnM3ZCdnA5bTIKZFBRRFNPOGZtc3ArU1pxYkNzZ3g5QWd4SDNPZ0R1UlZsTXBoM1BaRnNOQ2Z5MWFlaVFJREFRQUJvMkl3WURBTwpCZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHCkExVWRFd0VCL3dRQ01BQXdJUVlEVlIwUkJCb3dHSWNFQ3YvL0JZY0VDdi8vRDRjRUNnQUFBWWNFZndBQUFUQU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBdStQVkh2NldiSnN5cVpSSnRJUkkwK1BrNzd2dmpXTTdZUDZicG1HNAoydVUvcnRBZ2lOUjR1UklkRHByMUJyQlB6dnBId3VsV0VmWmRnQXNxM3RJQVJkSFJ3dklNME1MMzkxSzA2SlhsCnIyeEpoYUhJL3oreXNZVEtsL0hLak94QzkwMXF3ZHBLbllaRmgwZWk4NTRkc2cvdURoNlpMMXEzcXo2Q0NsZWoKTHJHYWEzWC9MUEtNT2F1SkFXcWI4RnFSeXhGcFJIV2hHQS9DdHpTWnRRNTIzTWF6RkxTRDNocFdtSCtUWkZaYQp1cUE1TFRjOHlZSnBxRVY5aC95b1RjdDNSMDBJaVVOc2Yrd1lUaUUyUzQwVEg1UXJYcHhaMkk5V0lMS1ArSjI1CldqVlcva2xBVllSYzV1bFpUL1llUVFBazZzR0ZsNXEwaVJmRlp6cmp3cmRhUk5ZRzc1VjZBT1R2MDEvQ01HRG4KMGNuRWNJKy9ucVgycWZCV1R3NCt4cDhSWkpNRDRLNHNPR0VFV1ZXNlhUS1h2MjNvcTcxWElGUHAvRXRvRGxPZQpWczdPRVowMzFsenZPTHNlclJFb2VuWnA4ZTBQVnRzcDNLQ0dhRkN4V2RLRDRzeFpvYkgzWTNUYWx6OElvaStDCktGNG5EZkJTVGpITnFiWTlpQjFQTXpubWFFektaQThzSE04Mml0eWlIaDMyeTZWbDJBUXFtMkc0dGRRMEtYTHkKZHNDVFQyek5BbldlZWRGNm1mWFJweUlOczBRcGZUd21UeGpXUzBzSDNsckFocXVkYjdLUmdaSXdTeTNKRnlGSwpGYWhTdWUwUG9HdVNWTjJTYTZxNU1wanl3ZXdtV25aOVd5dytHSDdoMzBxaUE0b1JPdHJjR3BCWnpvbmEvbmVTClJzST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdServerPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBdTVtcmJ1VUo1L1cxd1lUSG9HZExtR2p1WmN0a3dMeEJmYjNYN3RsTGdHYzFOVk1aCkw4TmxLWlN2L2l6MDFtaUFNbHZqdThCZEt0NkFwWUhHb3grdlRxZFFaTXhuUTBYQ05BYThvWHdpTXNDWkpXMFgKYVJDUFp4WDVUTGdMTjlNckpIaXZkTTF2czRyOGsrUVhNZWpacmpYU3NUV1MrQ3NIQkJxaHRNQml1R2FkaFdiZAovNkJyZWwzSUVHWlVSUUMxWkNpejZ4VWVpSHExMitaaHNFQnE4MktFUTZ5emtSNlQrUFlOOTRoVktZY0pIT2ZICnp5MktoOHhYVG84N1MwTXlNNEZGc1B3ZkcwU0E0ZG4rVk84Q1ovY3J5Mit6dXp6bjJTdVk0S0owdThlaGJuUzkKVE5oMjBsODh1bEhhbUFhVjV6UTRlaXc1TEFGTG41UDVhbHlRWlUweWlpL1M1TTI3dnQzRG5YSy9aTnFHZjVBUQowNm5WaFB3TXF0QkNwSWw3K2tEMTNSR0h3SzZaQnBSUHpXODU0Zmk5OHB2QkZCVk5waVpJVS9KNEUvd0hDUzhNCmhiZVA4YUNEK1Q1NWNNYy9wRks5QjdDMEN5blJiMUFFRmZCMHd5eVRyRU5BV1BqbDlkR3NTUkMvQlBmVXV4dGYKNStBNzBnY2lXZStMMGFhQ2tsKzJCSHV6Sm1Oc1ZUZkVTcjcwcVlGS1FCM251YnNSQXdRVEd4OEF1WXdacGVGcAp4Rlg2cE84OFdYMzVHeS9qd3VvUkhBUVVsMndoaHM4Q0wvUDdVQXFoaHJLMTM1MU90L1hGaFAxQmdKOWhmYXo2Cm9ON3diNmZadG5UMEEwanZINXJLZmttYW13cklNZlFJTVI5em9BN2tWWlRLWWR6MlJiRFFuOHRXbm9rQ0F3RUEKQVFLQ0FnRUFzYVJBQzVCaW92MnVrSU1WTFRUakJuMUdVYW9aeTgvNERBTjZ0N2VYb1EwWisxYW00TzJibTVZcQpXUHRsRktwN3lqUHRIOXAxM3FRM0dZSWNBRmQrZjNJNzFGY2g2VGZqUDdTcFpoalBvVk56TVZkdDlaVXkxYUNmCkl5Q2JyczhOYVVuR2kwb0ZYZlJjWEFaK1dFcHY1bUVkRTZUeGVJSDE4Tkx2RU9Pa0Y0MUQyQkNpWXU4YkZ4STYKNGh5ajYzdFNTSGVxZHc3V2pOSDE1emJ1aGlGWnBRSkMwSHAyeHhJM2VHWTJyNUN2WTlWMHNhUmhOak9mbkJ2SgpDS0RrdXMzMGVZVU40eHU2c08xYlJZSlJMVWZ0OVZpK1piTnVjL3ltWnFTNzdPcW9zeS9FRTM0RHl3S204V294CmJSVVpjeCs1VHVmS0d4WkpSUHd0Q2Z6ckR1Wjc2M0FQYytnaFM5UnFQUE8yZ3VhZFU2Y0h6ZkFXc09JU0MzVkgKOUNwZlpraE43OFdyVmhKaHBIamdUVktGQitlaFdCTnBYOGlyNTRhVWpnVk5LV28vYnhIelVtd1VlcEtaVGdpYgpoaENBblJ5OXpBWDVJN0VtT0xNQkw1ZHM1T2RsZ3I0ZjBzcGN5ZUFvaXh6N3ZBU21hUE82bWNxYlBXbWQyVXI1CnVtQTdUZjFwR3d0eHpzM2krQnZ2UU5WQkFkUnYrUndoeUhacEV2b2tQSnJ0NUs4dE5HWUNlbldGY0tpNWozRGkKSVJaYlFUQW5maFZsU0pFUlliTkpIdmt5cUgxdVVQeHUwV1IyUWNrS1dtMVErRUprUVpDQ2VoWGVvMGora0p3UAptZ29sY2hjNjRzMlphTXNJRHZyTEhWaG5TRW5COHNibWFuOUFqZzdqd2VyRE82RVFMa2tDZ2dFQkFNY2dwS24vCkNHWjBYcWdmdmtRTnpSaTRrNzZCRUJVeDVOb1N6YWpkWkxRdEpsenZaRlVBcDRmT3puY0xUbjloenpKQlFQUVYKN3g3Tm83em5oSnBNQ05uWFlrMSs5a2w3bHB4Mjg3UVRGcGZ0bG5MYzl0K3lOcExMWGdvVEV1VGdMRklLWUVISApjTHNudjVTODdMdXJDakMrTWd4TU9MNVBvQWJDNkdyQTJTVjhoVTYxNzRsQ3FvbENQU0FsVm9CYXExZ2QxVFgxCjdGUDV5Y1pkVXFoVGwzQzFSelpjYXpSNDcwNTRxQk9aNGVRZytkMDQyNHVFamQzaHQ0SWNiWGxSZm05K2gyWHoKSEJNZzIyRDY2RUxJYnR2dXF1MHRSTWZzT2RxVmZIWllhaGVpR3piR0o5NXhyYklFSjJMNEdtTEJ3d0o5Q2h4ZwpncU5rMk54a1hPU3lDcjhDZ2dFQkFQRXVOQ0kveXNwR1FhSktpTlovSDlRYkczOXZYbjZHUDN1UnAvSXcyVVFpClNLU2J5WmRMaXpHazZRb2tUUjVhdGVYb0c4bUhmRTZyMFBmSVV2YnlTenVuUVcveEpjTnI3aXRiZXN0Z2NsWVYKekh1eitBNVM5d2V5KytrWktqdXgya2tGeW5WQ1o0Z296ekZ5Y0NQTUJZOXcrQ3RwbnFEWFBGWHpEN0hNd0hzdgpwYnllMmJnVHpzT3pqTXFVY0V5TnZpL3RSbmFrK2tlUncwNUljVnc1NU9haXY2ejl5NmM4VXNsNU1Va2ZKUzhjCjVRZ2NsTlJNWi9RUU9weC9sSmNoeVF3Y0NPR24vNm0ySGtuUWxsUXFvQklPd3JXSktGaGljbjg5K3dtR2IyOU8KY2I4OWVsU2R6Uzd4dzUyYjZhK1huZTRIYjcrZU10SFdWQ1NCRjRMYkVMY0NnZ0VBVVd1Q2lOUHo3bGlVdjYvRApEM2FKTHh1QnBicUdCZlNSdTYxR2xFNTZOOFhpVXN1N3ZabjM1bXJrTnY3VGlQaElUU2NyVk9LSEZKUkc2QjNPCk5YenpmWWM0OWJEOUtVeTBaNk9ud0RDeDQwdE5ZZ2dCbGJQNzVvZnJHcmx6MTB2bU0yRjB2RkM5UW5sZE40Y00KVVN2OWpiS25LaW9jWll5UFJWUjZ6Zk91bGtwVkE3c1doNHhQeUxIaDVudjk0NXV2UmVkazM1eC9sbEtqYzAyRApWN3BlU01LR3JLNmJVeWhEeVZWQ2ZFbEdlUTRXdktMYitpOG9CdHFkTzBFK2JnV3BhaE5WYjVVNUhJVXB6bnlwCmJXMGhEeUtHbDFZVU1wN2ZoUVhzajBOVmxmWTlwR2JmdEcvTTh1WUo2TWpEbVMvYStmQ0FxdHUzYnZIMFRpRm4KYmtkeVp3S0NBUUJNZm0wR2w5a0h3clM2ZG8xa0NybmJtaVZraTd3YXdSV05hYXNzdzVXRmFLSkZveXVURXVDNQpCQ2J0a29ucklMWWtqek9RL2FuTmdlMHJTWndXdXM1bHd5eWNCbzRGcDB2SThLREh0SFZQSEdiWXJVSDF1UmFrCm1INFJkbXZRdHg0V253R1JvMWdXOVdxUnNrd2k3bWl0RUJXR0gxK3lmOUdoS1JCSFFqdWlWb0JvakxGZEV0czMKY3RFcXgxMit5ZzRTUVYxaDcvMTVpWis2U251NTFwcmxFNlZiaHJ0NjlVVUVwYTJlRllURHBwUjF1Q3IwRXErOQoxdy9mNXc4SHlDMXQ2ODVkVTkxZ3hHUmk0UWRzOW9BQ2VqQURSOWRHQVNOemZBTU5DRmg3b3hPc3BpRVFpV1EwCmlYV1RuWW5HcVgzcnF1d2tpRlp4KzFxQW9Ya0ZoZG1OQW9JQkFRQ0l0WkFINkxlalBIYlY5djgvWDNzR3h0em8KajA0UHhGbHBvOXJyQWVmNlVyZ05vbnhEaGVxYmJ2SHhqUGJoallIK050NDFTamo4eE5KTTBQZ2FnVmY4UzhLZAo2ZkZBeklqU0Nkc3k0VUFKQy9KNHFTamFNakV5alhOTEMvVGtiZGMraXBQTzVRb1ZNNldETU5lMHg3VGtMREI4Ck0yTkUwWmpIcXEzR1dIVkJoeDFRNzdLM203bjUwK2QyMXhDQ3NYWElXa281YkVYWjdBRUp2ODZuQ2hueDgrR1oKVGt6R0U5OUdxSmU2QWxpUjM1TnlManA5SDhwTW5TRkpkOWlmSHpjWThSbmhQTVNhMHo2ZFZPazljYTF5TWdUSwpiaWtqU1dKZjQydThSUzdvc3hBSHZLUGZReGxnY3V4Z3pScXVnNENCdFQ1UlhRZ05jRTE1ZVZPeWFZQisKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdVersion": {
            "defaultValue": "3.2.16",
            "metadata": {
                "description": "etcd version"
            },
            "type": "string"
        },
        "firstConsecutiveStaticIP": {
            "defaultValue": "10.255.255.5",
            "metadata": {
                "description": "Sets the static IP of the first master"
            },
            "type": "string"
        },
        "fqdnEndpointSuffix": {
            "defaultValue": "cloudapp.azure.com",
            "metadata": {
                "description": "Endpoint of FQDN."
            },
            "type": "string"
        },
        "gcHighThreshold": {
            "defaultValue": 85,
            "metadata": {
                "description": "High Threshold for Image Garbage collection on each node"
            },
            "type": "int"
        },
        "gcLowThreshold": {
            "defaultValue": 80,
            "metadata": {
                "description": "Low Threshold for Image Garbage collection on each node."
            },
            "type": "int"
        },
        "generatorCode": {
            "defaultValue": "acsengine",
            "metadata": {
                "description": "The generator code used to identify the generator"
            },
            "type": "string"
        },
        "kubeClusterCidr": {
            "defaultValue": "10.240.0.0/12",
            "metadata": {
                "description": "Kubernetes cluster subnet"
            },
            "type": "string"
        },
        "kubeConfigCertificate": {
            "metadata": {
                "description": "The base 64 certificate used by cli to communicate with the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5ekNDQXQrZ0F3SUJBZ0lSQU91MUdJNTZmK3RENXhwVjROZVZ5K2d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05ESTBNVFF3TWpBMFdoY05NakF3TkRJek1UUXdNakEwV2pBcQpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVBNQTBHQTFVRUF4TUdZMnhwWlc1ME1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQTBRQXRTZDJRYk55Tk0wWWJSaGQxOXVxM0lpYzQKYU9rc3BrWGZadURwak5Ya0dkckpMVngyeWQvM1pQZGVGdStHWEtsZi9TZllydnVNNC9Weml5OThhd2x3bG5iZApXRVJwbU1HZnB2R1gzYXA0MkhEanhXd28xdk9vSlMzZFRDN2tkckNOTjErWG1IcEVZWFlGUlVWSDhnQUllNUdiCnJkeTErNGc3M1lqMkEwMHoxN2YwVE5uRzJQbC9YejdMTFdnRmIwMUNhaXpoZ2dPYlluYmxKUkwzK1VzRE5xY0gKZ0VQMUNMWmlWYWdLa1JBdEZ1eU12bktoMkU3aDhsQUNSV0xkK09SZ2lLLzZ4YVViM1pzdUFnYlY3eFl4WWtBSQoxVndLSUNXWEgxaWdwbEo5MUEvMlcwUHdiVFdJUnlwVW9hR0tMcmhzbzJwMis5UjIva1IyVmhLK1hoc0tuRDcwCnJTOVpiclJNU2xrNDBtQkVhWk9SNVNQcGhCSXZOTEtsZHgzS3U0NkVPcXlHOXhicGlrQWp6cEV6NG5YR3ZXanoKWkV5NjdkUTg1ZVdZdzBrc3gzUEUxVTAxaEtHVlZwTHJIUVNIU2RHeXpTMjJiNk80Vm5vNG1HQ1RFY29za2dFaAp0R1JqNVkvOFdLYTUveXBEMTBVd2ladERBNVR6eCtLeEszMGsrZGRuN0FrNEcyYnhLRDJLNWpWNDNXSjArREVwCks1bDlnMlNhRkpYMW1QdWdjN3hxNXlKSW53OE0rTm0zKzZsSU5rUGhISVd0VWVFODZiUGIrZStBWlp1dUdMWmcKNkVOKy9YZGFnTnEzb3hTRThhTE5Ia2cvUk0yd28vOW9mVUZhcTBQbDBObkthNlE5QmhBRGtyejdZeG1QTGZEOQoyOFErNGxodG53UnFtc1VDQXdFQUFhTTFNRE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUlxRkhTNC8KV21pa285WklYdXRObTFUd2JtWlYxTVJ6aWtvbnl1b3E5S2Q4TGk3cG1Jc1k2SEtZaENWWjNuQndDQTd5citMYwpFdGxad0pGYWpvK3R6Rkc3YmU0QStPVmNCUTg4cnQzQUh6a3JmWUcwa3poSnl6eFRHenFVOUlWMDd5YUlvQUFRCitGMWtORFRVOTJlWFozUW15OG5UbmtiM3FEekV6NkxRTFkrSWN4aWlBaHYySHJJVnhmaG5uMTdEeEVueWp2QTkKU1Blbm1kZ3FjaERJU0VsTjRlKzJQVVB5RmljM1JqTDRyTS8yYks5Z3JjSDdxbFkzT0JVVWhNdTRzNHRUOW9HUQpZNlc4VGhSbERCNmtJRFhGNlUvWndHUHpoN0dBa2M3RXZ6QUdTL1hFZzU5S21FbFBJM2pTbTFNOWM0VUw5NENkCjZ4UWI4cWpDYUwwRlkxQWQxYldPbmw2ZDRtOThRbjBFWllCQkV1NUxTS0l3WUlESTd3YUR3bXNuK0hHUFFiRnAKdHdxNmd0M3pEOGpnRlR6TWMzNUQxYUxlekw5SDNsRlh6L3ROdUk1Sm1UakI1WXZ4a1dhODg3SndOV3JIczk4TgpKTzB3Q3VlcDMwcFdSRHY0aUFEQnI3cnZLZnpzL0ZvYWZIeGR4ZHRhbnY5WldveFo1RXZTMzVCUzdONUZreWdGCjVEalRtRDRtVWpCMnBVMXpLTzVONW1tNFRqQ0dzaXBkOUdxYnFXN2tyNjZmdldwYmo5RDdPWXNzaE1qY2kwOVIKYU1OcEIyNWk0bzFwUW9qWmF5eUFCTllzSXBrazRUbSs1ejFKQXpoYmxZOTRvQXJnYjBUZWk4OVlObm1IVmNmdQpPUkdlYzI0UnN2ekd0UXJkY1pnRFFnSUgzMlVlRHlPcEVPOHYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "kubeConfigPrivateKey": {
            "metadata": {
                "description": "The base 64 private key used by cli to communicate with the master"
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBMFFBdFNkMlFiTnlOTTBZYlJoZDE5dXEzSWljNGFPa3Nwa1hmWnVEcGpOWGtHZHJKCkxWeDJ5ZC8zWlBkZUZ1K0dYS2xmL1NmWXJ2dU00L1Z6aXk5OGF3bHdsbmJkV0VScG1NR2ZwdkdYM2FwNDJIRGoKeFd3bzF2T29KUzNkVEM3a2RyQ05OMStYbUhwRVlYWUZSVVZIOGdBSWU1R2JyZHkxKzRnNzNZajJBMDB6MTdmMApUTm5HMlBsL1h6N0xMV2dGYjAxQ2FpemhnZ09iWW5ibEpSTDMrVXNETnFjSGdFUDFDTFppVmFnS2tSQXRGdXlNCnZuS2gyRTdoOGxBQ1JXTGQrT1JnaUsvNnhhVWIzWnN1QWdiVjd4WXhZa0FJMVZ3S0lDV1hIMWlncGxKOTFBLzIKVzBQd2JUV0lSeXBVb2FHS0xyaHNvMnAyKzlSMi9rUjJWaEsrWGhzS25ENzByUzlaYnJSTVNsazQwbUJFYVpPUgo1U1BwaEJJdk5MS2xkeDNLdTQ2RU9xeUc5eGJwaWtBanpwRXo0blhHdldqelpFeTY3ZFE4NWVXWXcwa3N4M1BFCjFVMDFoS0dWVnBMckhRU0hTZEd5elMyMmI2TzRWbm80bUdDVEVjb3NrZ0VodEdSajVZLzhXS2E1L3lwRDEwVXcKaVp0REE1VHp4K0t4SzMwaytkZG43QWs0RzJieEtEMks1alY0M1dKMCtERXBLNWw5ZzJTYUZKWDFtUHVnYzd4cQo1eUpJbnc4TStObTMrNmxJTmtQaEhJV3RVZUU4NmJQYitlK0FaWnV1R0xaZzZFTisvWGRhZ05xM294U0U4YUxOCkhrZy9STTJ3by85b2ZVRmFxMFBsME5uS2E2UTlCaEFEa3J6N1l4bVBMZkQ5MjhRKzRsaHRud1JxbXNVQ0F3RUEKQVFLQ0FnQVFDMHB1dkRLRkdOMUNEV1MwbWNKMWhRa3Y5d0RPbE8vWGg4K2hqeXgrb2tEVGQwY3dVMFBQTllGQgpYL2Y2SE1NY3crZlpnRUNURmo1M2xYVWNQelgyNVkrZURWdnFsYjNoZXlPdFppaDVYTWZRSGNKdWVtSWNOakkzClFIRVhreFg0d283a3JGTHY0cHJ6UEdNbE1TOVh0WWJ4TFhsYy9HOS84ckpkekZET2FoUEx3SlJoZmVwVTU3cE8KYm55Y2JMcldFNEZBczFkUWFzUjM1NWFwcE80aVZnN1dHRFpzTTB0Uk11Y1Rta1hOWXdlREZmK3I4eExYang2cgpRbGNhU24rdHhxSmVlOXZ0WmtKZ1hiUkhkWXpnd0x4anhYU29KRnVtb2h3YXpPdndPSzd1STVlTzVBVkY3UEVjClBYU252OFhpMWtlSXQvaVFWbndZQXR0dXVodWc3RGxtZTlpaU5ySldjUGtTSmIvbisrY2M3eGJrdXNqdjNiNFEKbEhCekZVWmdUMG5COXlRRC9yTGFRaWNTZGdhUVJjY2N3K0hOSkZDeFB4K1VPNXUyK3h2Vy9CMzZsbHRQeDdKQgp5eEYxWnV6dEEwbkN0U2cxdCtRcFc2MEF1U2hzSUNGVmFucFpSZmNLQlFPampGSEhvTjc3VGpoOEV4R3hUblI0CjBHZE4rZW14RmVXejNHNDBXNmN0YUlZQ1NBaUZROFA3UnlDc2M3RWdlR0o0VDRlMTdiVmFsOVVGMW4vZmhOcVYKZnVsNU4rSUQvTlRVOWRGZlNrbDFTeFdlaFM5NU1RRFRzME04WWN5N2lSOGtReXpZdTcvN2kwbWZPYk1za3E1TAo3STY3Zm9WOHBZNUNlSDBtZXhST2RMUWdsSlNXSzNHVjVtc3hHMjR3amJza2pzWVJvUUtDQVFFQThPNFlTUFpOCmRFYlFUREhUSEkvOGVTOGNGWWlrck5mOXMxQWZPR0JSczdoQ0NHQnBBWFZnUmZuRkZWWXBJcW9JbTQ3R3VaRTIKcG9RVWpoUVBabktYVHlScGxENEE2TVAvY1dVNklaVTR0RGtablpheExZV1BlemgxaHJTeUtBNUUyVFRnNkF0RQpEd0ZtYXQ0S0RINm5rVEM3M2tkNzBacnF1MjBXRENlamtIZU4wUG9aaisvOEw4UkszRHQwSWVxUUFBcURYSjdGCnYrQ29RbXJZbDJPUVUwQTRDNVdYbE5nK2pMNGFUMVRHVGFOUnp2UEMrcHlkQlBZeEdycG16OFFjMGNEYkdzZTAKbFJYUDF2QWR2dkFOY3VlcFMra3ZyQWJoZVpEWUZFVHk2Q1lFNWFobXpJZ1BITDA3MVFBTXoxeWRVdEs0Wm8zUQpwUkQ5YUR3UHVwUG9QUUtDQVFFQTNoTFB0eVV5SHhWcEVGbzN5d2dhM0dSOHdQVkRic3FQQ1lxbWJBVmNmRVAwCm9YWWpJN2VFUWdKL2RJU2xoMUZucG5NUVZNZStHcitML1dkT1VmZGhBZURHRmpxNHNiRDNYMmdwTXJ3WVRGSGEKNlFRS2pUSTBkL3k4azd0eDQvMytPR0xUcUg0QVh5T0FuakNsMGhZWTdRM09Xa0EwT20yMm9wVUh5YzlnUmtCRwpWekdKUzRpQWFZWVA3SFZRU1hQZ3lFWXNhbi92NFpKM29OYlFCSGpTbU5kOXVybHhYVGNVZ0Y2R0lRSGNGcUgvCm93bW05TlpXSVgzenY4N09Rdit2NkUzSW5xZWV5cGhVdzZUaWdka3grQlRscVJ4OVV5NC9nMmNPRTJmdE5FTzAKQU1VU0wrRkdmQStjL21GeEI1QVVaQzl3enV4dDZHbVZKOFpoMmxHZEtRS0NBUUFkM0xULzNoOXRpUlZxVEVhcApaS05iZGQ1YVFPeUFTK2t6SDN3dkpha2F5SHpPd3Z4ZzVPYUE1ZHRxc0pvNnBLNmFjVkRxVVRoZjNVRWE5eHVOCmpDaDY4NzF1VlYwUmZMR2RvWGxhRGovUC9yL1JDNHQ4WS9DTHlreXUzSmkwWkVoZVQ3S01zRkRJTjFrMVo3NEIKSEhXeWhrTFM0ek5Tb0l2MW5TaTlhdkJZQ0tsNFBIZU1vcWMwV0hVYTVQZVkrSlRPbkg3NXJPZy94eDJ6MWNCdwp5ek5wVGkxa0tpOTJrSEw0U052RDkzTDR6b1JtVFVwZWU2anVvNEVrbWZRQ1RvRnY4aUoyS0VpV3JmUnI1S2tiCk1HL0tUVEpycVVSeVl3dnhZR1dYNVkvaC9FeGhGc1ZmRm9JaEFzZDJ1Q0hlVmRGZUlhWWZkL1pqYno2cGU4QkwKVk9mVkFvSUJBUUN5akVWZFp4YUpUMW1Od0R1ampmeXF2bEJmZzlLWHZWeUx1MkphNzJTUXRNSjNIdGpaMnE4SApzNkp1T0VndUtCRkNEcmxPc05uei81VzZROWtBcGZqazNhZm1MNGhYdFlUdXZIeURRaC8zSE1qNUdEcXprMjRFCkdyd3p1ejJ5cFlCRUxaRW5vMGNCTnpZdCtjY1l4cE43NU9ISVJsNjNxNFp2NllxOWczSlFpVlVFdmRzNVU2S0wKTlRLUVZ6SWFISVRhQVRHczN2Z3JVT3ZGOFhDR1orNUszTmRGemR1THFzRmRCS0txM3lmcE9vNmlzeHY5Tm1kQgp2bGJBSExKUncrbld5Tk5JWEZTYlp5YWZ0bTQzSUQzQXpHeHFMM0hEOHljMXF5SHlFRmp5OEl4RklpMmhPV3JHClRIZFpQMWIxVWE1VGJxRXdmWDlRb2JNK3E0MzVUaTBoQW9JQkFESXZiV093ZC9GWjgya2ptaDVPa0FJKzZwc2gKVU1DVDBZNjZEWG45U3NnSHhVemtVVm90c0VkeEhrL0w4MnNUMFIxR3pYWEVTNWNLdDl0L05ZMUdqdVE2dysrbwpUcFJhSGc4NlVZRkJaTXl3eHRoYnBFdnNGdVptMjdFeTY5NXVmb0k3R2FvKzRBUXZqU2xaOFYwdU9aaFZGZlNFCmJocE5pMW13akVMdXpPVDVJbWlyTUN2b0hGS3dUYy9RMm9oUVhta2pNSi83elVxLzdJUzQzUFdpK1dNVlZBNHYKZzU0NFFWUU5rNnFSaHBUQXV1azdUdnFxVEIvdEMvbmsxb05lSFlvYWVqZEo3WHNtR3hLb081NTFLSGtzekpCagpkSXI5TSt6dWNJUnFjK3RJcmxCM2ZIdHIzcU1obHFLak8yYmRmNzkwT1JUeTY0RVl4amc4Ykp0ZExwND0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "kubeDNSServiceIP": {
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "Kubernetes DNS IP"
            },
            "type": "string"
        },
        "kubeServiceCidr": {
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Kubernetes service address space"
            },
            "type": "string"
        },
        "kubernetesACIConnectorCPULimit": {
            "defaultValue": "50m",
            "metadata": {
                "description": "ACI Connector CPU Limit"
            },
            "type": "string"
        },
        "kubernetesACIConnectorCPURequests": {
            "defaultValue": "50m",
            "metadata": {
                "description": "ACI Connector CPU Requests"
            },
            "type": "string"
        },
        "kubernetesACIConnectorClientId": {
            "defaultValue": "",
            "metadata": {
                "description": "Client id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorClientKey": {
            "defaultValue": "",
            "metadata": {
                "description": "Client key for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "ACI Connector Memory Limit"
            },
            "type": "string"
        },
        "kubernetesACIConnectorMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "ACI Connector Memory Requests"
            },
            "type": "string"
        },
        "kubernetesACIConnectorNodeName": {
            "defaultValue": "aci-connector",
            "metadata": {
                "description": "Node name for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorOS": {
            "defaultValue": "Linux",
            "metadata": {
                "description": "OS for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorRegion": {
            "defaultValue": "[resourceGroup().location]"
            },
            "type": "string"
        },
        "kubernetesACIConnectorResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorSpec": {
            "defaultValue": "microsoft/virtual-kubelet:latest",
            "metadata": {
                "description": "The container spec for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorSubscriptionId": {
            "defaultValue": "",
            "metadata": {
                "description": "Subscription id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorTaint": {
            "defaultValue": "azure.com/aci",
            "metadata": {
                "description": "Taint for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorTenantId": {
            "defaultValue": "",
            "metadata": {
                "description": "Tenant id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesAddonManagerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/kube-addon-manager-amd64:v8.6",
            "metadata": {
                "description": "The container spec for hyperkube."
            },
            "type": "string"
        },
        "kubernetesAddonResizerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/addon-resizer:1.7",
            "metadata": {
                "description": "The container spec for addon-resizer."
            },
            "type": "string"
        },
        "kubernetesCcmImageSpec": {
            "defaultValue": "",
            "metadata": {
                "description": "The container spec for cloud-controller-manager."
            },
            "type": "string"
        },
        "kubernetesDNSMasqSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-dnsmasq-nanny-amd64:1.14.8",
            "metadata": {
                "description": "The container spec for kube-dnsmasq-amd64."
            },
            "type": "string"
        },
        "kubernetesDashboardCPULimit": {
            "defaultValue": "300m",
            "metadata": {
                "description": "Dashboard CPU Limit."
            },
            "type": "string"
        },
        "kubernetesDashboardCPURequests": {
            "defaultValue": "300m",
            "metadata": {
                "description": "Dashboard CPU Requests."
            },
            "type": "string"
        },
        "kubernetesDashboardMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Dashboard Memory Limit."
            },
            "type": "string"
        },
        "kubernetesDashboardMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Dashboard Memory Requests."
            },
            "type": "string"
        },
        "kubernetesDashboardSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/kubernetes-dashboard-amd64:v1.8.3",
            "metadata": {
                "description": "The container spec for kubernetes-dashboard-amd64."
            },
            "type": "string"
        },
        "kubernetesExecHealthzSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/exechealthz-amd64:1.2",
            "metadata": {
                "description": "The container spec for exechealthz-amd64."
            },
            "type": "string"
        },
        "kubernetesHeapsterSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/heapster-amd64:v1.5.1",
            "metadata": {
                "description": "The container spec for heapster."
            },
            "type": "string"
        },
        "kubernetesHyperkubeSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/hyperkube-amd64:v1.8.11",
            "metadata": {
                "description": "The container spec for hyperkube."
            },
            "type": "string"
        },
        "kubernetesKubeDNSSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-kube-dns-amd64:1.14.8",
            "metadata": {
                "description": "The container spec for kubedns-amd64."
            },
            "type": "string"
        },
        "kubernetesKubeletClusterDomain": {
            "metadata": {
                "description": "--cluster-domain Kubelet config"
            },
            "type": "string",
            "defaultValue": "cluster.local"
        },
        "kubernetesMetricsServerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/metrics-server-amd64:v0.2.1",
            "metadata": {
                "description": "The container spec for Metrics Server."
            },
            "type": "string"
        },
        "kubernetesNonMasqueradeCidr": {
            "metadata": {
                "description": "kubernetesNonMasqueradeCidr cluster subnet"
            },
            "type": "string",
            "defaultValue": "10.240.0.0/12"
        },
        "kubernetesPodInfraContainerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/pause-amd64:3.1",
            "metadata": {
                "description": "The container spec for pod infra."
            },
            "type": "string"
        },
        "kubernetesReschedulerCPULimit": {
            "defaultValue": "10m",
            "metadata": {
                "description": "Rescheduler CPU Limit."
            },
            "type": "string"
        },
        "kubernetesReschedulerCPURequests": {
            "defaultValue": "10m",
            "metadata": {
                "description": "Rescheduler CPU Requests."
            },
            "type": "string"
        },
        "kubernetesReschedulerMemoryLimit": {
            "defaultValue": "100Mi",
            "metadata": {
                "description": "Rescheduler Memory Limit."
            },
            "type": "string"
        },
        "kubernetesReschedulerMemoryRequests": {
            "defaultValue": "100Mi",
            "metadata": {
                "description": "Rescheduler Memory Requests."
            },
            "type": "string"
        },
        "kubernetesReschedulerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/rescheduler:v0.3.1",
            "metadata": {
                "description": "The container spec for rescheduler."
            },
            "type": "string"
        },
        "kubernetesTillerCPULimit": {
            "defaultValue": "50m",
            "metadata": {
                "description": "Helm Tiller CPU Limit."
            },
            "type": "string"
        },
        "kubernetesTillerCPURequests": {
            "defaultValue": "50m",
            "metadata": {
                "description": "Helm Tiller CPU Requests."
            },
            "type": "string"
        },
        "kubernetesTillerMaxHistory": {
            "defaultValue": "0",
            "metadata": {
                "description": "Helm Tiller Max History to Store. '0' for no limit."
            },
            "type": "string"
        },
        "kubernetesTillerMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Helm Tiller Memory Limit."
            },
            "type": "string"
        },
        "kubernetesTillerMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Helm Tiller Memory Requests."
            },
            "type": "string"
        },
        "kubernetesTillerSpec": {
            "defaultValue": "gcrio.azureedge.net/kubernetes-helm/tiller:v2.8.1",
            "metadata": {
                "description": "The container spec for Helm Tiller."
            },
            "type": "string"
        },
        "linuxAdminUsername": {
            "metadata": {
                "description": "User name for the Linux Virtual Machines (SSH or Password)."
            },
            "type": "string",
            "defaultValue": "jvarughese"
        },
        "location": {
            "defaultValue": "eastus2",
            "metadata": {
                "description": "Sets the location for all resources in the cluster"
            },
            "type": "string"
        },
        "masterEndpointDNSNamePrefix": {
            "metadata": {
                "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
            },
            "type": "string",
            "defaultValue": "masimusi"
        },
        "masterOffset": {
            "allowedValues": [
                0,
                1,
                2,
                3,
                4
            ],
            "defaultValue": 0,
            "metadata": {
                "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
            },
            "type": "int"
        },
        "masterSubnet": {
            "defaultValue": "10.240.0.0/12",
            "metadata": {
                "description": "Sets the subnet of the master node(s)."
            },
            "type": "string"
        },
        "masterVMSize": {
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A10",
                "Standard_A11",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_A9",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D11_v2_Promo",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS11_v2_Promo",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS12_v2_Promo",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS13_v2_Promo",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS14_v2_Promo",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS3_v2_Promo",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2",
                "Standard_DS5_v2_Promo",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
            "type": "string",
            "defaultValue": "Standard_D2_v2"
        },
        "maxPods": {
            "defaultValue": 30,
            "metadata": {
                "description": "This param has been deprecated."
            },
            "type": "int"
        },
        "nameSuffix": {
            "defaultValue": "34710031",
            "metadata": {
                "description": "A string hash of the master DNS name to uniquely identify the cluster."
            },
            "type": "string"
        },
        "networkPolicy": {
            "allowedValues": [
                "none",
                "azure",
                "calico",
                "cilium"
            ],
            "defaultValue": "azure",
            "metadata": {
                "description": "The network policy enforcement to use (none|azure|calico|cilium)"
            },
            "type": "string"
        },
        "orchestratorName": {
            "defaultValue": "k8s",
            "maxLength": 3,
            "metadata": {
                "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
            },
            "minLength": 3,
            "type": "string"
        },
        "osImageName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
            },
            "type": "string"
        },
        "osImageOffer": {
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Linux OS image type."
            },
            "type": "string"
        },
        "osImagePublisher": {
            "defaultValue": "Canonical",
            "metadata": {
                "description": "OS image publisher."
            },
            "type": "string"
        },
        "osImageResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
            },
            "type": "string"
        },
        "osImageSKU": {
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "OS image SKU."
            },
            "type": "string"
        },
        "osImageVersion": {
            "defaultValue": "16.04.201804050",
            "metadata": {
                "description": "OS image version."
            },
            "type": "string"
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring",
            "defaultValue": "2ddba07b-95b9-4d45-b224-f03afd5eefbd"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring",
            "defaultValue": "tdadmin2018"
        },
        "sshRSAPublicKey": {
            "metadata": {
                "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
            },
            "type": "string",
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8ujxcfRR4df4clP8up2LSQIB0w8CaQVLEFsiSnhgfXtLTR+QbrXhVpMvayhXpCCTJfqOSF0pGGEd+aEO1febNhq9eC0U/uL6VcD1h6AFRrnAeVe/T95AuFqbRJ8PVqegzLdan0kY/IbCbSt1tilBFFNKqxSADFufhrOj1Tt5qP/me/X6QFyypQeQXeNPIuDdCiQPppaKC7ZbmBUQDqbCsm2zINt1L1PE0LhoDLJuAE6EDwDLxnhEXBijumQzVSWpXvy2nqGrOjtaPZW6A1WH6dGEBjtj3HgWMQwuihwbq7nBILDAeOlJkUWD6SVyEz314K4KIHLu0otBlM4H1W8vR jvarughese@architech.ca"
        },
        "targetEnvironment": {
            "defaultValue": "AzurePublicCloud",
            "metadata": {
                "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
            },
            "type": "string"
        },
        "vnetCidr": {
            "defaultValue": "10.0.0.0/8",
            "metadata": {
                "description": "Cluster vnet cidr"
            },
            "type": "string"
        },
        "vnetCniLinuxPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-v1.0.2.tgz",
            "type": "string"
        },
        "vnetCniWindowsPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-v1.0.2.zip",
            "type": "string"
        }
    },
    "variables": {
        "agentpool1AccountName": "[concat(variables('storageAccountBaseName'), 'agnt0')]",
        "agentpool1AvailabilitySet": "[concat('agentpool1-availabilitySet-', variables('nameSuffix'))]",
        "agentpool1Count": "[parameters('agentpool1Count')]",
        "agentpool1Index": 0,
        "agentpool1Offset": "[parameters('agentpool1Offset')]",
        "agentpool1StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpool1Index'))]",
        "agentpool1StorageAccountsCount": "[add(div(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpool1Count'), variables('maxVMsPerStorageAccount')),1)))]",
        "agentpool1SubnetName": "[variables('subnetName')]",
        "agentpool1VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpool1-', variables('nameSuffix'), '-')]",
        "agentpool1VMSize": "[parameters('agentpool1VMSize')]",
        "agentpool1VnetSubnetID": "[variables('vnetSubnetID')]",
        "agentpool1osImageName": "[parameters('agentpool1osImageName')]",
        "agentpool1osImageOffer": "[parameters('agentpool1osImageOffer')]",
        "agentpool1osImagePublisher": "[parameters('agentpool1osImagePublisher')]",
        "agentpool1osImageResourceGroup": "[parameters('agentpool1osImageResourceGroup')]",
        "agentpool1osImageSKU": "[parameters('agentpool1osImageSKU')]",
        "agentpool1osImageVersion": "[parameters('agentpool1osImageVersion')]",
        "allocateNodeCidrs": false,
        "apiServerCertificate": "[parameters('apiServerCertificate')]",
        "apiServerPrivateKey": "[parameters('apiServerPrivateKey')]",
        "apiVersionDefault": "2016-03-30",
        "apiVersionLinkDefault": "2015-01-01",
        "apiVersionStorage": "2015-06-15",
        "apiVersionStorageManagedDisks": "2016-04-30-preview",
        "caCertificate": "[parameters('caCertificate')]",
        "caPrivateKey": "[parameters('caPrivateKey')]",
        "clientCertificate": "[parameters('clientCertificate')]",
        "clientPrivateKey": "[parameters('clientPrivateKey')]",
        "cloudProviderBackoff": "[parameters('cloudProviderBackoff')]",
        "cloudProviderBackoffDuration": "[parameters('cloudProviderBackoffDuration')]",
        "cloudProviderBackoffExponent": "[parameters('cloudProviderBackoffExponent')]",
        "cloudProviderBackoffJitter": "[parameters('cloudProviderBackoffJitter')]",
        "cloudProviderBackoffRetries": "[parameters('cloudProviderBackoffRetries')]",
        "cloudProviderRatelimit": "[parameters('cloudProviderRatelimit')]",
        "cloudProviderRatelimitBucket": "[parameters('cloudProviderRatelimitBucket')]",
        "cloudProviderRatelimitQPS": "[parameters('cloudProviderRatelimitQPS')]",
        "cniPluginsURL": "[parameters('cniPluginsURL')]",
        "containerRuntime": "[parameters('containerRuntime')]",
        "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "dataStorageAccountPrefixSeed": 97,
        "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
        "dockerEngineDownloadRepo": "[parameters('dockerEngineDownloadRepo')]",
        "dockerEngineVersion": "[parameters('dockerEngineVersion')]",
        "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
        "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
        "etcdClientCertificate": "[parameters('etcdClientCertificate')]",
        "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
        "etcdClientPrivateKey": "[parameters('etcdClientPrivateKey')]",
        "etcdDiskSizeGB": "[parameters('etcdDiskSizeGB')]",
        "etcdDownloadURLBase": "[parameters('etcdDownloadURLBase')]",
        "etcdPeerCertFilepath": [
            "/etc/kubernetes/certs/etcdpeer0.crt",
            "/etc/kubernetes/certs/etcdpeer1.crt",
            "/etc/kubernetes/certs/etcdpeer2.crt",
            "/etc/kubernetes/certs/etcdpeer3.crt",
            "/etc/kubernetes/certs/etcdpeer4.crt"
        ],
        "etcdPeerCertificates": [
            "[parameters('etcdPeerCertificate0')]"
        ],
        "etcdPeerKeyFilepath": [
            "/etc/kubernetes/certs/etcdpeer0.key",
            "/etc/kubernetes/certs/etcdpeer1.key",
            "/etc/kubernetes/certs/etcdpeer2.key",
            "/etc/kubernetes/certs/etcdpeer3.key",
            "/etc/kubernetes/certs/etcdpeer4.key"
        ],
        "etcdPeerPrivateKeys": [
            "[parameters('etcdPeerPrivateKey0')]"
        ],
        "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
        "etcdServerCertificate": "[parameters('etcdServerCertificate')]",
        "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
        "etcdServerPrivateKey": "[parameters('etcdServerPrivateKey')]",
        "etcdVersion": "[parameters('etcdVersion')]",
        "fqdnEndpointSuffix": "[parameters('fqdnEndpointSuffix')]",
        "gcHighThreshold": "[parameters('gcHighThreshold')]",
        "gcLowThreshold": "[parameters('gcLowThreshold')]",
        "generateProxyCertsScript": "H4sIAAAAAAAA/5RW/2+jxhP9nb9izrbOiXQEcC7ffPLnI4tQXZQ0STGVGrUVWsPYbA27ZHedxL3L/14tNgQc4179k5md9+btm2FE94M1pcyaEpkYhuRLESFYPFcW+Xsp0Io4U4QyFNLKBX+iknIWrtOONOLev/vtIXTH4bX3MOr0vtWfhyNLZbnGvazMKKXIlBmRowWuXjsl0A9qKD9ogURCvUFurrzbYKteFdtB0Cy4znQn/ju0O/F3oSMp3qEbqqvYTnSh3Avcy9D3fvnVmwRfvfGl51ewsWbadz4crRkjFEpaAh+XKFWCJEbx5pA5oymWhTa6vLXKrVCTrmk0CrWDaON0M7KHZoGrkuX6fBJWE+H6QfjT1Y13Pw6+asLWw+HIQhVZi+UUBUOF0mpUKcfhDX/tPbQw10/20m6GpKapXe2PSt3oNPAl50KBNtANbkLv9vL+7uo2mJSuNoLDUaJULoeW5QzOjuwj+8gZDo7PLl472zzuuJBRZ9mE2lRV1m0xlS7VqcpYGxeqKG68X9vqvI1NDX1l8AdYG0r98e1lQdY7yBYKs/zQMLowR4aCKATBuQJ3bPAcmZSpPhCSgMmXCnr1lQQD+/N5lSbwEUyGz2C+nNgXYMZkJcE5H5yCHuItZIPMD8CUy+lf0Lfc21HRbbeQ7Y77dWGaXN9sr7JqebWpq4t5S97B4U78ui4ynwucE8WFdTeSK6kwG2ZEKhSyX5VZX70oVtz/7NgGk7JdzO64YYA73uGSRBVKFJSkYA92avQDw3gWVGFY9DxUPIypXBwcwjcDAKCYAaWtUtDbtxnhf9BrXSItVNVaaILre2IvUk/wVt3tol3wMeNPCM8JVShzEiHkJI4pmwNRMMU5ZUw/8Bk4UkFKGRZAiTGYFPqOtP6QltXfc7s2AXvvFCUZj+HUtluzXnd2JnymKgkFKrGqmjTjAihQBg4M4Bg+wwmcwhmcwwU4NjgOOIMvEPMiV/920FZnv0Pv/2DiI9gAf8LHjzAVSBbw/TvIFDGHkyIz5gy1wC5MUx4tYMkUTYGkadEroBIEknhlFDqjLA7pLJwRmi4FgmPbcKKFlW2N0qV+DcwESaoSows/kwWuiRa4kp+g7BekSIp/tWZOMSJLuUl/5qyvgEQR5goIPJEUVFK2WYK2Dgj0zT4cJKs8QXb4waCzSki2+JcZ70DvICIKah9Jr4edL6ASZI1JrZjeRvwdtloer4edfeBiylvQawHrga21Z//cGF24mmnNRcV1wYhnGWEx6CZh/GltW4aEySJR7xaSFj0FfKFSSQNTif+18Iwa/wQAAP//gHPm/+MKAAA=",
        "generatorCode": "[parameters('generatorCode')]",
        "kubeClusterCidr": "[parameters('kubeClusterCidr')]",
        "kubeConfigCertificate": "[parameters('kubeConfigCertificate')]",
        "kubeConfigPrivateKey": "[parameters('kubeConfigPrivateKey')]",
        "kubeDNSServiceIP": "[parameters('kubeDNSServiceIP')]",
        "kubeServiceCidr": "[parameters('kubeServiceCidr')]",
        "kubeconfigServer": "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', variables('fqdnEndpointSuffix'))]",
        "kubernetesACIConnectorCPULimit": "[parameters('kubernetesACIConnectorCPULimit')]",
        "kubernetesACIConnectorCPURequests": "[parameters('kubernetesACIConnectorCPURequests')]",
        "kubernetesACIConnectorClientId": "[parameters('kubernetesACIConnectorClientId')]",
        "kubernetesACIConnectorClientKey": "[parameters('kubernetesACIConnectorClientKey')]",
        "kubernetesACIConnectorMemoryLimit": "[parameters('kubernetesACIConnectorMemoryLimit')]",
        "kubernetesACIConnectorMemoryRequests": "[parameters('kubernetesACIConnectorMemoryRequests')]",
        "kubernetesACIConnectorNodeName": "[parameters('kubernetesACIConnectorNodeName')]",
        "kubernetesACIConnectorOS": "[parameters('kubernetesACIConnectorOS')]",
        "kubernetesACIConnectorRegion": "[parameters('kubernetesACIConnectorRegion')]",
        "kubernetesACIConnectorResourceGroup": "[parameters('kubernetesACIConnectorResourceGroup')]",
        "kubernetesACIConnectorSpec": "[parameters('kubernetesACIConnectorSpec')]",
        "kubernetesACIConnectorSubscriptionId": "[parameters('kubernetesACIConnectorSubscriptionId')]",
        "kubernetesACIConnectorTaint": "[parameters('kubernetesACIConnectorTaint')]",
        "kubernetesACIConnectorTenantId": "[parameters('kubernetesACIConnectorTenantId')]",
        "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
        "kubernetesAddonManagerSpec": "[parameters('kubernetesAddonManagerSpec')]",
        "kubernetesAddonResizerSpec": "[parameters('kubernetesAddonResizerSpec')]",
        "kubernetesCcmImageSpec": "[parameters('kubernetesCcmImageSpec')]",
        "kubernetesDNSMasqSpec": "[parameters('kubernetesDNSMasqSpec')]",
        "kubernetesDashboardCPULimit": "[parameters('kubernetesDashboardCPULimit')]",
        "kubernetesDashboardCPURequests": "[parameters('kubernetesDashboardCPURequests')]",
        "kubernetesDashboardMemoryLimit": "[parameters('kubernetesDashboardMemoryLimit')]",
        "kubernetesDashboardMemoryRequests": "[parameters('kubernetesDashboardMemoryRequests')]",
        "kubernetesDashboardSpec": "[parameters('kubernetesDashboardSpec')]",
        "kubernetesExecHealthzSpec": "[parameters('kubernetesExecHealthzSpec')]",
        "kubernetesHeapsterSpec": "[parameters('kubernetesHeapsterSpec')]",
        "kubernetesHyperkubeSpec": "[parameters('kubernetesHyperkubeSpec')]",
        "kubernetesKubeDNSSpec": "[parameters('kubernetesKubeDNSSpec')]",
        "kubernetesKubeletClusterDomain": "[parameters('kubernetesKubeletClusterDomain')]",
        "kubernetesMetricsServerSpec": "[parameters('kubernetesMetricsServerSpec')]",
        "kubernetesNonMasqueradeCidr": "[parameters('kubernetesNonMasqueradeCidr')]",
        "kubernetesPodInfraContainerSpec": "[parameters('kubernetesPodInfraContainerSpec')]",
        "kubernetesReschedulerCPULimit": "[parameters('kubernetesReschedulerCPULimit')]",
        "kubernetesReschedulerCPURequests": "[parameters('kubernetesReschedulerCPURequests')]",
        "kubernetesReschedulerMemoryLimit": "[parameters('kubernetesReschedulerMemoryLimit')]",
        "kubernetesReschedulerMemoryRequests": "[parameters('kubernetesReschedulerMemoryRequests')]",
        "kubernetesReschedulerSpec": "[parameters('kubernetesReschedulerSpec')]",
        "kubernetesTillerCPULimit": "[parameters('kubernetesTillerCPULimit')]",
        "kubernetesTillerCPURequests": "[parameters('kubernetesTillerCPURequests')]",
        "kubernetesTillerMaxHistory": "[parameters('kubernetesTillerMaxHistory')]",
        "kubernetesTillerMemoryLimit": "[parameters('kubernetesTillerMemoryLimit')]",
        "kubernetesTillerMemoryRequests": "[parameters('kubernetesTillerMemoryRequests')]",
        "kubernetesTillerSpec": "[parameters('kubernetesTillerSpec')]",
        "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
        "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
        "locations": [
            "[resourceGroup().location]",
            "[parameters('location')]"
        ],
        "masterAvailabilitySet": "[concat('master-availabilityset-', variables('nameSuffix'))]",
        "masterCount": 1,
        "masterEtcdClientPort": 2379,
        "masterEtcdClientURLs": [
            "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
        ],
        "masterEtcdClusterStates": [
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
        ],
        "masterEtcdPeerURLs": [
            "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
        ],
        "masterEtcdServerPort": 2380,
        "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
        "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
        "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
        "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
        "masterFqdnPrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
        "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
        "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
        "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
        "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
        "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
        "masterOffset": "[parameters('masterOffset')]",
        "masterPrivateIp": "[parameters('firstConsecutiveStaticIP')]",
        "masterPrivateIpAddrs": [
            "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
        ],
        "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', variables('nameSuffix'))]",
        "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
        "masterVMNames": [
            "[concat(variables('masterVMNamePrefix'), '0')]",
            "[concat(variables('masterVMNamePrefix'), '1')]",
            "[concat(variables('masterVMNamePrefix'), '2')]",
            "[concat(variables('masterVMNamePrefix'), '3')]",
            "[concat(variables('masterVMNamePrefix'), '4')]"
        ],
        "masterVMSize": "[parameters('masterVMSize')]",
        "maxPods": "[parameters('maxPods')]",
        "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
        "maxVMsPerPool": 100,
        "maxVMsPerStorageAccount": 20,
        "mountetcdScript": "H4sIAAAAAAAA/3RSUW8TPRB896+YL8nb14uTgioVKUWVACmCNhWEJ4Qqn713Z+LYx3ndpgX+O/IlTQ8J7uXkHe/M7HjH/8nSelmq2IgxrkLybH0NG2GCJzTUEayPTMogVCDWBiVplSLlc5lqNMxtfCVlmeo4dSp53bTKTD2x1C4kU1hvWf5fplrOz85PZ+cvxBgrrwncUM9gIyq7I3OCjlqnnhBy4R73lpv+2HMhc0E3ytcUn27n6tFFbblJ5VSHrbx8TB1JpWNBvraeZJuck2dn86mIxCh24s3y0/uFNHQno9Hi5vLjerlerq4Xkx8Z+TUXV6vP1+ub1fJ6vZB3qpPOljJnYGzciGToTpktIjE7EtuNsR2KFpPnLrHNieIn6o7+BGyFL5i8RkHfMcNXwQ15AQCkm4BRFsi5KNeRMg/oeciM9ld2ljETlRVjVNY5ZE+yiqxK0QuNnmaaj4bYUdPT3zQnxwCw/wZ+DxWVOOS/oUolx/HEh0pZd0Bnh//pCBcXQ+HeqW5Ib2ArtKpjyzb4PEjkKFzEs/a/XY4HnSZQhA+8p+hhGfMmx7qPrig83WOOSX7IAbzdVHFKO345UETxoV/s233nOxRv4dTjw61lVTq6zTu3mJ/0pW8hdV65Qy0Ptn/hQVS/AwAA//8o5bmvUwMAAA==",
        "nameSuffix": "[parameters('nameSuffix')]",
        "networkPolicy": "[parameters('networkPolicy')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
        "orchestratorName": "[parameters('orchestratorName')]",
        "orchestratorNameVersionTag": "Kubernetes:1.8.11",
        "osImageName": "[parameters('osImageName')]",
        "osImageOffer": "[parameters('osImageOffer')]",
        "osImagePublisher": "[parameters('osImagePublisher')]",
        "osImageResourceGroup": "[parameters('osImageResourceGroup')]",
        "osImageSKU": "[parameters('osImageSKU')]",
        "osImageVersion": "[parameters('osImageVersion')]",
        "primaryAvailabilitySetName": "[concat('agentpool1-availabilitySet-',variables('nameSuffix'))]",
        "provisionScript": "H4sIAAAAAAAA/9x87X/iNvL46/ivmDp89uG6xpDsQ5see8cS75YmgRRI7nrdHhW2AB1GciU5Cc3mf/99JPkJsAlp++L3+d6L3saaGc2MRjOj0YjDr9wJoe4EibllHcJoTgQIn5NIAo+pAEYB32C+grN4gjnFEgu4vrAOwbsjEnwWYAEcRxwLTCXIOYYpC0N2S+jsxDqEL4BTOKDxcoI5fIElRpTQGXzRAEcN+AIjssQslnCLiFRDU8YhYP4CcyBUSBSGIBlMCSVinuAdwxcYYn5DfAw+i8MAKJMwwYApmoQ4gMkKxEpIvPRlmOC8rsIREnFZjvOmgj0/ZHHgEEq0pvxloDj02TIKscQJ7tsKXARTEqZATaUAT/oBBEgiCAjXXE1ZTIMUpFlBCCs0yZQIyPexEGSS0T2uUuziGwF+GAuJeYI7xyiU89UXyxJYgnNnCRZzH4PLIumi32OOXZ9RiQjFXLgRZzdEEEbHBqyubKc/bNVe+EiCi6Xv/s3hOMRIYPgCM44j+G/3tAVfQHJwAnjePW3Zz+ELoNsFPL+POFG2w+IowvxFrfHy4flL6+rDVW90Ne4Px732hdeyzd+2NfjeO8+/qr9sq9MfeP1h/tX8bVtnVx+8zui85caCuyHzUaiNfRFPsC9D67TfOfMGZlR9NwZndPD1neWNOqfjS88bjDveYNSqvcD+nEHtfv1792O30x55wwf4An4swQme//wcnCkc5R9+0R+a+YdX+kPtxYva/UV7OPIG427v1Pv3w9fNly9fFiY+834qm/dy0L1ujzw1/FfOm6y9Rabw889Q6w+h1YLaunLhl1++U9ucWgAAmjO7M0d0powrwFMUhxISBcOEUFBql4RRWyNkK6IMK12HKbEsTEXM8SCmHbZcIhp0ko0UvHhp3RfmKtpxvu2MYzBTKIjxlPGx3mLfNhrQrLBjg19P96zGVrLDV0pLe+FAURs5l0/2F3ZOQPnLN/rPKbEeUs2catvsGl+4j3KqvGeZko7f7tCSIZTQeZqyylGfoLPdQmTqOmoU9aWo/RogiX999eucCUnREv/6yrh4E9rev9f8Lo2pa/5vEFdr63I8YUw6HP8WE46DNV4H3od+fzTwfrzqDrzTluQxtnAocNngFKkBZdlmN30Fzu9gZ9uu1z/1HuyyzYTvsB9rBSyR9tBUxc7M5QKLMNcbStiWRosF5igIwLkCW4UDO/u6ZAE4Edi1F3OMAnB8OD4CN8A3bswRDdgSvsAECfz29Uu7iBshIW4DcOLiRxKkf+XMlmh5gmeEfsJSSaBiWgdzKTJ9K8z2ZXfoDa7X3dj4sj36vmXr2LHIMg3XV9guiojA/Abz+gKvDDeSxf5c6bOa2oOB9OdKDQ1l4fuBs1sKnDF5ov7zKI5G6rT3lsVHJUKU4Jdyvwtui+1yYA2tI8kTF0GtfeUq7CJYKsleCEokNe2JznIex8pl65x3vd7oSbL5IcFUVslWQbBatscQtpbrEaxcts0M4FHJIoz5RryvErOUdrWQu8HLl68KZ8swC8nVvobpc7nDMDcJbsj1+vXeCOWLV421ZZhPkS0xzArZKghWy/YYwk7D3CnbZkr8hwyzQsxS2tVC7gYvF7EKRyMlR4I8TFeEhQc7i6ngOAHWB9/3e0WelO66364mWB0MUkoV7rKa5B5eeY32trt6hPZur7hGOz3/PEJxlwsq00NhgffTQ4UVlelhf9q7N+G2HhTgPoqoIJge7HYlbpgGO9O25SIgXKWTpak+PHuW7Njyk4De9HWOUbDKU2Yjp1iQKNon330Fck4EEAGIApphKjWsrbNsdbA89/YP+cVwn7maKiIPtrUe/XYCbrmXHdBWwS1cfTjvdp6QDGtXWZYIrxMqMG885G7IXenvFrjV/s/VwBv/MOz3KpjWllD/n2C0yOs61pZ6y8a3+doCSgs36f4p0Xv1JtqxSCUeP9PEXg5/W81Iwt//Dl7/YwK7JYs51tu6aGCf2LX7UXvwyRuNvd51d9DvXXi90YP9ygBJTBGV3cA+UbRGXq/dG427p9m4iCfm3EsYTaGGVx+GnUH3ctTt94qwCAUdvTUyQG9w3e14Si+9TveyfZ46rzKkIfY5lo8gDr3OwMu559hUET9xFkcGdeAN+1eDjjf+NOhfXWaQWSlJA533O23FfVFMimUPLXEmYq8wj8B+zIlc6XlyqJ43+ld/cKa4uhp0Rz9tzHmzRvK6Oxhdtc/HCdIa1GBbjg3wcYVcnMUSj9AkxPlMg/7VyBuP2h/OvQwu4mSJ+Kp9g0iIJiQkcjUscnc56F60Bz+N29ft7nn7Q/dciTMsqEBb06VyrQHmH5C/YNOpfQK1+855/+r0ctC/7p56g/GHdues//Hjww6sAZacYFGNPB54o0HXG+4i4t1FjGIqd1Dx/n3Z7ylb30HmNOapWVSROb0aGFvZQeYHIiXmO4j80B2NvEEpiQGSOCRLUibKoD3yzrsX3XIZFOa5wvzxcrgLefzjZbkuMwIfYn+BdzIw/nDVOfMyPmKBLxBFMxx0A0wlkSvvTmIqUlVeDb3xRbvX/uSdjrunXm+kzMn798jrDQuqjAXWVUnq4wssUYAkyrC7veGo3et44wtv1D5tj9oPmSUb5q9RHBYM+OxiOM7Yvm5fnY90zbmwAQzaGV6lSItvRMnoNeaJGLZtPVhe/2N2s2FNY+orcwFTWP1IQhwhOX/xEu7TomZtvZi3Ua7kWMacphXH7WqqKabWmhsl0lrzCYXPWnOjxPm2OJ/1UBBDYHkWT3CIZT+SArQcBwIH4BCwxeF/08DWvxwNW/W/Ha79XbtvPhza5s4mqd7r6B1iuTaJz+iUzNoqmHd63UxXnV533On3PnY/jU+7g5Ym41PiUizrwXraWFuHLRzFnEEhsJeDqeTg3Zs3paPq04duzzCgkk/FwITQkukTMFOG1CFXfR19+s94dHHZcuUyMvnK2KekLme/W8ly85W/DMYzLMcS8QkKQ3irl3iLBtTur3veSH+6PL/61O0Nx1eD8wdzokUcnLvfp2V4Tmebw06/N2p3e94gCR/d3qdtfrMcm2J5y/iC0Nm+3D9CX/mR3WI8RmBDKKi7IWPRBPkLqLsR43KJop12UNSGMQJnkNtBcXR5s/bNbTYck3kqww2J2DIst0BUbdjN4S0CGt4VE0JdPJEqWAtwJFAkwXE0wPZ+UfuSYrm2Xf6Aqf7fNoQJJ8EMQ91Vh1FH39L+BUaxvRg9o5dLFhJ/VfT2P/9czAMv++fdjkrrW2BrC9i4pdHTrnlDc5YNd1KijGpCUEopsZPCJVbGe3L11Qkx4p3sPD2IqSRLbHz9IbSDADQE5CDAccQEkYyvYIFX1oEJNu0gUDHmEeh6vW5bB37MQ3DE8BwcR5sPvEn/5QQ4RCtoNrIPS3TnKJ7guAH2XMpInLhuwG5pyFBQZ5GKtgLXGZ+52VwEC3fOlvjEV+zk5QLzt5N/cI7du6tJTGU8br6tN167A9NdoM/v8AVQJJ0FXoG+B7MqVFKQcX9tGE1o6OcBnoCS7AmCuZuSuY+KBu5zeG8iMoqkaw4Voq5cTD1wfd/hZvH1Fy1rcitcIoaBTKVN4MolTohqcZU6Z1hCHAVIYnj2DNIv6U2s41DmJH84HPtsucQ0EOCs4LN1cJBzucagnOOkvSYAkbThIBqAYCp11T0xom4daB+g12Acc9LKrImj2/qMyHk8iQXWStWFcbbc1LIbcXa3co/rjfrR8Z8y5Np9ysaDUr2mW09YrxOqbE+lWs/F4T9DMsF32A8I/+ehaTgxHw6z5UxET/5/i95fz6dW6yabSrlCIokNpzeI78GhpqTX0tPdVWbZJOJy25Q0CmRCGdvTaMryMsRSM1zDNcaY9WOZmds0GOp5U+Ysle2upcA2OPkGSw2xxfGSSazUZz7oO34spFYii2Wr+WZZhuhgGkSMUNmKKbk7cV3dJ5CBBYV/aj3Zpf47gzE+uzPQ2YaJmqfja2+gzlQtu1lv1hsO9+sNO90HBbDT/r965/32qYrB+bYQknE0w/UZY7MQo4gIsyc4yYUJ0n6szc+1+3JWHuohofGdg5bB29d1iXh99nt6250Dl2cgQQL/SN5h17Yp2etfiwLb1kGWcZSjOh1wrQO+VKetUggrtcZhrJvlpnEYrtIlwgGs6yYxPyzjKF++7zbPXsVBs7ZJU5SO7DFXZl5C1zrI8j1TM83H7S3zMHlpaxPQNdlDXbJlmAYpW8QTjlGEObRAN6HYusRYSjFDYmw5Fj7jGFrQsOH94xg/R2E8I1TUfU7qBdliKnksJA7GKtlSIXKc7KNf9qKbAI/lKlLMPCesSD2NUjdNY57Pn0QT0xmhmmrW8pcHqv1IVYmdnJ3/v5XVND/q0wuPqf8IrYetKsmmjafJboY8Hlz1Rt0Lz4ZWC+zNJKeQQx8cHMIFWmBQZOEWg48oUCwk3BAuYxSS33U1zzpQk+jeUec3uFnegYrqvutHMaFTllErC0nr+y0PRetzp7dJAaMY0FTfPWVnJ0gWGhDHuYdQJHbFs/KJjSM5qI5kGYZ1cDAl1sHGGaACLzvDZC6WTMdTREIlXFN52ONCM3OA8JJRFQYYMqWZfMx0TKclq/w7EU7aTJ2MJX+2av8whxXGgQChcN+s179tNB6+g4Blhxtd+6qlFByKobFVAtvFyPb4NkNZkWydMXMkS+4Z18tttSZIxhZQIyCwz1TWapqgy/rG7TUCyrMusi9JMU5zGGIcgeFImZNVKb45OW8XAWvNx5vYN0qCx8WSYAY05thsgqYuQzYbqab2shKVGMYCak2T4Udohjk4ocoPb5ByI7PkbrfWdAxsPWSzbbNRE+SLZDTxD3Dwb0/RQdKUvyH267JjcrFJNtsXVfst6fN+2EQ/uxjuwO3Msb+AxVLo8UNgNFwl/oZMAYHpHFUORbGfNpCm8n/1SFE51166fulMpZIm6e6jopbVcvGd5MiX368izNX4i5e73IiykLeNtBM3isMQat//dOkNzq4+eCov2zn/PJ3ESWYtkeUHFnOKwpSNKlLJ2cT5nwEPCi0EQ5MBtyLMBRHqVKjj29qRJkXTBb0irh6/QHdXArean/ZHTGowfwDzI+O3iAcjNlyJkM1alD2GW2IA34g/c2Ox+EZ8b958tMwWpSzAou1LcoOLXwYYBSlI6S1H0tC/HQ3ebkaDFBSO3useZKpMKXmG4qiQvuZqtcuwa//Q1bOGnTiN9H9bISRXbvFxCxHpy5ZXmz7f3kIvqKSxNbju+WFv758TfSwAbPCtfEjCe5KblPFu4kCjuLLGPC5ZMEzuu03Bs8SEPOkHmQ1h6QddMYgpJXSWLPju9TTFCsdHPubJq5+ybmefSwVVDbPe4wiOLuTt06cLTl4DeduA9DjcPHpXb9Qb9ebJ0fG7b92bI3eJ/DmhWHy3kZmsB6RSu1pXS6MkndAPt/Q5EEThVPmIwf2hTKLIy2PmpNlSRlR4FvaIHTWb1fFGkTtFEp2SPLwuWUxl+r5Lb2kR+M3sg84XyEQvWkDEIpdka1tX8U90XVKLe0vkPH8fh+TJ9gR2mb9bSwIN6S1EuEWi8OQOyVyaOoz4Ss0vWSIvCkMIsErrRT2fUUArebRTsnHW940Gj4OUnoPg2bOn6vK7P+srX7wACS2o3ZMH+BvU7sUDvHxZ4VG39aW5xYFZhpTZ1OJltYstrEuJ6efmXxPZx2wPTImuPhWsI7OGzeWrsg1j5Y0S895yl2ky8gdC62X/NG8mMndA44/dc2+7N26JKJliIYUbscBJ+5OcSHNQX6FlkvGnj5RqVaS3TlVZrPU5RhLvRC7b9LecSJ1jmipWtuU1WV0k0FeYc7bEbq19etHtXQ29gVtXwm0AatFra4hJ3Wrj1nMNxLgF3S9YW6dVuBvMZz7J/1lGaE/wAnndcNBolBPL7ow3UJODQUCEPsWGbKZfRRq3K3RrHLBYRrG56dvqKbccx7FQRJLulRO4aVpJSiBOLCdND04MG5hLMiU+kthBsZwzbTtqT5zAZ7vWaRebgT+nfcD8BvOTIuNJm7MFQNESa9SkIf/jj6e9z7alr1nupGHA/DthIOFmGwWS92ebQw4KloRqgKrJYs4xlU460TbEgtDgBIxZWmoSzVgZucJsmpmEaaLpF5SXqayglG3VJYgLvCpFOPN++mxbNrwvtadD4Ello8wmRGYNzp3ahX+itnYI3am+ZfPzS09zTFGxtAT1FgPFWD9FNZ5QYSs6PKbgm6e4CjV9uxnAeIKnjOOxQk1Ov/m1YnrJF+AI0wBTn2ChqJn3r+uT65BaKMZhjtPEF0EQLWYQMn9Rtw4qnwYnNc+SZnYFvMwBs0b2/D1m+rp5/Zn5mipz5m6RrsCanvOAYUGfS8gvSAMV6pXYSxIEIQY2zdIWmf+egnVQdsA+asAbeKPvV5eIL2DOwmBtPvM6ukJOr1D20KfkTNJdr4bXBitpl3RNrE9RAvDnbNdIs7MmvFdJuEqinb0U67IdHOwE3mOSrKZbRbhQ9J0StcrVLzPWK/BlC12gVklmo+yzQWZjdOez5WfPsgFTpPGoz1e6v/xfRM69O4k5ReHZUpS+ca6U8exiuM4VZAfas4vh4zpKqmJlCkqGHiGQlKLKCCRD+xE4ZRRv4Jf5r6e6r/3fkm8kcAVFpv2u66WbzTHz0xiFocIBcONrcZG+EU9wsSYyLokkM727dZSYxLPsJD+JZ6Ieopj68wgFdYqlG+tOGfdr0xXjajfpfj2JZ27z7bu3b4/f5FZ2FARNHzffOY1332LndePYdybHb44c1Pz2qInxUeMdxvAeXLES7iQW7s1S/Tfg5AZz4c5vxrEkoRvTCaHJfUnSU9s8Jp//8hk+06QLl/t10wNXWZPdDBkx3RE00qaf/JdpilUKW69V1QnnUJf8oAlLQmOJVcBOi9OUBfgVCAZyjszP/vixkGyZ/nYQTjvJtSsv/GiE6aRKauVpkfxVUjxXEVM//yI0m/W5BZD9RBE4PthiHstA9wZyaMIze2eExDTY/M2HP/eSLXuZlv8URiQAxXfT21u12DlSBulE+pYEnln/LwAA///VJYvXbkkAAA==",
        "provisionScriptParametersCommon": "[concat('TENANT_ID=',variables('tenantID'),' HYPERKUBE_URL=',variables('kubernetesHyperkubeSpec'),' APISERVER_PUBLIC_KEY=',variables('apiserverCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',variables('clientPrivateKey'),' TARGET_ENVIRONMENT=',variables('targetEnvironment'),' NETWORK_POLICY=',variables('networkPolicy'),' FQDNSuffix=',variables('fqdnEndpointSuffix'),' VNET_CNI_PLUGINS_URL=',variables('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',variables('cniPluginsURL'),' CLOUDPROVIDER_BACKOFF=',variables('cloudProviderBackoff'),' CLOUDPROVIDER_BACKOFF_RETRIES=',variables('cloudProviderBackoffRetries'),' CLOUDPROVIDER_BACKOFF_EXPONENT=',variables('cloudProviderBackoffExponent'),' CLOUDPROVIDER_BACKOFF_DURATION=',variables('cloudProviderBackoffDuration'),' CLOUDPROVIDER_BACKOFF_JITTER=',variables('cloudProviderBackoffJitter'),' CLOUDPROVIDER_RATELIMIT=',variables('cloudProviderRatelimit'),' CLOUDPROVIDER_RATELIMIT_QPS=',variables('cloudProviderRatelimitQPS'),' CLOUDPROVIDER_RATELIMIT_BUCKET=',variables('cloudProviderRatelimitBucket'),' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' CONTAINER_RUNTIME=',variables('containerRuntime'),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
        "provisionScriptParametersMaster": "[concat('MASTER_NODE=true APISERVER_PRIVATE_KEY=',variables('apiServerPrivateKey'),' CA_CERTIFICATE=',variables('caCertificate'),' CA_PRIVATE_KEY=',variables('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',variables('kubeConfigCertificate'),' KUBECONFIG_KEY=',variables('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',variables('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',variables('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',variables('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',variables('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ADMINUSER=',variables('username'))]",
        "provisionSource": "H4sIAAAAAAAA/8xTTXPTMBC951c8gibTMmMaF05oAr30xo0DhzTjUexVrEGWXGkNLU3+O2M7yaQhuOHW29qrfR+rp7dvrpbGXcVyNArE4TGviszoTCtjm0AXl3hC+99QnIlU4pcyPBPXEmwq8g3PxAeJWBrNmEyOCgntAwyMg7iIdI8UYot1KVH4HQbEvni62UjMIb4goXtMgUWLtgykfmC9RrRENUQrogVwJEF56XH7QHnDVOBuLG7uxhCmw44Sm1OuMuezyIrj67d3oH9FnLEKS2XtgO7+QKe7CXYmPr4sUwUk/FtDbIeHJA5tc4+LFOkUeRMsEh2/fYXoSn/AcNJq+5VpHzJt7ED02m6tuOxMvmDOaMyRaIjdEBYSXJLrLbVgJ8RgM1I1dxtv6kJxL+YvqnQ67VlUzcmKGP1hXH+epFhjFahG8oDx/Pvt4tP7d+PdYh396+7T07E+wj+Md3yMTFXONgsUWQU+J9OIP3OnKjorHscp3jOiUFR5lwSyXhXdu9i3tmIgtkzPu88G//dF/AkAAP//Ky0c8bIEAAA=",
        "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "registerWithTaints": "node-role.kubernetes.io/master=true:NoSchedule",
        "resourceGroup": "[resourceGroup().name]",
        "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
        "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
        "scope": "[resourceGroup().id]",
        "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
        "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
        "singleQuote": "'",
        "sshKeyPath": "[concat('/home/',variables('username'),'/.ssh/authorized_keys')]",
        "sshNatPorts": [
            22,
            2201,
            2202,
            2203,
            2204
        ],
        "sshPublicKeyData": "[parameters('sshRSAPublicKey')]",
        "storageAccountBaseName": "[uniqueString(concat(variables('masterFqdnPrefix'),variables('location')))]",
        "storageAccountPrefixes": [
            "0",
            "6",
            "c",
            "i",
            "o",
            "u",
            "1",
            "7",
            "d",
            "j",
            "p",
            "v",
            "2",
            "8",
            "e",
            "k",
            "q",
            "w",
            "3",
            "9",
            "f",
            "l",
            "r",
            "x",
            "4",
            "a",
            "g",
            "m",
            "s",
            "y",
            "5",
            "b",
            "h",
            "n",
            "t",
            "z"
        ],
        "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
        "subnet": "[parameters('masterSubnet')]",
        "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
        "subscriptionId": "[subscription().subscriptionId]",
        "targetEnvironment": "[parameters('targetEnvironment')]",
        "tenantId": "[subscription().tenantId]",
        "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
        "useInstanceMetadata": "true",
        "useManagedIdentityExtension": "false",
        "username": "[parameters('linuxAdminUsername')]",
        "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
        "virtualNetworkResourceGroupName": "''",
        "vmSizesMap": {
            "Standard_A0": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A10": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A1_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A6": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A7": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A9": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_B1ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B1s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B2ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B2s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B4ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B8ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D15_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D16_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D1_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D32_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D3_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D3_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D5_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D5_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D64_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D64s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D8_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13-2_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13-4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14-4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14-8_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS15_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS1_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS5_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS5_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E16_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E2_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E2s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32-16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32-8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E4_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E4s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64-16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64-32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E64s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E8_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F16": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F16s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F16s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F1s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F2s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F2s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F32s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F4s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F4s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F64s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F72s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F8s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F8s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_G1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_GS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4-4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4-8": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5-16": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5-8": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_H16": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16m": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16mr": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16r": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H8m": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_L16s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L32s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L4s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L8s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128-32ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128-64ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64-16ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64-32ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC12s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC12s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC24r": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC24rs_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24rs_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC6": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC6s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC6s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND12s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND24rs": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND24s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND6s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NV12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NV24": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NV6": {
                "storageAccountType": "Standard_LRS"
            }
        },
        "vmsPerStorageAccount": 20,
        "vnetCidr": "[parameters('vnetCidr')]",
        "vnetCniLinuxPluginsURL": "[parameters('vnetCniLinuxPluginsURL')]",
        "vnetCniWindowsPluginsURL": "[parameters('vnetCniWindowsPluginsURL')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "vnetSubnetID": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
                "name": "loop"
            },
            "dependsOn": [
                "[variables('vnetID')]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "primary": true,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig4",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig5",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig6",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig7",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig8",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig9",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig10",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig11",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig12",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig13",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig14",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig15",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig16",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig17",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig18",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig19",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig20",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig21",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig22",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig23",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig24",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig25",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig26",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig27",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig28",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig29",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig30",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig31",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpool1VnetSubnetID')]"
                            }
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersionStorage')]",
            "copy": {
                "count": "[variables('agentpool1StorageAccountsCount')]",
                "name": "loop"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
            "properties": {
                "accountType": "[variables('vmSizesMap')[variables('agentpool1VMSize')].storageAccountType]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('agentpool1AvailabilitySet')]",
            "properties": {},
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset')))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('agentpool1AvailabilitySet'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpool1AvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('agentpool1VMSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpool1VMNamePrefix'), 'nic-', copyIndex(variables('agentpool1Offset'))))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[variables('username')]",
                    "computername": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=Accelerators=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.240.0.0/12 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=kubernetes.io/role=agent,agentpool=agentpool1,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n\nruncmd:\n- echo `date`,`hostname`, startruncmd>>/opt/m\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent\n- echo `date`,`hostname`, preaptupdate>>/opt/m\n- apt_get_update\n- echo `date`,`hostname`, postaptupdate>>/opt/m\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates nfs-common iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- echo `date`,`hostname`, aptinstall>>/opt/m\n- systemctl enable rpcbind\n- systemctl enable rpc-statd\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpcbind\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpc-statd\n- echo `date`,`hostname`, predockerinstall>>/opt/m\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- echo `date`,`hostname`, postdockerinstall>>/opt/m\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n\n- echo `date`,`hostname`, PRE-APT-SYSTEMD-DAILY>>/opt/m\n- /usr/lib/apt/apt.systemd.daily\n- echo `date`,`hostname`, POST-APT-SYSTEMD-DAILY>>/opt/m\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- mkdir -p /opt/azure/containers && touch /opt/azure/containers/runcmd.complete\n- echo `date`,`hostname`, endruncmd>>/opt/m\n\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[parameters('sshRSAPublicKey')]",
                                    "path": "[variables('sshKeyPath')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[variables('agentpool1osImageOffer')]",
                        "publisher": "[variables('agentpool1osImagePublisher')]",
                        "sku": "[variables('agentpool1osImageSKU')]",
                        "version": "[variables('agentpool1osImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpool1Offset')),variables('maxVMsPerStorageAccount')),variables('agentpool1StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpool1AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')), '-osdisk.vhd')]"
                        }
                    }
                }
            },
            "tags": {
                "creationSource": "[concat(variables('generatorCode'), '-', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]",
                "orchestrator": "[variables('orchestratorNameVersionTag')]",
                "poolName": "agentpool1",
                "resourceNameSuffix": "[variables('nameSuffix')]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpool1Count'), variables('agentpool1Offset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpool1VMNamePrefix'), copyIndex(variables('agentpool1Offset')),'/cse', '-agent-', copyIndex(variables('agentpool1Offset')))]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
            "location": "[variables('location')]",
            "name": "[variables('masterAvailabilitySet')]",
            "properties": {
                "managed": true,
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 3
            },
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('virtualNetworkName')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetCidr')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnet')]",
                            "networkSecurityGroup": {
                                "id": "[variables('nsgID')]"
                            }
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/virtualNetworks"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('nsgName')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_ssh",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow SSH traffic to master",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22-22",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "allow_kube_tls",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow kube-apiserver (tls) traffic to master",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443-443",
                            "direction": "Inbound",
                            "priority": 100,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('masterPublicIPAddressName')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('masterFqdnPrefix')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('masterLbName')]",
            "properties": {
                "backendAddressPools": [
                    {
                        "name": "[variables('masterLbBackendPoolName')]"
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('masterLbIPConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRuleHTTPS",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                            },
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('masterLbIPConfigID')]"
                            },
                            "frontendPort": 443,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "Default",
                            "probe": {
                                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
                            },
                            "protocol": "tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpHTTPSProbe",
                        "properties": {
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2",
                            "port": 443,
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/loadBalancers"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "masterLbLoopNode"
            },
            "dependsOn": [
                "[variables('masterLbID')]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
            "properties": {
                "backendPort": 22,
                "enableFloatingIP": false,
                "frontendIPConfiguration": {
                    "id": "[variables('masterLbIPConfigID')]"
                },
                "frontendPort": "[variables('sshNatPorts')[copyIndex(variables('masterOffset'))]]",
                "protocol": "tcp"
            },
            "type": "Microsoft.Network/loadBalancers/inboundNatRules"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "nicLoopNode"
            },
            "dependsOn": [
                "[variables('vnetID')]",
                "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                                }
                            ],
                            "primary": true,
                            "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig4",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig5",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig6",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig7",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig8",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig9",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig10",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig11",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig12",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig13",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig14",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig15",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig16",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig17",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig18",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig19",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig20",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig21",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig22",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig23",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig24",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig25",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig26",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig27",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig28",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig29",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig30",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig31",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
                "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('masterVMSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[variables('username')]",
                    "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                    "customData": "[base64(concat('#cloud-config\n\n\npackages:\n - jq\n - traceroute\n\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n\n\n\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SRQW+jMBCF7/wKy+dFaK/WKpe9tIe0kSL1EvUwmClYsceWPRDx7yunQJomKdzwe+/z+A0E84YxGU9KyOGvLI6GGiXkzjeycMjQAIMqhCBwqIQ89jWWSXfY9BajnIQUQF/UMTG6LFmo0aacFoINRiW0J47elsEC4flcexc8IbES1+wiBdQ52/nEL8gnH49KcOxzLnPAEMaJXj6eL3/GQZvVf1mOhIzpaQwY8+8+oN7MRu2dg1zAQVbd7JB/hLwg3ycrxDYpcfiG3M+e/54+TLuZnYO3vcOt74mnca9GRtblBSIXgxAuR3bAnRKyQtbVPdvCGSCW1tRnlkV+CBogVtbU1Y1vJrlk1rIngBaJqy0QtNg8N0hseCz3yGyovXpFRGheyY7L8r76+Lm5+zXk5Z8vX4Dhlz7WunhMu1vKbSHrgPVmPgMAAP//6fKK/HMDAAA=\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySsY6jMBCGe57Ccn0IXWud0qS5K3IXKdI10RaDmSVW7LFlD0S8/coJsJsNWZYO+OYb/t9AMP8xJuNJCdn/lMXZUKOE3PtGFg4ZGmBQhRAEDpWQ567GUnvi6K3FWDogaDHKkUgB9IylITG6/MpCjTZljRBsMCoxKspggfD6XHsXPCGxEk+WFCmgzpKTT/wX+eLjWQmOXRZkHAxhHNeU3/jifBkHbcZ+ZS4SMqbfQ8CYbw8B9WYCtXcOcjdHWZ0mQv4QcsH9Ms5AbJMSxw/u7QzvbuzW06tpN9NE723ncOc74jHIXRhkXb7L5AwI4fLIHvikhKyQdbWEzZ4eYmlNfXVZ5KeiHmJlTV09cJPJJbM2ewFokbi6BW7+NEhseCgPyGyovUsREZp/ZIf5WG99fD7T5Rryb3FdPgvDF32sdfHctljKYyHrgvVm3gIAAP//7hHuXJ8DAAA=\n\n- path: /etc/kubernetes/manifests/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7RVwY7jNgy95ysI51Cg2HiwtyK3aQsUBabbRbrTHoo5KBJjC1FIV6ST8d8Xkhw7mWSAHqY3JabI954eSdP5PzGKZ1qD6Z3Xev+D1J4fjp+3qOYzLOFb6wW8QMR/eh/R1Yu9J7eGrxy8HRZL+JnpO4UGCaNRLGkAj0gqsOMIJoR8GUUFPMGmnDdo0R/RgahpsF7wwesf6SjrBcAKqjdx1SL2oXxcwhM30LED2xpqUMDonFY6JkEIeMSQM+XT+m3AAgAgonAfbUmbYpvIfbeGqsq/U6nNGAJVx04qcIySCB+M2nYmpgyGBpB+e84JvEsY5dOU6tR62yYtLZN4USSFk9cWtEXY/Pj4E3RZ1Hq8MaODv0v1l8VEP//xELipPo1nUaO9VEmM31CNM2puVTh/+W/0bxDcKziCKj4I3MDpWprtkAlWMojiYb3vt7jqIr8OFTABkuvYJ7NwBMF49BblEvEXpvJYvWDMQG4TveSAI8ZtDsgAxj/f5whLsBwRHr/+Wv68R3qCl1if4d1SNr22SOqtUXRXrrAY1XgCYlpN1njePEFntJX6Xaa/JESXdK9KjOSI6ezP583TRLF6MJ3/PhH8ywdnTXTFrp6aego5lsavZkulVxqhw5bdkBxsmXa+OZhu6jVPkJUvsOo7LfYRuk91ZaQ6TqI0BIApDGC6LnjMGk83E7jstQuEFZA5oHTGYj1lQsBDpwOIRk9NAmUNwRaT9C6lFAxoNb/adN3NhUqm6UuGfFnzolHvyipoI+pZ0/9LxFLlamykaczaYrwWLecy5ABfFSn5Ig/VPJhG6BnehyGdA+aKKXRcR0mjHADSch8cfPn9W3oeTzb0Lm2hzOgRbPL1Ku+Y5Azl0o4XLMdWHNlcT8b63dGY1KJmFXuiZJApTfB7LAMuWa81CrtUrCeHEXRy6MmHAMQ65pq3I10uyDvrsBjrehmOHXuzEP8NAAD//+gVlJa+BwAA\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySwc6bMBCE7zyF5XMR6tWqfqnqpf8hbaRIvUQ9LGZLLOy1ZS9EvH1lCqRJoQk3mJnPy6whmB8Yk/GkhBw+yqIz1Cghj76RhUOGBhhUIQSBQyVk19dYQjAJ44BRzkIKoFc1jYnRZclCjTbltBBsMCqhPXH0tgwWCKfv2rvgCYmVuGcXKaDO2YtP/A356mOnBMc+5zIHDGGc6eX+fPkxDtqsfspyJGRMX8eAMb+eAuq3xai9c5ALOMvqsjjkByFvyJ+zFWKblDj/hfx8fD9Nni+efpn2bXEO3vYOD74nnse9GxlZlzeIXA1CuBw5Al+UkBWyrrZsK2eAWFpTTyyLvAsaIFbW1NU/vpXkknmavgK0SFwdgKDF5r1BYsNjeUJmQ+3df0SE5jvZcV3fw3nJ6273QB+mEf+U+Lju7e7yjZniKzP8p8RnBe7TNptccC6ZlwGvlbnZ1z58Ku53AAAA//+XfMNr4AMAAA==\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRsW7zMAyEdz8Fkd3w/w9ZhKJAxw5pAwTozkiEIySiXJFy4LcvZMdOWjRtR5LH43cSdv6NkvjIBvr/1dGzM7CNrgqk6FDRVACMgQwc855qdC5yHZCxpXQZSYd2nssgSqEC6G9cpSNbfA5R9IX0HNPRgKZMFYCNrOiZkhRF/dMtAB+wJQMPZZyYlOSpaDaTZNeRfRx1iSTmZGn0nBrvmUSXGsB22cA6LHWgENNgYP1v48dmH0850CZmntdmuJFLLpuhCLaoBwOrhtQ2V7ZmEq4WBnSvfBqW6FfHIP47ux5Tc/L75ozYEmsz5XTPjli9DvWOVD239y9MGT697A18+Y7x1GW9+y3FV9x7Bn/n/ggAAP//ovMbJ38CAAA=\n\n\n\n- path: /etc/kubernetes/addons/kube-heapster-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWW2tjNxB+P79C+F1ep92AK+pCmk3bh2Y3JFAoLISxNOujWrfq4rX31xfpHNvnYgcTNlC9WGdGo2/mm4sMTv6FPkhrGNlcVWtpBCNP6DeS4w3nNplYaYwgIAKrCDGgkZEawYWIvhUEBxwZWacl0rALEXVFiIIlqpBtSNF4gxHDVNp3XKVsTEMDw8gk+oSTchKEsEaDgRX6ad9MW4GMPCK3hkuFFaW06rrvl8CnkGJtvfwGUVozXc+L5eZqiRH20d028I9W4YnQGv/ZPkL6VcaaGjBm93Yx3ZmQPN5tZYih8klhYBUl4OTv3iZX8CjBbUSTIw3lE5zLG4/BJs+xPSTQKbvTaGJWbtAvW8UKY/lVMjSbrxB5XXbJCYhYtq4IR9CTyRgJNy0IPZZA+2lFu3NWXObGd0jlr9IIaVb/y4xahY/4JYPsiX0hxIqQcZ1eEEtIy3+Qx1I6J9v48uYdpmM4GHokv47B/snGsT/6jl3iaXDIM7SzPrYllreMzGcFJoJfYXxoRfMfKkICKuTR+tbjeaDgXAcrB99E++HQTD02jo14qMazfIxuf8s6e2EYD/jc0+bRKckhMHI1YkbnzvyzE8zpcCJqpyBia9QhIi/Vsz9HCCFgjI2lCzqHA69RJIV+CsrVMCCAexklB0WdFawZUYTsAyu5twp9/05K1rhj5LY1vcn0hk9G7Q6Y1mUb6xk5kFru7bXSx2F15sWtiSAN+g6a1LBCRn4+er6v8SeH/JcDKrdagxHH0CmZvNvfP+lKKW2m8KJDRkhag989g5Ps8+Tz5GgwaqNm9Ub5UfhvwhB7MkK4S7lzdE+oUVu/Y+Tq/exedjRKavnqC06xVRL0iEF+u4gxZ8VzGYYDyrhLi/lMD6S4jR6Kbja9HiobDxfFwZN27YH3I3WsPYbaKrG4HmiOj/PiTG4PNXTugLNKUYdeWrH4cZbX0LkQpc4FvMCtswZNlKDOFcThFXxdWVyfyepPF1bFRfZoNt0kb0Al/M1b3b/vi0Ql2jd2JH+AWLPDaJpmDjrHGkru/35++PTh+ePN/d33Rysj+SXIp4eb2z1u/vv01JvEeeV3ZjAAbWBESZO21X8BAAD//0SxZ2rFCwAA\n\n- path: /etc/kubernetes/addons/kube-dns-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xYS2/jNhC++1cQ7ll+ZJHdQFgHCOKgG2yTGnXa+4QcS4QpkuHDjffXF5RkWZRsx14URX0T5/VxHt9IBs3/QmO5kinZTAdrLllKlmg2nOIdpcpLNyjQAQMH6YAQCQWmZO1fMWHS1gdWA92d2q11WAwIEfCKwgYbUkqMRId2xNWYCm8dmsRWYVIydMbjsNQExpQsQEKGZhSbFYphSv5AqiTlAgdJkgxOwY9wR2hubAJaR9e4BGOsWWXku3/F+fPyggxZjTTgqSM9LlLydV15qS/wuLgdEKKVcSXwpHa9AxwEKbn+VD0Y5RRVIiV/zhexcuKoPmXwch8MLAqkTpljKepmG7S24830FR3s8j5HLdS2wE7L/FwjHC7Spin21aSX62R/eCLfBrXgFGxKrnrXLsDR/LcW3mM4ekgcFlqAw9pP6/plV0upHDiuZOOXEEtzZF6gGYHQOXS6nRruOAWRaMVSMhzWZiICdxzeJak+cB1Cdukq4a9WXHK33YfVit1Jx+96gtBYuEJjkM294TJbVrfkMnvMpGqOH96R+pCQtmlC/kae5S4l08mkdV7Fq2O9oCnSSFhnZRmVsv0ry/rwrg1aG9dgH3mN23SXzZ6YEKXRQHBOHuUB8QaExwN+S8/dylQ/p7QSKtt+LwNHxcqVdaGLBztNEYK3kdd47+smuQusaX+XYjvoA35459Y1bauEL7DlpzNCVMkVzxov1eMT6PbVegy3jxlAgkhJaK5B48IBl2haQcFkrWQlZJgkTBXA5ezrPhOBUgW6+6pz56X8djTsmEmbBF6bTSeT608d4WZ21Tmp7pMwbmbjzp33mryADGs23kMJvKyR3jZqgm9QorULo16xnZ8VcOENvuQGba4ES8l1S5o7p39FF/eKBpenZDjOEYTLfyQhNJN22BmCwN83k5t4NgKPhIJ8e3lZtARhWDiIOQrYLsPSZDYln9um1lOK1rZwTltSxwtU3jWm+zvs698uf7OnduluCr8ocZcF6nVRyL9QFETEIPEuu9iho/qE02rfVT+DwPjBIp4sU2N2pEDTny7Qp8lZJTBolTc0phzBC+46JFRgocw2JdMvkyfekhh882i72lT7Mq/FQR+Ri4pInsILYlT103xCSBEsFmUeuxN4gh56kyxU5pR1DI2JBZWr+ckBD3oGrQPj5tIWYN9m8TYsuSJ+XHeZBGiOieU/MFDPpCOVKgRQYtM5D+sXzWx69WU0GU1G018O0VatNOYyAcbMCIyG8Zkm+vM56kJlyQooF9xtZ8kp5ps/L5/AvsXM10xaSN3ZBHB4WC+f++ND/+G4H2vaj5uS9Pbex02b0ILNpBVKrb1ur3iGK/DCjeyGjj5aeKSpJLkdM9yMpReiU05vxKxZHXVZuu36r0JJy6Y6E1Bvl5Uq5dIOu6xz/uY5ulMdGd4cv1Wu/7t93Esq+d/t4xrq2ePYwX1sP164Z64vWDOHt0zLA5N2oQSn2/BtWfZpLbDRHxTPh95HpWLY/yIIn6udDy1lUyK49O+DfwIAAP//KA420AwRAAA=\n\n- path: /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUy27bMBC8+ysI3RklVyEuULgBemkawEDva2psE+ZDWS5d++8LSrUtOYmb8kTMLoczswSps7/AycbQKBwEoWxTvX9YQehhtrOhbdQ3go9hCZl5CLUk1MyUcrSCS2Wn1C6vwAGCdGdjbVxOAtYJvLcGjaqEM6q+00TfxYAgTX9IdxwPx74iFtyoEFvMlArkcdVRoNSROeHpmAR+ljqYIkLgO0eCQdBYaFljsbdlvJGi1OmKvhQdmKSkdIK02uE4tGuODnfTNDyVMM7csSvnIzfq6TWTO+N7cnkaVVlYr2GkUc9xabZos8PsZCAI2QAeyTDRewrtxaVWVb09duCiqBrBU7taVVqXFhPD2m7m9Z64dnZVF8xB6kutmh46TdrYluePpW0xIAvb8per5jVIMkNvSJDmT4cObD2CkFuwFWvIvcT2awhR+nzn0ySsp03J5/GS7veTtWUHM7rtncczLEaKmQ1GD6GArxlJJphSpsuNeri/92c0wWS2clzEIDjIuL1ju7cOG7SNKqovQ40ue/yIOYz5tfIFeSHZNqqqIaZOydUGLKka0Q4+UnK6L+ltTDIRTu3P4I5Xd77DfonsLT3E6Ev9v+k/81TGExlq/7qmOH2G/I68m+BDnqMnXxp7KeNp/JWWE9dpS4zaUJ+gXVtDkxBuJHyb+zO2PzB9m/ijcd0YVvl4lnAw5Vc5Hygf+NVPFFOjnA35MPsTAAD//zcsf+33BQAA\n\n- path: /etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xUT08bPxC976cY5b4J6HcB61ckChIXiqKk7X3inSZubI9rz6ZsP33lJVl2IYRQFak+WfP3zfMbYzBfKSbDXsHmtFgbXymYU9wYTZdac+2lcCRYoaAqACwuyKZ8A1ifpRJDULCuFxQ9CaWywrRaMMbqIaJzjA1PtK2TUCzTQ3kFI4k1jdpIrCr2Dj0uKY6HaY4rUjAjzV4bSwWAR0cvds3OFFBvI8rUJCFXlGVZ9IeNC9RjrGXF0fxCMezH67O23+Z0QYI7Lq4eQM/Y0kfjK+OXAz4OQvkHyIpsaUbfMgYM5iZyHQ7MXgA8m7obcocIK2d8kerFd9KSVFHCXtX8nWd6qsmXxXg0e6+9xJ/AToF0xhE4SguobK8Kzk7anoJxSTJtTecn59mYyJIWjsfJQ5pACu64olzkGU10L+TzNT2R7zUFy42jQ2v8Pkv6vkRHCtZoTApOn3HpUPTqtjfhEfSSCxaFtgV6TOVjB7WO2eUdzHw0e0HjKXYVSsC47NUroSxXhKElfsVJPqxEgppMdsZxjwK1lVQ+xuGSFPz/iON6B2MeSF8MA6e1tVO2RjcKLu1PbFLnt2ZDnlKaRl7QIzCADOSGpG8CCCgrBaPJaGjtq7tr7I0YtNdksZlndVRJwX/9CDGOuJZ9zoMCeWw6YLJje7oPTogsrNkq+Hw17eyREtdRU+qPGelHTUnScHQd6v18X02/zLYZF4MMR45jsz/pU+vbl2eNM2/pfZvj39p4kJQG3/fda9R7rmg+WLt88tfz5GfgpMAaX98XvwMAAP//QbpZm2wIAAA=\n\n- path: /etc/kubernetes/addons/azure-storage-classes.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8yQsWorMRBFe33F4F77cPdQmzaYEEPaMJbGzrCr0TIaGZKvD7veBOwYV8Gklu6dew6O/EJauUiAakXxQF3/v3Zc/h3XOzJcu54lBdieHh8GrNVlMkxoGByAYKYAifbYBnMAKFIMjYvU6Rm+auOU7KbKrm87UiGj+Q5Xv6T9/CfAyrTRygEMuKNhqTkPxaFVI/WV9MiRvjOjliNPOKThIoIfTcknrr0bUTGTkc7dEeMbyyGXRAE2Rch5791vmWmSUfBAyY9KmVv+6eg+mAsExliamL2PFODpNOn18Xl7RxHVUBJq+ksmtsummyqucN60c8XCPGrPA90Ffj50Ad+3zbzkjPgzAAD//wD1SX0IBAAA\n\n- path: /etc/kubernetes/addons/kube-tiller-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RUXWvbShB9169Y/C4Hc3PhslwCbmKSQJwaOy3tUxivpvY2+9WdWWP31xcpsaKvhuQhhepJu3uOzjkzo4WgP2Mk7Z0Uu0n2oF0hxQrjTiucKuWT48wiQwEMMhPCgUUpWBuD8WlJARRK8ZDWmNOBGG0mhIE1GioZojqJDhlprP2JMokYY06PIlKMOCYcVUgoCu8sONhgHLdp1hclduYoRZztNTGNsjzPs2aCuAY1hsRbH/VPYO3d+OG/ir6brJHhGPD80cPSG/ygXaHd5qWQfyZL9AaX+K2UgaAvo0/hhUCZEL0otfOjLSisdhml9XdUTDLLxWB/X9vVbrW789KqYbNoEIIUWzS2WnXE3rOmbbG8wGD84fcBKaAqHQcfubKe982WZ1Kcnk7+Oa3WDHGDvKh2axihQcU+viI+HwLWXbxe9IqMe0ZXvlJnhi+qMBY7P+jfXHdGGwwwPrpvpiqfZrJ+usGExw9X762hv+1ChVDeMWiHsdbIBbrds+BxGu6ub25my/vb6Xy2WkzPZzVAiB2Y1LsLB9lX16u7j8uv9/Pplz5/9P9zke8qj3PYX2liHw9noxqvLWxQih54FVCd1Sijd+iQaBH9GmVDbMscLpGbW0IE4K0UJ0dS+6ye/X8b+9pp1mAu0MBhhcq7gqSYNACsLfrEA2e9hh1VqFn1ujGLzr/3wkciQqHfnLpmvW/siORTVEhNExF/JCSmtjEV0kCDzxeflk/wsxbcovXxMMCYVwdDJKOtfrXqTQl+k2SL4XyBq9bdWD7lrda5VTxJYbRL++xXAAAA//9fQ5xvoQgAAA==\n\n- path: /etc/kubernetes/addons/azure-cloud-provider-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7yQMW/jMAyFd/0KIouXUw7ZDtrubuieAl2CDLT8mqqRJYOkDDS/vrANZClQdCi6SiTf+z7vveMpPUE01RJIeo57bvZSJd3YUi376x/dp/p7PvQwPrhrKkOg/7mpQY41w40wHtg4OKLCIwLpmxrGwLcm8DHXNvhJ6pwGiCPK3CPrMk10bT2kwLBmxO2qV8icIgLtTBp2TlqGBueJp/QgtU0a6NR1Z0ck0NokYn1RRIHp+jFDeg1LBp26C6z71UUBG7qz+wbqf6kMqVx+Ar5mHPG8rHx0T3cln1B8qZq2/hXRVs1bzuNW5G+MtRW7H5kWa2oo5uea2wjfp7LBLQM68VJ+YfNbnnsPAAD//990ZYZlAgAA\n\n\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates= --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.240.0.0/12 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_NODE_LABELS=kubernetes.io/role=master,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n  \n    KUBELET_REGISTER_NODE=--register-node=true\n    KUBELET_REGISTER_WITH_TAINTS=--register-with-taints=',variables('registerWithTaints'),'\n  \n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n- path: /etc/systemd/system/kms.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SQsW4yMRCEez/FvYDxX/46yUWipEgLRCkIhTEDrM5nX3bXEHj66I6kOUVKY3lGn2alb/OaSbfmCRKZBqWSfbhVRteLWeKjEkP8vsQOvBDwmSLMw0HBPkMvhTtbcqKMhQY+Qo3ZrO7U1qyvA7xQPySYJUQDqw/pEq5i1tSjVF2N3QrR/zPPn4hT9K4Kux1ld7/acM3Nu2kaazPUn4rodzyXVHt4VwZtx2dWQ6Pr6g6coZB2ln+BRZKLYBUXgx0/dKAYFLKIrO3fyGzyHNgl2rlLCEdkbefFhDNpuJ1c91/spN12vbRpXBxVvmTRkNLWvIWs2D9efV+Tkq0C/hH+FQAA//884M3mwQEAAA==\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -e\n\n\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n    sed -i \"s|<kubernetesAddonManagerSpec>|',variables('kubernetesAddonManagerSpec'),'|g\" \"/etc/kubernetes/manifests/kube-addon-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g; s|<kubeClusterCidr>|',variables('kubeClusterCidr'),'|g\" \"/etc/kubernetes/addons/kube-proxy-daemonset.yaml\"\n    sed -i \"s|<kubernetesKubeDNSSpec>|',variables('kubernetesKubeDNSSpec'),'|g; s|<kubernetesDNSMasqSpec>|',variables('kubernetesDNSMasqSpec'),'|g; s|<kubernetesExecHealthzSpec>|',variables('kubernetesExecHealthzSpec'),'|g; s|<kubernetesKubeletClusterDomain>|',variables('kubernetesKubeletClusterDomain'),'|g; s|<kubeDNSServiceIP>|',variables('kubeDNSServiceIP'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n    sed -i \"s|<kubernetesHeapsterSpec>|',variables('kubernetesHeapsterSpec'),'|g; s|<kubernetesAddonResizerSpec>|',variables('kubernetesAddonResizerSpec'),'|g\" \"/etc/kubernetes/addons/kube-heapster-deployment.yaml\"\n\n\n    sed -i \"s|<kubernetesDashboardSpec>|',variables('kubernetesDashboardSpec'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPURequests>|',variables('kubernetesDashboardCPURequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryRequests>|',variables('kubernetesDashboardMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPULimit>|',variables('kubernetesDashboardCPULimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryLimit>|',variables('kubernetesDashboardMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n\n\n\n    sed -i \"s|<kubernetesTillerSpec>|',variables('kubernetesTillerSpec'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPURequests>|',variables('kubernetesTillerCPURequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryRequests>|',variables('kubernetesTillerMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPULimit>|',variables('kubernetesTillerCPULimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryLimit>|',variables('kubernetesTillerMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMaxHistory>|',variables('kubernetesTillerMaxHistory'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesControllerManagerConfig>|\\\"--allocate-node-cidrs=false\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--cluster-cidr=10.240.0.0/12\\\", \\\"--cluster-name=masimusi\\\", \\\"--cluster-signing-cert-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cluster-signing-key-file=/etc/kubernetes/certs/ca.key\\\", \\\"--feature-gates=\\\", \\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--node-monitor-grace-period=40s\\\", \\\"--pod-eviction-timeout=5m0s\\\", \\\"--profiling=false\\\", \\\"--root-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--route-reconciliation-period=10s\\\", \\\"--service-account-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--terminated-pod-gc-threshold=5000\\\", \\\"--use-service-account-credentials=true\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesAPIServerConfig>|\\\"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,AlwaysPullImages\\\", \\\"--advertise-address=<kubernetesAPIServerIP>\\\", \\\"--allow-privileged=true\\\", \\\"--anonymous-auth=false\\\", \\\"--audit-log-maxage=30\\\", \\\"--audit-log-maxbackup=10\\\", \\\"--audit-log-maxsize=100\\\", \\\"--audit-log-path=/var/log/audit.log\\\", \\\"--audit-policy-file=/etc/kubernetes/manifests/audit-policy.yaml\\\", \\\"--authorization-mode=Node,RBAC\\\", \\\"--bind-address=0.0.0.0\\\", \\\"--client-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--etcd-cafile=/etc/kubernetes/certs/ca.crt\\\", \\\"--etcd-certfile=/etc/kubernetes/certs/etcdclient.crt\\\", \\\"--etcd-keyfile=/etc/kubernetes/certs/etcdclient.key\\\", \\\"--etcd-servers=https://127.0.0.1:2379\\\", \\\"--insecure-port=8080\\\", \\\"--kubelet-client-certificate=/etc/kubernetes/certs/client.crt\\\", \\\"--kubelet-client-key=/etc/kubernetes/certs/client.key\\\", \\\"--profiling=false\\\", \\\"--repair-malformed-updates=false\\\", \\\"--secure-port=443\\\", \\\"--service-account-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--service-account-lookup=true\\\", \\\"--service-cluster-ip-range=10.0.0.0/16\\\", \\\"--storage-backend=etcd3\\\", \\\"--tls-cert-file=/etc/kubernetes/certs/apiserver.crt\\\", \\\"--tls-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--v=4\\\"|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesSchedulerConfig>|\\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--profiling=false\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesAPIServerIP>|',variables('kubernetesAPIServerIP'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n- path: \"/opt/azure/containers/mountetcd.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('mountetcdScript'),'\n\n- path: \"/etc/systemd/system/etcd.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=etcd - highly-available key value store\n    Documentation=https://github.com/coreos/etcd\n    Documentation=man:etcd\n    After=network.target\n    Wants=network-online.target\n    [Service]\n    Environment=DAEMON_ARGS=\n    Environment=ETCD_NAME=%H\n    Environment=ETCD_DATA_DIR=\n    EnvironmentFile=-/etc/default/%p\n    Type=notify\n    User=etcd\n    PermissionsStartOnly=true\n    ExecStart=/usr/bin/etcd $DAEMON_ARGS\n    Restart=always\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/opt/azure/containers/setup-etcd.sh\"\n  permissions: \"0744\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -x\n    source /opt/azure/containers/provision_source.sh\n    ETCD_VER=v',variables('etcdVersion'),'\n    DOWNLOAD_URL=',variables('etcdDownloadURLBase'),'\n    retrycmd_get_tarball 60 1 /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz ${DOWNLOAD_URL}/etcd-${ETCD_VER}-linux-amd64.tar.gz\n    tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /usr/bin/ --strip-components=1\n    systemctl daemon-reload\n    systemctl enable etcd.service\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n\n\nruncmd:\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- wait_for_file 1800 1 /opt/azure/containers/certs.ready\n- /opt/azure/containers/setup-etcd.sh > /opt/azure/containers/setup-etcd.log 2>&1\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent \n- /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" | tee -a /etc/default/etcd\n- /opt/azure/containers/mountetcd.sh\n- /bin/chown -R etcd:etcd /var/lib/etcddisk\n- systemctl stop etcd\n- systemctl daemon-reload\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart etcd\n- MEMBER=\"$(sudo etcdctl member list | grep -E ',variables('masterVMNames')[copyIndex(variables('masterOffset'))],' | cut -d',variables('singleQuote'),':',variables('singleQuote'),' -f 1)\"\n- sudo etcdctl member update ${MEMBER} ',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\n- retrycmd_if_failure 5 5 10 curl --cacert /etc/kubernetes/certs/ca.crt --cert /etc/kubernetes/certs/etcdclient.crt --key /etc/kubernetes/certs/etcdclient.key --retry 5 --retry-delay 10 --retry-max-time 10 --max-time 60 \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\"/v2/machines\n- apt_get_update\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n- /usr/lib/apt/apt.systemd.daily\n\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- apt-mark unhold walinuxagent\n- touch /opt/azure/containers/runcmd.complete\n\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[variables('sshPublicKeyData')]",
                                    "path": "[variables('sshKeyPath')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "dataDisks": [
                        {
                            "createOption": "Empty",
                            "diskSizeGB": "[variables('etcdDiskSizeGB')]",
                            "lun": 0,
                            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
                        }
                    ],
                    "imageReference": {
                        "offer": "[variables('osImageOffer')]",
                        "publisher": "[variables('osImagePublisher')]",
                        "sku": "[variables('osImageSku')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                }
            },
            "tags": {
                "creationSource": "[concat(variables('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                "orchestrator": "[variables('orchestratorNameVersionTag')]",
                "poolName": "master",
                "resourceNameSuffix": "[variables('nameSuffix')]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' ',variables('provisionScriptParametersMaster'), ' MASTER_INDEX=',copyIndex(variables('masterOffset')),' /usr/bin/nohup /bin/bash -c \"stat /opt/azure/containers/provision.complete > /dev/null 2>&1 || /bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        }
    ],
    "outputs": {
        "agentStorageAccountPrefixes": {
            "type": "array",
            "value": "[variables('storageAccountPrefixes')]"
        },
        "agentStorageAccountSuffix": {
            "type": "string",
            "value": "[variables('storageAccountBaseName')]"
        },
        "agentpool1StorageAccountCount": {
            "type": "int",
            "value": "[variables('agentpool1StorageAccountsCount')]"
        },
        "agentpool1StorageAccountOffset": {
            "type": "int",
            "value": "[variables('agentpool1StorageAccountOffset')]"
        },
        "agentpool1SubnetName": {
            "type": "string",
            "value": "[variables('agentpool1SubnetName')]"
        },
        "masterFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
        },
        "primaryAvailabilitySetName": {
            "type": "string",
            "value": "[variables('primaryAvailabilitySetName')]"
        },
        "resourceGroup": {
            "type": "string",
            "value": "[variables('resourceGroup')]"
        },
        "routeTableName": {
            "type": "string",
            "value": "[variables('routeTableName')]"
        },
        "securityGroupName": {
            "type": "string",
            "value": "[variables('nsgName')]"
        },
        "subnetName": {
            "type": "string",
            "value": "[variables('subnetName')]"
        },
        "virtualNetworkName": {
            "type": "string",
            "value": "[variables('virtualNetworkName')]"
        }
    }
}