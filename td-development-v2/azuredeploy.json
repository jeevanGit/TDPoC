{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "agentpri2Count": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "The number of agents for the cluster.  This value can be from 1 to 100"
            },
            "type": "int"
        },
        "agentpri2Offset": {
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99
            ],
            "defaultValue": 0,
            "metadata": {
                "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
            },
            "type": "int"
        },
        "agentpri2VMSize": {
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A10",
                "Standard_A11",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_A9",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D11_v2_Promo",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS11_v2_Promo",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS12_v2_Promo",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS13_v2_Promo",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS14_v2_Promo",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS3_v2_Promo",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2",
                "Standard_DS5_v2_Promo",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
            "type": "string"
        },
        "agentpri2VnetSubnetID": {
            "metadata": {
                "description": "Sets the vnet subnet of agent pool 'agentpri2'."
            },
            "type": "string",
            "defaultValue": "/subscriptions/e39b9baa-50b5-4665-8297-2fa801ed1fa4/resourceGroups/td-poc-vnet-devlabs-rsg/providers/Microsoft.Network/virtualNetworks/td-poc-vnet-devlabs/subnets/Agent"
        },
        "agentpri2osImageName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
            },
            "type": "string"
        },
        "agentpri2osImageOffer": {
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Linux OS image type."
            },
            "type": "string"
        },
        "agentpri2osImagePublisher": {
            "defaultValue": "Canonical",
            "metadata": {
                "description": "OS image publisher."
            },
            "type": "string"
        },
        "agentpri2osImageResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
            },
            "type": "string"
        },
        "agentpri2osImageSKU": {
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "OS image SKU."
            },
            "type": "string"
        },
        "agentpri2osImageVersion": {
            "defaultValue": "16.04.201804050",
            "metadata": {
                "description": "OS image version."
            },
            "type": "string"
        },
        "agentpriCount": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "The number of agents for the cluster.  This value can be from 1 to 100"
            },
            "type": "int"
        },
        "agentpriOffset": {
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99
            ],
            "defaultValue": 0,
            "metadata": {
                "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
            },
            "type": "int"
        },
        "agentpriVMSize": {
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A10",
                "Standard_A11",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_A9",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D11_v2_Promo",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS11_v2_Promo",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS12_v2_Promo",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS13_v2_Promo",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS14_v2_Promo",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS3_v2_Promo",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2",
                "Standard_DS5_v2_Promo",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
            "type": "string"
        },
        "agentpriVnetSubnetID": {
            "metadata": {
                "description": "Sets the vnet subnet of agent pool 'agentpri'."
            },
            "type": "string",
            "defaultValue": "/subscriptions/e39b9baa-50b5-4665-8297-2fa801ed1fa4/resourceGroups/td-poc-vnet-devlabs-rsg/providers/Microsoft.Network/virtualNetworks/td-poc-vnet-devlabs/subnets/Agent"
        },
        "agentpriosImageName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
            },
            "type": "string"
        },
        "agentpriosImageOffer": {
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Linux OS image type."
            },
            "type": "string"
        },
        "agentpriosImagePublisher": {
            "defaultValue": "Canonical",
            "metadata": {
                "description": "OS image publisher."
            },
            "type": "string"
        },
        "agentpriosImageResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
            },
            "type": "string"
        },
        "agentpriosImageSKU": {
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "OS image SKU."
            },
            "type": "string"
        },
        "agentpriosImageVersion": {
            "defaultValue": "16.04.201804050",
            "metadata": {
                "description": "OS image version."
            },
            "type": "string"
        },
        "apiServerCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSU5CRENDQ3V5Z0F3SUJBZ0lRTlRSdlNQa2RxMG5URVNuZnJUQzNVakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBMU1ERXlNREl3TlRWYUZ3MHlNREEwTXpBeU1ESXdOVFZhTUJReApFakFRQmdOVkJBTVRDV0Z3YVhObGNuWmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBTWxzK25kb0p5Vk1EanR1Rzd1NlgzYjB4WDJSMFY1UCtZeGNUUjRIa0dYcmVRWTlhK0VXTjRRNHh3dWMKNG5TNURWZGI5S2FJMmQyMVpwU3ZvMTdTTDArcDlPTkpaYVY4TXBqZnNoWmNwQmdoVVc1OW5EdlBNMG1BSVVSNQpDUGEvTzdoTStTeWN4Y2lLSHlKMnJlNVNzTDg3TXRQSGxQdFdFRGNqbDFwY0JXSEJpbS9nSExQZTRXT3hvNjdOCm9pYWxSTWVXOXZsbk43cVgxeDYwa0szM1RxcnNhNGFDbTB2K2Z1bEQ2bjR6NUkxNWFjOStwbW5vWlFzRDFDVFUKNDRoNnhKZjR3RzNjRG9IR1loZ3ZNRW9kUFh2Nm8ycmc0b2ZGSmhNRCs2dmllRzRDdGd6VVQrR3FlSzJuVFRXKwpyVjh0TTNEU1R1NHJ3VEVmUzdEbHljRVlvMHVVQVRPNjE3bkwwN2xneWpkdDlFeWQzY1NyMnR6cXIzb0NBMjJEClJiOGMxTTc5UE9lTzR5MGFXOGFhOXV6bGxDd2NzTTIyWVE2cjZ4VnZkcE1yZU9MZmUxWGxXN2c3SjNuL1pFdVUKcmp4YlZkRzlIaTU2dmUwekdla1VHbnRiNlg3MWVqRDB4S0NVNStvVHpMR29nNHVRK282a3oxdmdNQTVEbjJrbAorVHZHZ00vVDJiTWRPd1BUSS90SHl6OHU3WWZHa29rdUNGR216ZTVoZmxNclRHYUQ5T3JSa0lBdU9tRlJKem02CmhOOTU2aUp4OWZFSDR1RjR1UzVnLzd6UGpqbG13d1hIWFBBL1VDSmtoNVByV3FuY3p4MEp3dEVIc0NncjJ5Qi8KenBGNXNRL2xxbW0rMmpEZndWdFBpZXJuNWRtRVJ2QlphUFdMSnlHQlpQaDhaWElGQWdNQkFBR2pnZ2hYTUlJSQpVekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvCkJBSXdBRENDQ0J3R0ExVWRFUVNDQ0JNd2dnZ1BnaTUwWkdSbGRtVnNiM0J0Wlc1MExtRjFjM1J5WVd4cFlXVmgKYzNRdVkyeHZkV1JoY0hBdVlYcDFjbVV1WTI5dGdqTjBaR1JsZG1Wc2IzQnRaVzUwTG1GMWMzUnlZV3hwWVhOdgpkWFJvWldGemRDNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNMSFJrWkdWMlpXeHZjRzFsYm5RdVluSmhlbWxzCmMyOTFkR2d1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2k1MFpHUmxkbVZzYjNCdFpXNTBMbU5oYm1Ga1lXTmwKYm5SeVlXd3VZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXQwWkdSbGRtVnNiM0J0Wlc1MExtTmhibUZrWVdWaApjM1F1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2kxMFpHUmxkbVZzYjNCdFpXNTBMbU5sYm5SeVlXeHBibVJwCllTNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNLblJrWkdWMlpXeHZjRzFsYm5RdVkyVnVkSEpoYkhWekxtTnMKYjNWa1lYQndMbUY2ZFhKbExtTnZiWUl1ZEdSa1pYWmxiRzl3YldWdWRDNWpaVzUwY21Gc2RYTmxkV0Z3TG1OcwpiM1ZrWVhCd0xtRjZkWEpsTG1OdmJZSXhkR1JrWlhabGJHOXdiV1Z1ZEM1amFHbHVZV1ZoYzNRdVkyeHZkV1JoCmNIQXVZMmhwYm1GamJHOTFaR0Z3YVM1amJvSXlkR1JrWlhabGJHOXdiV1Z1ZEM1amFHbHVZVzV2Y25Sb0xtTnMKYjNWa1lYQndMbU5vYVc1aFkyeHZkV1JoY0drdVkyNkNLWFJrWkdWMlpXeHZjRzFsYm5RdVpXRnpkR0Z6YVdFdQpZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaWQwWkdSbGRtVnNiM0J0Wlc1MExtVmhjM1IxY3k1amJHOTFaR0Z3CmNDNWhlblZ5WlM1amIyMkNLSFJrWkdWMlpXeHZjRzFsYm5RdVpXRnpkSFZ6TWk1amJHOTFaR0Z3Y0M1aGVuVnkKWlM1amIyMkNMSFJrWkdWMlpXeHZjRzFsYm5RdVpXRnpkSFZ6TW1WMVlYQXVZMnh2ZFdSaGNIQXVZWHAxY21VdQpZMjl0Z2lwMFpHUmxkbVZzYjNCdFpXNTBMbXBoY0dGdVpXRnpkQzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDCktuUmtaR1YyWld4dmNHMWxiblF1YW1Gd1lXNTNaWE4wTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJdGRHUmsKWlhabGJHOXdiV1Z1ZEM1cmIzSmxZV05sYm5SeVlXd3VZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXQwWkdSbApkbVZzYjNCdFpXNTBMbXR2Y21WaGMyOTFkR2d1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2k5MFpHUmxkbVZzCmIzQnRaVzUwTG01dmNuUm9ZMlZ1ZEhKaGJIVnpMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUlzZEdSa1pYWmwKYkc5d2JXVnVkQzV1YjNKMGFHVjFjbTl3WlM1amJHOTFaR0Z3Y0M1aGVuVnlaUzVqYjIyQ0wzUmtaR1YyWld4dgpjRzFsYm5RdWMyOTFkR2hqWlc1MGNtRnNkWE11WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2k1MFpHUmxkbVZzCmIzQnRaVzUwTG5OdmRYUm9aV0Z6ZEdGemFXRXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXQwWkdSbGRtVnMKYjNCdFpXNTBMbk52ZFhSb2FXNWthV0V1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2loMFpHUmxkbVZzYjNCdApaVzUwTG5WcmMyOTFkR2d1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2lkMFpHUmxkbVZzYjNCdFpXNTBMblZyCmQyVnpkQzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDTG5Sa1pHVjJaV3h2Y0cxbGJuUXVkMlZ6ZEdObGJuUnkKWVd4MWN5NWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNLM1JrWkdWMlpXeHZjRzFsYm5RdWQyVnpkR1YxY205dwpaUzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDS25Sa1pHVjJaV3h2Y0cxbGJuUXVkMlZ6ZEdsdVpHbGhMbU5zCmIzVmtZWEJ3TG1GNmRYSmxMbU52YllJbmRHUmtaWFpsYkc5d2JXVnVkQzUzWlhOMGRYTXVZMnh2ZFdSaGNIQXUKWVhwMWNtVXVZMjl0Z2loMFpHUmxkbVZzYjNCdFpXNTBMbmRsYzNSMWN6SXVZMnh2ZFdSaGNIQXVZWHAxY21VdQpZMjl0Z2pGMFpHUmxkbVZzYjNCdFpXNTBMbU5vYVc1aFpXRnpkQzVqYkc5MVpHRndjQzVqYUdsdVlXTnNiM1ZrCllYQnBMbU51Z2pKMFpHUmxkbVZzYjNCdFpXNTBMbU5vYVc1aGJtOXlkR2d1WTJ4dmRXUmhjSEF1WTJocGJtRmoKYkc5MVpHRndhUzVqYm9JM2RHUmtaWFpsYkc5d2JXVnVkQzVuWlhKdFlXNTVZMlZ1ZEhKaGJDNWpiRzkxWkdGdwpjQzV0YVdOeWIzTnZablJoZW5WeVpTNWtaWUk1ZEdSa1pYWmxiRzl3YldWdWRDNW5aWEp0WVc1NWJtOXlkR2hsCllYTjBMbU5zYjNWa1lYQndMbTFwWTNKdmMyOW1kR0Y2ZFhKbExtUmxnalowWkdSbGRtVnNiM0J0Wlc1MExuVnoKWjI5MmRtbHlaMmx1YVdFdVkyeHZkV1JoY0hBdWRYTm5iM1pqYkc5MVpHRndhUzV1WlhTQ01uUmtaR1YyWld4dgpjRzFsYm5RdWRYTm5iM1pwYjNkaExtTnNiM1ZrWVhCd0xuVnpaMjkyWTJ4dmRXUmhjR2t1Ym1WMGdqVjBaR1JsCmRtVnNiM0J0Wlc1MExuVnpaMjkyWVhKcGVtOXVZUzVqYkc5MVpHRndjQzUxYzJkdmRtTnNiM1ZrWVhCcExtNWwKZElJemRHUmtaWFpsYkc5d2JXVnVkQzUxYzJkdmRuUmxlR0Z6TG1Oc2IzVmtZWEJ3TG5WeloyOTJZMnh2ZFdSaApjR2t1Ym1WMGdpNTBaR1JsZG1Wc2IzQnRaVzUwTG1aeVlXNWpaV05sYm5SeVlXd3VZMnh2ZFdSaGNIQXVZWHAxCmNtVXVZMjl0Z2dwcmRXSmxjbTVsZEdWemdoSnJkV0psY201bGRHVnpMbVJsWm1GMWJIU0NGbXQxWW1WeWJtVjAKWlhNdVpHVm1ZWFZzZEM1emRtT0NKR3QxWW1WeWJtVjBaWE11WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1cwpiMk5oYklJV2EzVmlaWEp1WlhSbGN5NXJkV0psTFhONWMzUmxiWUlhYTNWaVpYSnVaWFJsY3k1cmRXSmxMWE41CmMzUmxiUzV6ZG1PQ0tHdDFZbVZ5Ym1WMFpYTXVhM1ZpWlMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWoKWVd5SEJCNEJBQWVIQkI0QkFCR0hCQW9BQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFEN29lSjdVTjM1cQpQa2d3Z0x3THhLWUxVSm5MNUlXdjc5aUY1TWlaVm9pWnBaTXN4UzVXQWVNNklNTm5JN0pRby9QdE92cHpMTytyClRjeTVIRW1ibi9ES1JrdUQ1dHJHR1gzajk1UkRDd3JXMzBDcFY1UE4xYVE2aGpVYk1KZUpvTWZnR1BVZHFhc1EKYXhCMWhVNmQ5NDIwOGNWbnRTbVEySjhJTk9nUkV6VWZZbk5zS3NDUnBOSUg4VnJrRlhzMFRrbC9VUnlnQ3FDZQprMnlSWFMvMzRzTnhUbytKRFB3aHR0eVJaZURqQjg4OGJ0bUhsUzhZell4d1hhcVFaK1JHTjZMZmVTek1UMW81ClpRa1JaSFdBWnZrSWNVQ2NFZkZNNjlGTGQ2SE5WQVVMb1pNN3RUK3NSVUtnSVRUNWZQeEdXU0lZZnlDTFl0ekMKSDlnNjB3b3hCNTFsZ1FGRmdSUEJ1Q2syZTRadzhOcDQzSUhFM3F6UzZ2S0VCYzI2eVJkZE5iWTFxSG02NUphcQo2R2RPd3VhSlplY0FzQVpJMzBzcTFoUmhMV1FHcFkzMTArdm1WeitqNm5SclhCc3hLMWpYYzlmK1QwUVNNd2QwCnp5aWYzaHNnendFNEh0UmxrRkhjRDNRbnVYWDZ1VERrQ2dGZTNDN2p3dFRmKzRhTE1wQXdKMjNpdTl0ck5sdXEKWThtenI3UEhIbFNUSTZuUVlLQ2plMEdZcTFldU5CNDgxWWU2VlN2MTU0VjJyelBKYW5INjFlc1ZqV0J2YW1PRgptRzd1eDlMSjVOdDlNZGRLQUtjeWIxeWlPU213WUE3c0lsQUFsR0NDbzN2WVFiTjNyWlNZZnlYdFRKMWxHSDByClpSMkI0MWdqSzdjTVlmQ3Y4QnBaV2VrbkhBbjB5U20wCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        "apiServerPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeVd6NmQyZ25KVXdPTzI0YnU3cGZkdlRGZlpIUlhrLzVqRnhOSGdlUVpldDVCajFyCjRSWTNoRGpIQzV6aWRMa05WMXYwcG9qWjNiVm1sSytqWHRJdlQ2bjA0MGxscFh3eW1OK3lGbHlrR0NGUmJuMmMKTzg4elNZQWhSSGtJOXI4N3VFejVMSnpGeUlvZkluYXQ3bEt3dnpzeTA4ZVUrMVlRTnlPWFdsd0ZZY0dLYitBYwpzOTdoWTdHanJzMmlKcVZFeDViMitXYzN1cGZYSHJTUXJmZE9xdXhyaG9LYlMvNSs2VVBxZmpQa2pYbHB6MzZtCmFlaGxDd1BVSk5UamlIckVsL2pBYmR3T2djWmlHQzh3U2gwOWUvcWphdURpaDhVbUV3UDdxK0o0YmdLMkROUlAKNGFwNHJhZE5OYjZ0WHkwemNOSk83aXZCTVI5THNPWEp3UmlqUzVRQk03clh1Y3ZUdVdES04yMzBUSjNkeEt2YQozT3F2ZWdJRGJZTkZ2eHpVenYwODU0N2pMUnBieHByMjdPV1VMQnl3emJaaERxdnJGVzkya3l0NDR0OTdWZVZiCnVEc25lZjlrUzVTdVBGdFYwYjBlTG5xOTdUTVo2UlFhZTF2cGZ2VjZNUFRFb0pUbjZoUE1zYWlEaTVENmpxVFAKVytBd0RrT2ZhU1g1TzhhQXo5UFpzeDA3QTlNaiswZkxQeTd0aDhhU2lTNElVYWJON21GK1V5dE1ab1AwNnRHUQpnQzQ2WVZFbk9icUUzM25xSW5IMThRZmk0WGk1TG1EL3ZNK09PV2JEQmNkYzhEOVFJbVNIayt0YXFkelBIUW5DCjBRZXdLQ3ZiSUgvT2tYbXhEK1dxYWI3YU1OL0JXMCtKNnVmbDJZUkc4RmxvOVlzbklZRmsrSHhsY2dVQ0F3RUEKQVFLQ0FnQXg3bmZ3WGJ0R2ZhSVJqV3dHajE3VzZEcUV0RDhJZUI3T2Nwc1RWS0N4QXp4UEZhN0diM0YzcjNONApKMzNqblhQM01lNWwwZ3JmOFBYcTZkYy96QzY2T3RGZi9uUGFILzJTOC9EN3BoOXZjK0x4MXVXQjFnMUtyUjZTCkVNYnVFOTNFQkNESXRGdzdLRElyb3V2ZTVsUzJNd0NZaXlNZFl1cEdJT2FHR2NXanhBeURTelVTU2EvcHZNRnMKdGNENmY0R2JVSXNNckUrZVM4R2g5UFRnaXl2UEp5aElnZHZwYkw4ZEtCN2JCaFlrRS9MczR1Sng0cEFadU9zLwo3aDR4V08yZkZxVHRGdDNwd2JuVGNPOHhrQ29McjhnTzJJeVBSNG4yc01nVWhlR0FzOTlaTXRCU2lxVzd0bnRuClZVczVDc1Z6dEU2b3IrUUdQMUhPR2toM081cE8wMTNobGVBRTI0cjBZYkc0U2ltR1lRZ28zUjhhWWRQZSsxYngKL2pwQjBkWDZOYm9BUVRBQUJtTk1LYjJMVWVTYmtwOUs5OTBqQ3c0QTdxYnJCQXBiQlB3NEZadFdCVk95bnYxRgprcGRtc2ZpMkNXV2YxakVCYlovaldtMXdUN1ArL0xJb0tZbUNCYk5ueHZnZmlXQmFjd3NraWtZektDU2RIRzkrCkFnN3BhN1lMNHlQUXVpcWpiaDJVU2lnZkV0SWxpL3lpc002cWJMaFp3cUpMN08yNkMrS1NrMUJweFBFWXBxYkkKZFptR0ZEODVlNVJFOGFBZkhHclRLRzR2ZlpUbkcyUXE4Ym5XNUt0Rk9ianIvVXBKTXgyL25DNC83dlVFaHhURApkMitFcGkwb21OT00yaXNGOFFGdUlteFNMb0hWcjVsNndUSFBzQXg2ZTV3WnRpVmhTUUtDQVFFQTVHZDZhajhiCjU5TUhsSEh4VVJiaUd0Z1hrME8yc2xLTXdubGp6RW9oSDdiRTA1THhaaTBtTzAvTjBMVkI1b1UzcEhiQ2tUeTQKMG5OaHVFVFFCcmNKWlBuc0oxaFB5Ym1tUG1BOU54aDRnRHh4Vm9NSjRkYVVsZ3h1cGdQVzkzTGZTV3BQT2h2VwpEdEZCQTdqbmFoTnNsQUhTNW5jaXBwSEI0TGxNSExpNW5ZL1JOd2lCcXY0QTlCVXpQMzZoTTZDeUY0UTkzcnROClB3dEhWTGVhck9qNUwybHRiREdXem1oc2gxV1lTVDJwQnY5ZUh0eU53SWFNc3NJYlNiNG10RENNSE5pNXhqcGIKbEdoMVZRak9LaFVFelFtTGVQRUdLN0ppS3lwM1NSek5sZ0Y2YU5uRzI5MStpZmxRT0RZbU42Z0VaNk9Bdk1JTQpUT3c3SThpS0UxVUlRd0tDQVFFQTRjTU9vWWk0cjRoT2c2c281bGlaOXgzWm80TFVaREp1WVNMRnQ2d2FXT1MrCmI0L1Y1bVlGZ285QnF6LzdIaElkYTV0ZXBJNm5lTExiVWZnWUlDcDIwR1dwb0hZQkI4c3RQenltSldpOW9DeXkKQml5Uk8rTnBwMFpBOE4xMkpDckJVZGpIZTBsMnZKWjJ1Z3Fza0hGaWFNTEpGWEVSRWFrT2tXZjdTa2tPclhEVAoyK0pmQkpNV0ZYZ1JiNkhJczZWelNseHhHd2JnUERtdHgxakpOWWUzcm1yTkVaNWQzWldzYnMrb3YzL3lFR0VVCmhNMk5xeTlRd3lsSkRwbU1GcklJYlVGbWVxVjBZMFNOd0FMTGxQME9sYktOcUszTXkxWU9iSFBiNnpzYnNqMjgKNmVNOFJ0eU1sRUZENm5FcHBxRUtRWDQ5L3ZpbDliWGRZZU5SK3NZOEZ3S0NBUUJqOGp3SkhoQ1NBekEvN3hSUQpEWmxuY2NQdk55Uk5KLzVjWTA0ZWFSblJqT0xZU21iRDlXSFRkbnB6cDcxc3FFTE8vd0RwR1E4dldEb2Nyay94CmdFcm1HczhSOEgwSm91bHlSaDdEYXp2ZnNaTk83Z3gyL0xVTWEraEhVVXJTQVR4Z0hkc0piSURnL3dSYUlxRngKTTRyQndZS09RdmV3dC91RTRORERpTG9BanB4WVhxcVBMcE13Tzg2dkxEUlNLVEdGUk9MbUFrUXRJRHhZZi9kNQpUb0VzRkJCRDFmZE4zemdPaUpBWkRKaFliWXE4S25zRkVsdWpKWGxYYlpQMktZQkdaemZ6M0RtUzJacnVXT29PClZDQkRzTGVOZHJyaWlDNlpBUDR0eWlMVVQxVkhhSFN5WlZ3bitDYjRVZ21yTlNTb1RVM2FTM2VpZVlUdmhhT1cKRGhHTkFvSUJBUURWS2cvT2hnR2IrOS9tZ3Q0RFlQVS9WM2YvNDdBWFMyYmRZSysvVlVrclZoQloxajNwWmJzZQpJNVdsMUt1UElSdVdWd1Z0NnlSRjJ0c3E4azRWVVFNT2ttOHZpenc5MTZISmE4S1UzK2pzTEVlTGZObEU2dHovCmpGNFZENFpWYitsSkZwNkQwa0hDbjI5TENua1ZpWG1aNFJGc3BXMndkeWZDTTZRWjZCRnJ3blRIMFY1V08ydEcKcWpBTWIzM0o0aGFSeCtjajFjSTBHMkh5TCtzTUdERmZCb2pLY2ZXL0cydk0xVlpJT3M2Y21JMS9OM2JrZzdDRwpGWjFkbzYyYVlFK0VtWlBoaWdmekV1K2t0UDcwbGx3SERLaWs5RFhDYUdjR0QvOCtoSGtLT3pEOHhncEwva0xlCldTRi9ZNG9vUXpZajBNZEkwQTRqaXF5Vm1NWDNPdVhSQW9JQkFRQ2FGRWlOQ1NMSmpUU1hEMkxRK0VJajZIZXEKQVZTUFJOa0QzNUNyaC8vMnVhSExxNkV0YmdSL1N2aGZPTjVLVDhpY2RScUViOUlVTVdxWGJNT012TEJPYk5USAp3Mmtab3ByUHhveFN0b0VUUnpvd3o1S3lwa2JXU29WaFFSYjh3aDFlSzFBdWgyOWJuMEMxcTg0QjQrYVV1RC8xCkZBM2FacS9EUldEaUpab0FJUmZFYit6SFVvSmFGTXNnVFoyYUMySEdkWkZVQTJBMDJ0VnJvWkpWUjJTNElMMjYKOUh6emdCYlloVFBqOUlTbDRySW5Ra0Y2ajdzMGd3c2s2dEVLbXdrcjhqWVBSRVBHc1pGWHpHSnpWUnNrQmZicQpCUDB1eE1wbEJxYU1oSXV0SGVsU1hsSjh1VS9NY0tjSW03S3JjWVlvT3FpczYvOStDZi82RlZmaHNYL0QKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "caCertificate": {
            "metadata": {
                "description": "The base 64 certificate authority certificate"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQUtlV1R6bU9RRUJOTUJpVDY3SjFHMnd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXhNakF5TURVeVdoY05NakF3TkRNd01qQXlNRFV5V2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTXROCm82MTRMNTBMTTRTS1kzNzAzSGdMTkV0MVQwRzZpV1RuYlJWNjFYTEdpSnVIWHpJbDVXaVZNaFVjKzBLUnVsb2QKc2U4b3ZDTGlLSFN1aFVPekdzQ2FFMVlMVi9ORktFTzY4akFQTEVSTExRcDkxL3VPa2ZSb29EejQ4Y3gvdEdmNApoekJLbGx5NWprQTdaV3BPYmsrNTM2aVM2bzBEeXV4TVU0SDZKR1Q2ekV3ajZZdFZiSmNJUzU4UUY2WTZZampqClhyZE9yS1BJeHF5UENMN0hmelkwUlJ4VWwzeXJUTnJFdUc4ejZpVTJLNitVUEtKcWYrWFZlcStSK1JRMitvU1IKL0VNa1BlZFVIM082TTBHTlhKNjllNUY0a3BuamhYVnVRdTNQcWpRZVYwQ2tmTU1pZS9takhjTmpLMDBXb3BEUQpjQ09semQ4OXFrUE1HdklZR0lwMnpVcnR3MEticXR6NnFob0NjbFBxTjM0K2VyV1puV0FPWVBJRy9wVjZXZlhkCnNFZ1UwZkpsYXMvR2ZBM1lVNzNVd0NwZVJrRUl2TGNJUU1nK3B5ekw5cVhBTWIzNjRtOE1qR25sR204TDR4T1QKVEZIeG5iVmlQdFYxMFcyaU14NkplTVN5aTVvNzhBOWVXRk00MlU0Vyszdld6ckhadGtSdnBra291VjBTRkQ0WQpzempqTFl4OXNNSUZJbnZwM25ackltMXBlaVJUaWFGM2tnME1TUnN2YWJmajZ1WFNBYWtXdkZlRXdqcC9weUNECkQ5K1diL0J0LzNSWWNqV0lyK2JqK2lNblZtamJhTHJRek9hK1NoSXFkSHp2YkQ3UytVZUZYU3B6NHBaVWRnRlQKU2VnUkxQQzIrd3F1WWFRdXk0UUlwdk5zbjVvSXJvTndYanJZaE91WEFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ1lzZTQzCmRoaGJaRk5lVE5MZVFZdVZ6WkdxNEpwNnZPL1Joa3lxa1RtL0NXczd6NUZ3YTFNSEdjYzdrcFc3emV1Y3NIdnEKYkFoV2dSR2syOVhVdFk3M3p0ZDZrQkpEN2R5RktMNmhWVEw4T0VndXVmM0JwSnFuSmg4dHlDaFBJb0FSY2Z6WgpYN2Q3ZFRaeDV6c0luY2VCTWVva0liVXBpMDc0Yi81dzRFU0EyTUI0RVB1UXVZSkl0d2R6UXlibCtYSTVsQVdnCmY3Tyt0U3czQmlvMWdtOEJBOVJ1dGFEM0pKdnNnanAxa0tENkg0UkVpNHJGTTBibkwwUVdmUmlGS2w1ZzJUVkoKRXJHdzZxYnVjZGg1TFVadHJSS3BhejZ3SW5VRkhEQjFMR3k4dDNQTVBTdTdDdmRtVnFwM1pmTnErVE9aZURvMQptOU9NMHBRSGhOMnZmeS9QakRNS2hoeEtSQ1piazQxNmRXWnh0cHpVc3dQU0U2R09sMDdmcVg5Y3orNkRFVVFPCmt3V1VKdW5qbzFIS0dyS0pXcG1VQTN2alVuTDlXVUJnYVZ6TjJiWjdZMWhMOUhSY0t5VHJuR09vKzhrenB2QjgKc1VoTTR1dHp1dlZxWkd1WjZLVVl0czlMK1BlTURJT0JPc2h3UHgrbno1eDZUejJ6bVZYWm5KRWkwTFhpbTB0VQpjUnd1Y3YyQjVmSUpyVVRnM0R2Um05QzhTbWhUVTdYd1VnbjQ0cERRVnFQTWVtaXBxa2dCL2MyWG1qM0YrN3luCk1qY3hFb28vNHRYZXJmVGd3NU4xSThTVHZrZDY0VHVaMWtNaVJwdXR2UDAzcXQ3ZitFQ2JObXo0UDVYcXE0Q2UKRGloVGZzeTlVSHoyZUhJSURiKzJLU1crZ2c5NjN6a0Rpd1dtQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        },
        "caPrivateKey": {
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBeTAyanJYZ3ZuUXN6aElwamZ2VGNlQXMwUzNWUFFicUpaT2R0RlhyVmNzYUltNGRmCk1pWGxhSlV5RlJ6N1FwRzZXaDJ4N3lpOEl1SW9kSzZGUTdNYXdKb1RWZ3RYODBVb1E3cnlNQThzUkVzdENuM1gKKzQ2UjlHaWdQUGp4ekgrMFovaUhNRXFXWExtT1FEdGxhazV1VDduZnFKTHFqUVBLN0V4VGdmb2taUHJNVENQcAppMVZzbHdoTG54QVhwanBpT09OZXQwNnNvOGpHckk4SXZzZC9OalJGSEZTWGZLdE0yc1M0YnpQcUpUWXJyNVE4Cm9tcC81ZFY2cjVINUZEYjZoSkg4UXlROTUxUWZjN296UVkxY25yMTdrWGlTbWVPRmRXNUM3YytxTkI1WFFLUjgKd3lKNythTWR3Mk1yVFJhaWtOQndJNlhOM3oycVE4d2E4aGdZaW5iTlN1M0RRcHVxM1BxcUdnSnlVK28zZmo1Ngp0Wm1kWUE1ZzhnYitsWHBaOWQyd1NCVFI4bVZxejhaOERkaFR2ZFRBS2w1R1FRaTh0d2hBeUQ2bkxNdjJwY0F4CnZmcmlid3lNYWVVYWJ3dmpFNU5NVWZHZHRXSSsxWFhSYmFJekhvbDR4TEtMbWp2d0QxNVlVempaVGhiN2U5Yk8Kc2RtMlJHK21TU2k1WFJJVVBoaXpPT010akgyd3dnVWllK25lZG1zaWJXbDZKRk9Kb1hlU0RReEpHeTlwdCtQcQo1ZElCcVJhOFY0VENPbituSUlNUDM1WnY4RzMvZEZoeU5ZaXY1dVA2SXlkV2FOdG91dERNNXI1S0VpcDBmTzlzClB0TDVSNFZkS25QaWxsUjJBVk5KNkJFczhMYjdDcTVocEM3TGhBaW04MnlmbWdpdWczQmVPdGlFNjVjQ0F3RUEKQVFLQ0FnRUFpUWJQWjBBMmQxYnhaa2dRUDZXeVk0Ykp2SUpZNVNoaEtvMkJUSlQ2QU40bmZReUU4VHZ4bjhmUApkY09PNXBOcVV3cm92eFZwbU9sdDh4Y2Q0ejk0ckpBc3NEWDlGWTVyVVJ0VDJXaWdvWGM1NkhSaGVyL2hTQ2FzCnVldmdyY0QxUzQ2TEw5VlYrekZsMjQwdEViWERUQ0V2eW1NYmkrZ2VnWjRBT3Y3cVFOVjVsV2d2SlNaeWhtbWsKN3BUZUc4QUdLK20wRVVFSncycXozZUthTmx3b05kU05NRWNqdzNlQjJZSDEvWjIwRjFpbm9UUDhta3ZGNEpjKwpsYytCWGtxZ0YzSjk0Sk13MWhZeERNTlhnTHRTemZ0UXFmL21iNnFXYlV2ZitJR2JhbjE0dWEwa0dqSEg5YjRuCmRXWUY3WE53SnNNV2tqQlN6a0MxM2ZSWHhRelFuRzlrUWVMRVlucDQ2bVc3cndtTGdSZDJXdDBkV2tDamlqUGMKU0Z2djFaNEllMXp5ZHU3dzNIZVdBdzJkMVk1L3ZobythRHZmSVppdzExOHNEV3prQTRhUUd5UmMyeCtIZXZaOAo3c3FyNFFUY1ptNUJUalhIM3NuM2dhdWxGYnNrbXNVcW4wemZPcTVQbGg1TEQ3UFU3Y0xIUFJHenNZdUlYVnM5Cm1MZG5KeHl3bFZGSDREenFXMTIrb29NTHFKdHNZS0N5d0RReER3dlhCWUVlWnlnYTNlN1JuVFFadEl4d04zUGkKUUFiT2V5Y3RSeEFjWXJZbUFLU2xaVnppSEMzTVkzQjNxbzg4dVpGZXRUUmxVSG1EZVcrUUorNUtLb2JGRjk0QQpWOERHNlVHY1F5NUJXNm1iMnJtcXl0aFhzbEpPSjROT3pTbXVoR3IxWG1IQnFwYWxIY0VDZ2dFQkFPSnZxeFUyCnlHTmc1K3ZpU3hGY09YMlErUUVYWGRCM0QwZWxSRzZzek1WOGZJUnQ4QzUzbkQ0UkhhZHR6WEJDUHgxMENNRWQKa3hpUnFOQWdyNzdvenl0R0FCNXM4Zzc0MGFKUWU4dDR3NjJIL0FkUVp6emFaTmtaUUVuNysyTTE2S2dMak8xQwpjYTFHbTd4dUJWeWhmMm9SVGVTVHFQTUc4cVBxb0VtOUQwaFJ4TEpGd3NVY0hNV3FVK0RONDhZMUs2REltc1hBCjVrVHJXMWhPV1RVUzdjY09TMHdFSmhlUDZNQ0Ivb1RyeE0wUy9BWFBETjZLNGhPUXVoV1pPVytaVXlSRUhuUG0KaUxqVFJnNzdqbHJpRm1BSzA2Z3o0QnhzUmx3TTlnRVZqRW5IV0RCbzJYUGpMOCtkT1VXR0J2L0ZGQlFQYW01dwowdXA0cDExS244eExiMjhDZ2dFQkFPWFl5SlVmUEhJNWVFRExvUUxJWWF0RXYzL2Znb3VSVHNOUG1oTUxYdlpMCnlpRkpkZ0ZXaWNFbU4xbmRFRjhMQUNGVVVzc0tPNXJqNk1leUMvbW1aSjBmUXhyeERkOVZNRWtQcFJRckVsRG0KNkVsS2FLTDRZQWl1YzdPQXJ6eWlXVVQyYUNlV0lDZ0xkcERTdlZPQ2E5b1JWYjZUa2xSQmJtRzBROHFRR1RCWApuY01VWFI5ZjNCNG5aTW92a3hGWGUzR0ZTTFpPN3dZckFUTnU5VzUya01HaVVLQTA5aXV2T3h2U2cva04xSmh6Ck1CS0F1RWFyVVFKM3djZzNvWktKTkpyRGovWlNVRTBaSTRKT3I1VS9mWkhXMUNhakhteDJocHBUS1hvUWpwSWcKWXpSVkJxcy9IR3I4VlpObnpjN2kzWTFOWDNLZzJFT2pub0lHbnlZd3Nsa0NnZ0VCQUo5QlpMVTE0M2dwdHRQcgpRMXJCWDFuVjladHo0TEoybWxPTWcvWEhLUG9ZbE1iYlA1cWUyMCszNEFCYXRLdW9uQlZOLzc0NjI3TGk5elR5CldFalFHcXpYdmN1b1doSjNvNUVpUS84V1A2R3p5MmtsZm9hSkgzYWxVTmI0RjVWdVcrU2N3eEEzdEJYblhDOEoKdmxHbzhDRWNiSWsvNVFxUUwyVmo1am9XYzBJczZFZHQwdytvdHYrNnpPV0dTUldsWGJybWZCeHJrRWlXczVjRworNnpkVkVpMDMvWmwwSml2eVVaajV5dDdXdDNVNVZYOGlwT1dZR3pjVkZST2dOdmhuVjBiWDhPcU55eXV3MDVVClZJbk5DMm1mRTcvd1JFWVpUTjcrNnFKV2ttVnRnN1FBZWpnTWFCci8vRURPZyt1dG8zSjhhU0dsem1IRVhBbTgKSzJtWEFKY0NnZ0VCQUlSQ3lxbUUzL09hdm1nS3hRd2s0bzc3Y0hiVTF2b1pFNG13TktqZzBqUklTSGYvSGJpSApZNTJSc0NnMTNVWFR2cTl2Sm5WUDNoeXpLVEJBZEVPa1RDRmQ2KytFNXNhczdxd2NKSklHZHZPMjY5UEF6WlY1Cjkwa0htZXloRURXRDlucUlrRWEzVEttK2J1dkhXTXJGTWVxNkx1MExYaGk5emhiSzlIZUxrL01OZCtyWnZQeGcKM1BrOUVmS0dqY3BjM052bUpvRkJ5cWx4OWE3ekdxZ0Y4aVo2a0lxZjcwZ1QvWjkwOUJ4TXFSbFFyMGoyYVJQQgpZVXhhUFZoSkt1QjNzNTJiQ3l4akVYSk1GUExXOUpLZGhsUjFtbjdoUHBDTFk4bEtNWVBjSXk1VEZNTDRhbTRBClV3bjlTZ0VZcW9WeVpxcjQ2d083S3JkQlgrVFNpcUlmUTRFQ2dnRUFBT2gzb1NtZlRSQVFZSjBwMkJXbnRNd2UKVmtkRnhXN2ZJUW4vbk9DQ0o1VWZCSEdNZlBHeVJuT3htdlZoMHRWbWpZK0lLcVliVkRDdXQ0NmRKMTRVY3pqeQp3eVVjdktLSU9yU2tWWXB6NFpFaUNPM2ZMRktWSVR1a084Sk9SREdXZjYySGJLRUx1K1E2UGRpMUFHMk9aSTNkCk93MEMvam51cGU1YXNZb0RoRDlMenpqZVdETkFLTkVKb0ZlM3hnZFRYVndoRzMxWVZoTmM3T2hFOHgxWGx0THEKWHl3YjdVS3NSeU0xaVNETlNaR2h3M2xPQjg4YU9xY3lvY0NoYXJJY1dpTTMxUDR6SVBKR2pPZXd0bDY5UW15TgpMWFVwYnRITk9tdXRFWDYzOENzVmxjYWJsK2hMUWcwUmpQRHFUL3BpTlVpdnpQYWpTTHdBWWphQ28wdG9lZz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
            "metadata": {
                "description": "The base 64 CA private key used on the master."
            },
            "type": "securestring"
        },
        "clientCertificate": {
            "metadata": {
                "description": "The base 64 client certificate used to communicate with the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5akNDQXQ2Z0F3SUJBZ0lRVUM2VEFJQW8zZ2NTTkM4TTB4QUVoREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBMU1ERXlNREl3TlRWYUZ3MHlNREEwTXpBeU1ESXdOVFZhTUNveApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1ROHdEUVlEVlFRREV3WmpiR2xsYm5Rd2dnSWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFDNGFTS2V1a3MwbkFkbEpHLzFUbDlXd2hMUVBUOW0KcEc2ZGV1a0Y4N2hEdVZTNVovUG5LTU0yVDBxSVQ5dnpQdDlvTjNiSWlOWW1WS0pjY2RpRktXekdsNXFyOWRSbwplcWYvRkl5NGNJZzBLbjJob2c0S1d3ODU4cE1BRm5zYmlqdHUwWUk1YUY5YjBUY1B0MzhLZjQySWc1dG1YUmpPCmZNcmUzcVNRSXJXb2dHcDVTT1ZSVVhqWVpOeEZPMDdmRTZBWFZtUURYKzV2UGYvWEhCeGd5VHNhc1ovMmZUN2oKaUtEZ25YTHJRMG5RMHorS2ExclFDUklaN2ZUM2dBOTlZRGtwNkVja1F0TzhhUVdUQ0dOYWUrOHJmZnd6ZWdxaQpydHV5K3hhNFN2ekZVdFVLVnRhK3ZaYnJsSE1IaHp1VnIxMG81OGtSaTVybVRzMmhmbXNWTUZNLzVxM2JQZWFOCjhPZTNoclhYZ25wK2JGa20vdFNqYjlmTngyTGE5Sk9kNm5zaTVOSDZ5QldqT3pwK3RYeS85UDVFZ1hSaE5SNXAKV1hSTjAzUCtWMTNPWThLTWVyM2hBNlVuZEV1WmVFdTFwRGtuUGRsSU1vSnFNaGUxMTM5bkZxczRLS29ONkdHbgpHSUUyaWE5RWtkZ3k5d3czN1VURFYzSmFJOC9PaTZtaStkOElVcndKQnR0ZU5uWkYxN0w2UEsxeEY3QkxzSktsCnl5K2x3WklsQ01VS1RPR2l2dWNWYzgveDZYRzhXRVQrQkl2bDlweXMrWXZWWERKdlV0WTVTc1g3UjlDQ0ZSQmMKSEI1N3Z3ajQ0K05pNnVoSmpNNVBkMzN5U25YSFhoSE1DelVHVDdSTEVBQWs1elBlL0tXdnlQUnV6WThrZUxDawpjUGUrVjdGTXdVSnBqd0lEQVFBQm96VXdNekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBa0kybjVabEcKY0ZFcjNnOXIwd0FiZnZ6dlhpcTVGSUFnVm1qeUpRdVI2dm5IS09JLzBRaUlZUGZ5dzZqUTlhTVpwY0ZQTlZxRwpQdGpWSDFXcVp3Q1JYemVkU2U5VTU3elNmNmo1SnpDcHJlNk1HK2t2YjVFRzY3Vko0Zko2Tk91VXpSS3MwNitrCjZXdTlhcFoyNmRDajZLQTVHdFg1cytHQjVZVkJjeHVKL2huaFlUeFlFTVlWQ1JSK1RVbnAyZUVpaUU0NUZtQW0KVE5jQXlWVTNFZnBJNGE0ZmpSRVJjWkV0YlV3bkJxTzdhQW8wVjJpYWJoZlVxb0d6MGhNaGQ0WkczcGNwODhYUgpZZmRGVGVuRCttOERPNDM3NjZEZmYyT2VndTFyL2Z3Y0xTT0x2TFlBaG4xYXFlMmpvSGszRkx1NkFzVWd5S1NqClB2Um1GTGNHdWpJVmRuVzg4NTZtZFBROWhWczlpbHF3RXppNDBFSGNySnFyQWE0NGFXSnN6enl6a1YzMFFHbzcKcitXWkdubG4razJZcmxGM3pPZ2w5OHFuQno5VnBIeHpoOFBUdEdpTWtGRkRNb3c0T1prWEpNZDdHS25OZ0I5RwpCMzdYRDNQWTBScG5VQ2FoTDNGWFZ6VFJUZkF5bitBTnNaT293dzU3Skx3ZGdINnJDOWZPNXFTQXdyWCsvbVdPClc3UkpJSjV5QkozUnZ3VHhRRTJYbXdxbmI1bUJha0dFU29TQkxxTE5yZEhZNlc4ZjhNbW9Ba0JCQ1JQeGZSZzkKalN4enk0dVdSNmNxWlFVdlJnVjBNVXpJdjliUUpNR1Bwb2pDOVRIdmZEajhmbkV3ZSszYUlpTFFNeEZVN2drcQpub05WdGRuNi9KQkgrTHpvcWR2Q1F3bk5tZ0F4dDQ1YmZ1WT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "clientPrivateKey": {
            "metadata": {
                "description": "The base 64 client private key used to communicate with the master"
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdUdraW5ycExOSndIWlNSdjlVNWZWc0lTMEQwL1pxUnVuWHJwQmZPNFE3bFV1V2Z6CjV5akROazlLaUUvYjh6N2ZhRGQyeUlqV0psU2lYSEhZaFNsc3hwZWFxL1hVYUhxbi94U011SENJTkNwOW9hSU8KQ2xzUE9mS1RBQlo3RzRvN2J0R0NPV2hmVzlFM0Q3ZC9DbitOaUlPYlpsMFl6bnpLM3Q2a2tDSzFxSUJxZVVqbApVVkY0MkdUY1JUdE8zeE9nRjFaa0ExL3ViejMvMXh3Y1lNazdHckdmOW4wKzQ0aWc0SjF5NjBOSjBOTS9pbXRhCjBBa1NHZTMwOTRBUGZXQTVLZWhISkVMVHZHa0Zrd2hqV252dkszMzhNM29Lb3E3YnN2c1d1RXI4eFZMVkNsYlcKdnIyVzY1UnpCNGM3bGE5ZEtPZkpFWXVhNWs3Tm9YNXJGVEJUUCthdDJ6M21qZkRudDRhMTE0SjZmbXhaSnY3VQpvMi9YemNkaTJ2U1RuZXA3SXVUUitzZ1ZvenM2ZnJWOHYvVCtSSUYwWVRVZWFWbDBUZE56L2xkZHptUENqSHE5CjRRT2xKM1JMbVhoTHRhUTVKejNaU0RLQ2FqSVh0ZGQvWnhhck9DaXFEZWhocHhpQk5vbXZSSkhZTXZjTU4rMUUKdzFkeVdpUFB6b3Vwb3ZuZkNGSzhDUWJiWGpaMlJkZXkranl0Y1Jld1M3Q1NwY3N2cGNHU0pRakZDa3pob3I3bgpGWFBQOGVseHZGaEUvZ1NMNWZhY3JQbUwxVnd5YjFMV09VckYrMGZRZ2hVUVhCd2VlNzhJK09Qall1cm9TWXpPClQzZDk4a3AxeDE0UnpBczFCayswU3hBQUpPY3ozdnlscjhqMGJzMlBKSGl3cEhEM3ZsZXhUTUZDYVk4Q0F3RUEKQVFLQ0FnRUFyY3k0aWl3OWtObTB4b2d1MUYwRzBiZWJENU9KMjIwQnEzNFpmRGlVNDQ4WjRKdXViYUFuUzFvegpmb0QxWlMxT1ZPUmhHT0tPSWhZRjUyYU1rQVBZdHRwUE5kNDhVRE81ZlZpYXY0R2ZmTHJIS0x5WXl2M0RQZlAyCncxQnN1aW52bGFQelBiTzJtOHgwUG1YTVg5S1RTNlB0byszOTRTNFA3VGljbEJPQ2JjcUpqc0U3RHdiZ0ErSWIKRDB5MEt0NU9OWENBVmdYbHJBWWN4MW1CRFY3YVMzQTR1SkNWNHMvei8zMmt2MEh0b2RoV3ZGZ3RnSC9zQlhBVgpQZVg5czBZcTJlcEdrbEJCU2dNWTg5Z2wrek51MStpbTlzVUFuUTU3bFJXNzlma0dmZHB4V29zNVhROUYyOFZQCkhEdEIxdk10czgydjNNOWNMODc1VWtqWkYyRXlNeCt4dGZKaHMxUUdJVjRSMnRiWWl3aHZUVk1QWU5oV0FJY28KaUhxWEFHL0NMbklKeVhxWjkzT0tySXAvK013bno1cHhCb3FCLzhWSVB1Z1hESmpadmJITjQ1d0t2SHJjRmROagpick1FQ2o4SlhHYUVkNzZNOURaTnRUWnJpaG1sVUlrVC8vOE1JWWsxRVdqMTFUamRIYzlNekhydGNTQ2orNVNJCnN3U2tncXR0b3I2QlhWaVdpNDN5M1BndTlXR1ZValZ6akgvdG5IT29UMDhHTTl6ZHg4RW9iNnV5V0J4UU81d2UKdUJFS2xzR3ZtT0VrNEo3akI2czRVUnF3K0ZydTFMUjhydExMdnpsdEJsTlFnTy90ZSs5ZlZmOExyU2ZENHVybgpDZ2xvQlJaU2pZeWIzUGFJQ295S1YyaE5CUVAvL3A1d1hPSlZGNzZXNTVFT29MZmFxekVDZ2dFQkFOTFJPSDBxCjNQK0diOUhxbXFOR01ZZFA3Qk5ENXdmNjlVMEhrRFkwSStSSVNoaVY1NGtoL3JaNWpTRm93VkozUzMyTFdzUnEKY2cvZXBsTlRmTkVlSTg0N0gwZ3JYN3VBclpHcjlmS2JRL1l3WklLMHdsNE9DMk1KUzErYXJoYnJqeVFaYjM1WQpJV0RDZHo1am1PWHdMaGtVNk1uUEpweDNEUVBmWHhtcHk3cGZFSjdldi9qWVRWelBvUVdqYTdqbFY5TzdsUU5wCjRheDJ1cjVUVG15eVlIcCtSVjF5M3ZjOGZLZVh5QzFQK0k5YThUYXhFNEZiOUdrQmJ3d3BSZjZZUFM1eXhkZ0sKTlNtekN0bkJ3aUw0OHVtWDBla2lqRzYrOGNNQ2dENDFuMVB1OUV0UmtBZEZ1Nk5UcWthdUs3VmJyeUlMODF6UApBVmF1Nk96RFNIYXBMc01DZ2dFQkFOL3ZGTDlrU2hzNkZSRFZjazFZOHJYMW5sbDBVZ20zam5sZnd1MGdoZWh5CkVhTVBmUi9KTys4U2h2QjZOSXhiNXZvQ21oM3duQlVydys1N3VCZjNQWExLUWZvblRoSm1lUnUxQm1FUVZweFMKVGwyYUgya25naUgvK0RVWVFXRDM5Zk1kRmU4YkNRcFdjclZ0WWZPUS9JQmFGZ0JMMjhtQ0hrdk1COFhzTnVoTApiZEVrVllGcXNMM09KOFY0TkFqRjV5TDAvdUQ1dXhJeHFCeXlIM2YzU2hOeE1qNEtzdERjVnB3cnVCcXFjMzl0ClYzVEpZY3lYTkFJYW9IU09qSXNPaU9CQlRDS25Pdzl5cmJyUkVyRndGRGpPWnRvUktBYVB5cGhtOXRrNTdOaFYKU0NpSnQ1bkZZOTNKN0tIYTZZYVM5YzVRdk1QWEhod1NnMDIxZ0R0VkJVVUNnZ0VBYmxHcjVOd2tUOWNTOXQ5MAowcEl0NHVndzJwZ0M4d3NoaUpDM3A1VzdYbjl4dnRIYkdzamVXTERjNkttLzJKNnlzMXpVUDhxUUs3dlFmL1JGCmNjejY0YlhRbGR5VXVUTUtJUnZDbFpVb2lGRWtsNzF0cFBobWZ3bmpGb0dFTGx4UVNJekM2blBGNjdOMzRQOFAKaU93WncyaE10U2FneHVvSnRvZ1NaUVNVcHMrT2pBUjJvd3JWMlFhUjliaGg2NXlnVEIxeVNob0RUVlBJUDBhcQoySGl6d2dZSDJISC9PWk8raTVrQzJLdHJuK0R3THpXVXhuSFBRWS9OZzZpcGh5UTFoL1Bwa2pjdFFNZi9tcG9wCk5GSGdFOXN0cm5rMDBkTThBbGR4c3B3dTV5WTVVcHk0NlFWVnZvOU9vTFFPRFZhUUhCbnkzUk02V1Jrb3JKVTQKZTFmbkx3S0NBUUErTlU2UU5LNFpqak1YOEJQR3hQVDM4M20vNC81K1VJMjF6aEo2aVZScDFIWnQwL213Z05pegplM1FkRGZYWElCaTBUMUM5RElCdnFTN082M09peEw0L1MweTB6NEp5dmlEYXY1azhFYXZkMVVlTDNTcm9yVjhMClR1Nkc0V3dZSWdvak5XdElkencxc1BwQXlGZ3pyNDFWb3JFRitBemdsOU1PdjJsUlpHT0VlSi9UUDhLNUp3aGUKVWd6ZVlKd2o2OFpnQWF0a21EdU52Rm0xVHc1SzUxbWV1UTE2Q3NMT0hzZTRyclNBUStXOStvUVhIM0tad1U5agpYajVBNHZETUdJZVJ0TklQdG1GRDAxbkwwaFRkVWdOc0hIcWFEYllPekpjOWF5MGIvMmw2VjRhcUxFZmk0ZUR5ClZndjBrcm5ZOXE1dVdDTjRUQ1JETENscHh3Z09jM241QW9JQkFCdjhEMThySzB6cXdwbzVmcVI4TXhyS1hPNy8KcTIwRVQ3UG80TVFoQmVEbEtjc005ZnBPOUVzU0FRZHh2clBEMWQwbUtPejBBWnBZRHVBRWFCZ1UyWVhKYjdkLwpwTm5hOWIwbGxOSzFhNnBDUWVjRGp0TDZKb2swSUJEM1lQdVNFR3pzN2JITG5lMytzc3pzTEtFVWJZaXNBV0dMCjM0Uisya05OQW9Uc09WQzlVYWVPOUt6clluUEViV1ExVHpib1pIWmt3aDZWWDArd1J5enpWajNQZmFLSTZ2K0kKMkZGWmpQU2N2SnBoVjNnZUZ3d2QxK21KQ011cVlWbVorRzFiMmVUdFlOeENQZ09DRloyWHFFQ2VuWDA3M1VPdwpYQ1I3QVREQ1FBMk54d0haamlMV1FhQmljYlZhaWd5TjFUdnU4emZDYkx5NnJFeXdWUFRZeUdNN2dKND0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "cloudProviderBackoff": {
            "defaultValue": "false",
            "metadata": {
                "description": "Enable cloudprovider backoff?"
            },
            "type": "string"
        },
        "cloudProviderBackoffDuration": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, how long until timeout"
            },
            "type": "string"
        },
        "cloudProviderBackoffExponent": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, retry exponent"
            },
            "type": "string"
        },
        "cloudProviderBackoffJitter": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, jitter factor between retries"
            },
            "type": "string"
        },
        "cloudProviderBackoffRetries": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, how many times to retry"
            },
            "type": "string"
        },
        "cloudProviderRatelimit": {
            "defaultValue": "false",
            "metadata": {
                "description": "Enable cloudprovider rate limiting?"
            },
            "type": "string"
        },
        "cloudProviderRatelimitBucket": {
            "defaultValue": "0",
            "metadata": {
                "description": "If rate limiting enabled, bucket size"
            },
            "type": "string"
        },
        "cloudProviderRatelimitQPS": {
            "defaultValue": "0",
            "metadata": {
                "description": "If rate limiting enabled, target maximum QPS"
            },
            "type": "string"
        },
        "cniPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.0.tgz",
            "type": "string"
        },
        "containerRuntime": {
            "allowedValues": [
                "docker",
                "clear-containers"
            ],
            "defaultValue": "docker",
            "metadata": {
                "description": "The container runtime to use (docker|clear-containers)"
            },
            "type": "string"
        },
        "dockerBridgeCidr": {
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "Docker bridge network IP address and subnet"
            },
            "type": "string"
        },
        "dockerEngineDownloadRepo": {
            "defaultValue": "https://aptdocker.azureedge.net/repo",
            "metadata": {
                "description": "The docker engine download url for kubernetes."
            },
            "type": "string"
        },
        "dockerEngineVersion": {
            "allowedValues": [
                "17.05.*",
                "17.04.*",
                "17.03.*",
                "1.13.*",
                "1.12.*",
                "1.11.*"
            ],
            "defaultValue": "17.05.*",
            "metadata": {
                "description": "The docker engine version to install."
            },
            "type": "string"
        },
        "etcdClientCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQUp4WlJ0TCt4WUdrZ3lvWm5panl6bE13RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXhNakF5TURVMVdoY05NakF3TkRNd01qQXlNRFUxV2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa1kyeHBaVzUwTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBcUlCdE5lSFNEbldhMU1MN1NGcExZZDhFVTdEQ3JPQTJ1V0NnMTR6WEQyRk9BK3I5QUh5YkJ4WXoKZEh1UTlTRnRHWGsrU1ZjS3gyY1ltYzI2cEh1cjJhdC90U0VtR0JxWDNCdUhrYlNlRk5INWNOSTVTWmR6NVFpZApFZGcwSlU3T1p1bWF0YnEweDNUWTZZNGE1cjJjM01TK3VicFdJWVFGR0E1SWFCdGVYbmU4aFJlSy9lRDlVQ1lsCmxpWVdHeU9DWm84OFNhUytONFFjTUZhUFJsZ2JMTDRmQUdWT2ZFV2xJdHY0ZjlUOXBVUXRaUitzdXFuOVRMRjcKRkd1RWo0NFQ3c1Z3dExqNDVaN2V5UitOVVR3djJtcklVVWVWdTFETVcwWVJwR2VKY0VGTGJTdjY2R2ZGaUhlVQpjbDVFS1U1WEoyYVg1Y1FPc1NDSTFZbFpqOVNib09Mc3lRSXRUWVh1YVFtYkFCZTZNZGhFR0F0NFZlSzVQZlpRCnUxQThRZzVmQWZTZm4wZ2tKVVBxNFE2a2xEK1RxNURFTGxmT1pFOHRncSthT2JRNE1zSVFlZjF2SGlzNE9vTzkKaExHY3Yza1RodFJhWDYwbyt1VEs2OWVWbGtDOFpMUzVqZXRVYUxsUGU3RU1sOHJxMDhZK1IvYnNKc1hBWDJ6eApsZVlZN284WGZsRG85c2lQTWppVElLdkNnNy9RRWhhRXp6RVYvcVAwQXdaRGkxN0tUdHFneGgxWW9ONklqeW51Ck8ySzdzZVoyV2xOcE45RlRFTjlSYVNHczZkWk5LRW02SE9GTm55emxLS2VWVHdIMmIxcXVEWm13ajZlaDZRQzgKU3hmazFLZVUzMU9Qem1OZm04cG5xMmlOV2ZBV0tEVWRnaUt1dFhPaEdDMVdWUk5HVE5rQ0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkI0QkFBZUhCQjRCQUJHSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUhJNFhYYlpmcmRMdHVEa1VENEE1dWxlblY5amtpaDQ4OUM0Rlo0aQpHaEc5RmV3Uzh2OWdndk9Fb0hyUGxwNW11T1FyK2xQK2N3ZUdvZjkvZk1Qd1Z1VHpmd0pSdmZkdFR1c0crWjVDCnVxUWcxemhvNG82THBNMUhRSUlZdk1CWm9JZWdOQWNnbExQdmtqL2VyM0RZTHFyZWdoZDdiNDJiTlRjSHJvazQKenRiVW45RU03Vzl4OFhjWlBobGZ4R1VWWGQ3dWRieHhxMU9rWFhRM3hYbi91d2E3c21sOThFSm84Rm1xTkl3Mwo1dFF5c1ZzeU1LOTMxSmdZalZYdWhtcVpuWGljajRYYnZIUzdkaFVBWThIdmdBUE5CNFIwdW85V1h1eE1VM0FTCndMYVVQdWdoUTJUeG9FTzF0b1MwZTNvNGt0UGtoa1F4eFNCWEVRRG9YRDBlNCtFWUl3U3QvdWZvVE5TWVczTTYKd1ZOcFBwdFJqQlBvTGMreG54MTNZNnRDZDJ1YVJINlJDTDJZR1FrNS8zTjNlWjFEeVQzWm1nMGJ0cTl2NnJCMwplQzd0VWFOMS9qc1BGZkJod042K1NKZ3RWeHNRaEtYWlBhUDlBZjRwZFRxR253NXcyQ09zK3oxd2hEbWRLcFE2Cm12SnppakZJWjRDeFA2QnJRODIvejFZUkFkalpiVjN2RGY2VzJuUWtaWG1HWEhtSG83aTRZOWtLSGZOcVI1YXkKY204eDQ5U29udjZodkpnM3BhbEh0YTE4elQrVUtCdS9ZRTJXQVRQUjB6YmxKRlhiMEFBdVVnUEVxTDRoZTI1YwptTlphcDE5MTA3QnJNSjdIaU5HcXJHb2JYYm5NTTR3bkZlN3NLZ3pxQlFicFNXdFpOZHh6RExBZURVajVqRDJCCmhHYmMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdClientPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBcUlCdE5lSFNEbldhMU1MN1NGcExZZDhFVTdEQ3JPQTJ1V0NnMTR6WEQyRk9BK3I5CkFIeWJCeFl6ZEh1UTlTRnRHWGsrU1ZjS3gyY1ltYzI2cEh1cjJhdC90U0VtR0JxWDNCdUhrYlNlRk5INWNOSTUKU1pkejVRaWRFZGcwSlU3T1p1bWF0YnEweDNUWTZZNGE1cjJjM01TK3VicFdJWVFGR0E1SWFCdGVYbmU4aFJlSwovZUQ5VUNZbGxpWVdHeU9DWm84OFNhUytONFFjTUZhUFJsZ2JMTDRmQUdWT2ZFV2xJdHY0ZjlUOXBVUXRaUitzCnVxbjlUTEY3Rkd1RWo0NFQ3c1Z3dExqNDVaN2V5UitOVVR3djJtcklVVWVWdTFETVcwWVJwR2VKY0VGTGJTdjYKNkdmRmlIZVVjbDVFS1U1WEoyYVg1Y1FPc1NDSTFZbFpqOVNib09Mc3lRSXRUWVh1YVFtYkFCZTZNZGhFR0F0NApWZUs1UGZaUXUxQThRZzVmQWZTZm4wZ2tKVVBxNFE2a2xEK1RxNURFTGxmT1pFOHRncSthT2JRNE1zSVFlZjF2CkhpczRPb085aExHY3Yza1RodFJhWDYwbyt1VEs2OWVWbGtDOFpMUzVqZXRVYUxsUGU3RU1sOHJxMDhZK1IvYnMKSnNYQVgyenhsZVlZN284WGZsRG85c2lQTWppVElLdkNnNy9RRWhhRXp6RVYvcVAwQXdaRGkxN0tUdHFneGgxWQpvTjZJanludU8ySzdzZVoyV2xOcE45RlRFTjlSYVNHczZkWk5LRW02SE9GTm55emxLS2VWVHdIMmIxcXVEWm13Cmo2ZWg2UUM4U3hmazFLZVUzMU9Qem1OZm04cG5xMmlOV2ZBV0tEVWRnaUt1dFhPaEdDMVdWUk5HVE5rQ0F3RUEKQVFLQ0FnQVdjcjJaN3hMSUFGejNPVjYydmVqTENpWU9iRDhUUHUrcmRMY1k0RmVLWWdFOXZtR2tYZlZkVlZUWAprTnEzL1pNR1VNTytpNDBSRWFnU1hYa2ZEcWJQWWV5cW1kYjBZUjZZSVViSFg1T3IzR2xwNFdmbWFQbjBxbGdhCmwzNGk5a1BETEI0RFZmTmRtekNHdFByYWdLcFVNeFhoc25SbEZLeUZEdW9Rakl6ZTh2NjNrSEpnN2tkeEZSUHUKMC9ZZitYUVc2OEF4WTNRLyt5YXlQZVhxampSWW1wK1FzdTVvMmZKdEdYY2F1S3B1Q1E0dktiQWVVaVUvd1dsUApTQitwN0ZpMWQ3SlRNVTFmY2ZIbVE0RFZNTHFEVTdTS040bzRJVVNJYUdaVFM4UGdvNkpEMGhja1BTYnd6bFdGCmd3OTduVWM1Slk3WStteW1wbG4wY003d3ZYZGFHV2JMOGFHbWkzamxOKzMzRGRmRmFHK1hqcG1SanRSZzIzRW0KWTQ2bUY3OUVIZXUxMExFdVBsc1Z4ODJUbFV6b3lpYTJna0Y5aGhpZklmcTBYNHVBT3A3UmFCdnRaelozdlBscgpXOFYzS0svRkN2NDI0T05ITjBKVm5wMHVSQlVxYndXdnRJT3VCZGtaaG5BTVUwY01CemxSQWVxR3JmMEU0YXpqCnVqSzhkTzZTbzE4TCszMmlJdnJnVDVxcy9pZzRzbEtIeElsM04ybVVjSHNTNnd3TmhRenZNU2FTc1hZZTdxeHEKRHVadGJwaHU2d00rRkE4VUo0U051NHVMNlQwYVNwRDY2STIzNkRlMTFGRms3S2FvWTNJbno1T3YxcVY5QUZ3UgpWU3IySjlLdEp4VlJUOWJDLzNBNW4wMllDYzhuNmFXbGVDZzNXZjdGbTI1M3JweTA4UUtDQVFFQTFHUWRoOVFrCnF0YUxTY2ppODVkK25kbUpVbXZhYjhXMkZtMGJpWHVKeTB1NFRvZEVGNVRheVlpcjZlSmFudzhJNEZSZCtreVIKNVBwQmVvcjlNbHFubmZZT2ZrdFZ4dmtzV1Uwbk9lRERUc0twZnJTY29GbWxVMytjS2wyZzVQZ0FGa0l0bml1RApFd1BvMnhJV2tEbk9STFdGQ2NiWS85M1hJK3kwKzY2NEM4Zk9aSDFOdE5NMTBxZklDQ0xGcFJ0SXg5ZVhyRGZaCk9maEdMOU5DS0pHUXJMKytzUURnNU1aVGJReTFQWFdJWFc2cEpJY3NnV2l5WDU0emlOTGxITi93Y040aWs4OEIKbTZiWWQyV0k1K0h6c25VYTl5YWVCWWhMc1hSVFpPd3hhd3NhU2dSOTY0OUd5NGJCckxMT29WbVBFcDhoN1dBVgpqUjdzRSsyWEhsS1EzUUtDQVFFQXl4bGJuL01QTWs5S3B1U0hITGoyUDk2eWpCaWxUclp2ZEtJbjNPT1FLem9jCnlGRk9Fa3ovbXphYWdrZ1h0Tm93NUxOM2phNWxZZ1AwR3ZCL2NIdGEwUmc0Vlg2VEJncldIdWxHUFhNZjlpZi8KMHFKejBueDRlUThlZ2RSamMweVN0TEFldEhJWWF2SkFYcmJIMm9JZzZicnpyaGNmMTIxMVMxZVVyZE1UQStIVgpzTHVNbnNGcjFCdEcrVlJBMmNpY2pENWhyaXlISk5KUHlySDdjeEFzODBEZklra0pFa2JBZXFvV0VuNllWb09sClBJcXgzL2JMZndGQkI0QU1nQ21sd0U5UDJGNXY0eTFPU0JPVzVOLy9aSG0xdmxJRVZJSHl3VWRGM0lvZU50clgKcWIxRDhZVzNJR0srYVZhdHNHWU5JamFmMXhSS1pRMnhQVFVwMDJYT0xRS0NBUUFwRGVFWGJFNWFKM1p0SU1PZAp5bDdUTEVWN0JSWUlIUE9CaWoyVWFhak0veW4xSS9ocGhvQjBERk1PdG81RnlLWXlscHhEMGFFeDNaM2lqaE03Ck5JTEo2ZElMWDR5SkZZa1pDZXpYSnpjWmRrOUZDcXhyNG1ndXA3QU1FR1VWWFVySEFxdkdzeXAyOW42QU9oTGEKZGhJRS9nRmxUbWFMcnRuek84SVFGRW5ISFN3c0NIeUl3M3JYNlU2bEkvT0lZcW5DMTAyZUlIMkEweGplRGJ2dwpFNU1ma1VETy9oaDZvRXRuL05qYnRHaFRoeHh5eng0dk5ZbWxLZk5VTTAvT01RdE5CZU14Sndac2krZXp6SkNXCklmcjFOK1dxZUhCN0tVbFlWOS8yMWlFSFMvSWM5SmxTZXpONEMraEw5WlF6WkJoZnhSck53NURtNGw5SHl0azMKSjBhUkFvSUJBRjlIV1NXVGFFaW96Qk81VisxUWxDMW9jd2lvTXp6Vzl6aVhMZTVCVDR3SDZpTExpYjJxSTZ1VQpGUzRUVmhQQTNIa2QvSE1hSW5PMStSbCtRN3JvRTdYT0QvZUR0c041NS9OK2FqWS93UG5BMEJIbnBrQlRwa3pjCm0rbzZVaUZ3QmM4QVpKY3dnMllBbWRRVkdYTFg0MHJqS3BnOFB2TFlaZE5mbGQ5cUN4eWlJSmFWbGFXUWhkNXUKb1lBc1YzUVQyZVV0Q3JRa0xZNUhuNmt1a0JEdHdMaXBjVVJyVVBjaSsvOVB0YVVkZ0tmdGdHSURpdWpQcGEzQwpUOWlONk05ak9tQWFsUkdqVkFnV1pBZ0tNSnJVdnNKTEdzamJQeTdKKzdGU2wyS2I1UXJFNWJHNm1aby9xYVptCnpIOHNhN1U2V3VUM0RVdGdPSHBwendFdzVKdEl3azBDZ2dFQUc0N2c2NnlyRm4yYXhzWE5oMU1zTS9ISzY5VXIKSHFrRS81SEo1eURqUGFobGJ6ZW0xT2hESFJ5YVBEdVh1YkR5MFloTER6NHRBakRyS0FNU2EzcDU4bWJNdXQxawp4dmJTUUR0MXlVS3BwQW4vN25ldS9KblBYNVkxRWI0a04yUFlVdTM1TFV4SWZ0UFVVQ0NkUkJtRyt3c1h3TlhWCjJ2SkNxazQvZjdhTG9xNEQxZG9vbGl6V3VDQjl0RTVPbWIwMjUzdkQxcy9ua1ByS1E0ZWU1TGpscDdtQ042M0oKVXdVOER1ZnlBMzZqcFNOVDBUWE4xSXYxdWZnYTQ0WVFBYzZIdU5OdDIwRkNUQ29IbW0zTDNIUVdFTEVlUEoxVgpTR3l0a2lDYy92NXNGd1VkNzBWejFKZmptUG1wL0VvY3hhb0VCcHBrUmVMT2lYRzdJN2dSM1l5cG53PT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdDiskSizeGB": {
            "defaultValue": "512",
            "metadata": {
                "description": "Size in GB to allocate for etcd volume"
            },
            "type": "string"
        },
        "etcdDownloadURLBase": {
            "defaultValue": "https://acs-mirror.azureedge.net/github-coreos",
            "metadata": {
                "description": "etcd image base URL"
            },
            "type": "string"
        },
        "etcdPeerCertificate0": {
            "metadata": {
                "description": "The base 64 server certificates used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEVENDQXZXZ0F3SUJBZ0lSQU9VT2lYMGtjVFdyekxMaDBNNGJ2emd3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXhNakF5TURVMVdoY05NakF3TkRNd01qQXlNRFUxV2pBVApNUkV3RHdZRFZRUURFd2hsZEdOa2NHVmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBTDBYWGRZMnNiS012VnFHcW9xUEdROTduYVNaVzQ1dE1SVStFNDgyTXF4MEdtTjRLSElQcmxFbFpzVjAKenltRGhJZFRPS0xOdU5hVVp3UkJmUFVEa3dMSElrWmxjNnhicWVaNkI4QTJGMjBMdzhINU9mckVUOUJBK1FhNwpsR3d6QnUxaXJSWkZ3MkJEUk05akFhTzlYT0drUTBUZWgwaEZIa21mNVNqdDBSRjZqSnl5cTFlTTN4cTY0N1pTCkpxSEhRMDJNZWVjL3FqcVFmeUpFMUo4ZGhSbURXV1JMQWN5Ym1ONUp3Ym5hRkc2SDZ6dGJUS3NTQ2tyamc1TFIKcDh4SDM1Z3hTNC9wVTlpQStNejdxNC85WXAwbDM3dlJCeDNMZldzUFIvV3N1RklSempNSVdNZzU5eUVHNk1SVQpTdklPREpEUndCNVQ3NFp2ei9FR3REaUhFZDg2cG95cGJUODNxenBWUFFOTjRNd04yVGpVbjY2VGhlK1VpdlVsClYzbnRSNFNJaWdsL2c0NGlMSngyenBuamNOdVJlblExUkJmblYyVFdCSHVPRVAvQlhvakJBZ2hDV05XNk1IalgKK0dZNEVDa2ZDd1dhVlRYa3B2eDc4bzA0a3ZNWmplSU9rNGZOY1hVZEhKVXpOTldlQWdsU1lsZXJnN2h4dzF5MQozTFlUcHREK0FvdWxsYWdVVkZXNGszUi9CUGIwR2JVYnJFQ1lpS3N1YXpxYkxwK2dNQ2dLOS8ycS9Sa3lWM2ZZClBQUUFHM0tGMGcwMGNBRWU3eEs1UmMxc1dlOXVwNzBuWExWSXNlNG1rQ2Y5NGlqZHpNUTBHSWtnQVQzLzZaRGIKVWsydU9Fd3hkRHZET0hadFBTSHBiZ1pCZlNXUWorYkhVZ25aRGFGalRtMTdoSkxGQWdNQkFBR2pZakJnTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWhCZ05WSFJFRUdqQVlod1FlQVFBSGh3UWVBUUFSaHdRS0FBQUJod1IvQUFBQk1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUFWVmE5eDdKeWJoTi84dmE1NVJpK2Z6aE1DNGYxWTBXWFpoUExGOUMrYQpVYSs3MnpJcS9kWlRWb0ZUbmJQV2lWZVVXSVF0QzE2ZmNKNjVoMkY4RlJOeTI4dStiVlMwZGdTMDVYVFFQN0ZnCnR6L1p5dDJ5bU8ySEh4WFB4cStXd3R2OHYxY1U3TjJrdVNRa1cxSHE0VHU5TzRjWkdBbVg4MGFvQ2pSMytwUE8Kb05GNWdXS2RpU3NTV3hsMllpdzFlNjRWSkxCUEFobzRDWjlxY3FpTHlIMUdDYnRhc2o5WnlaRkIxZlY4NHQyMApWYWdTd3o3a0cySWxUQ3dlY2VwTHpBcDBYbzlhdDN4VlZacG90YmppZ2JSbEUwODN2c1B5N2t0YSt5UEw3QkJSCmY1UDk2UVBoRzRrVUJlTkZFVTFaTHNGZGNFV043bHByN1VhMjJBVDlDL3BjTjNtcVFYejhTK1V3V0QzSGV1TmYKN3ZWZ3NSMTNhWWJYdXY4SjNWRHI5NlAzZWhJdUFVZi9EVjJuQ0N2RGdoQ3lzQ0p0RzFDNTZxbFRWb3dUdThPLwp0ck1zQWE0anQ4U2hwYXNkYmNHV1Q4R1ZtRDJSbkFpbndyOFNFMUZIRllnS0xqNVBJWndzcFZ0SW1KTU9uSWZkCi9QOUVZalJuMTdneVVlak5TVlRpejAzSXVmMFZPZkZRQU9nZGxJb2NYMGgwN0RxcnNTTm02dE1uR1VNeFRTcEwKR0xGb1RITkFBTHk2N1k3VTVnL0FxV0JSd1Iya2w2VzM1TEFqRW50Y1ZUenVjMjNzN05wZlZVTitYLzRGbWNDeQo0VlRRNUhBekJlaFVYc05MSDFPbEtTY2NHUWx3WU1JZUVMUFJJTmtNUzhTZ3RPQ1hQNVUzSGgxVUFhM3FKQ3Z0CnBRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdPeerPrivateKey0": {
            "metadata": {
                "description": "The base 64 server private keys used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBdlJkZDFqYXhzb3k5V29hcWlvOFpEM3VkcEpsYmptMHhGVDRUanpZeXJIUWFZM2dvCmNnK3VVU1ZteFhUUEtZT0VoMU00b3MyNDFwUm5CRUY4OVFPVEFzY2lSbVZ6ckZ1cDVub0h3RFlYYlF2RHdmazUKK3NSUDBFRDVCcnVVYkRNRzdXS3RGa1hEWUVORXoyTUJvNzFjNGFSRFJONkhTRVVlU1ovbEtPM1JFWHFNbkxLcgpWNHpmR3JyanRsSW1vY2REVFl4NTV6K3FPcEIvSWtUVW54MkZHWU5aWkVzQnpKdVkza25CdWRvVWJvZnJPMXRNCnF4SUtTdU9Ea3RHbnpFZmZtREZMaitsVDJJRDR6UHVyai8xaW5TWGZ1OUVISGN0OWF3OUg5YXk0VWhIT013aFkKeURuM0lRYm94RlJLOGc0TWtOSEFIbFB2aG0vUDhRYTBPSWNSM3pxbWpLbHRQemVyT2xVOUEwM2d6QTNaT05TZgpycE9GNzVTSzlTVlhlZTFIaElpS0NYK0RqaUlzbkhiT21lTncyNUY2ZERWRUYrZFhaTllFZTQ0US84RmVpTUVDCkNFSlkxYm93ZU5mNFpqZ1FLUjhMQlpwVk5lU20vSHZ5alRpUzh4bU40ZzZUaDgxeGRSMGNsVE0wMVo0Q0NWSmkKVjZ1RHVISERYTFhjdGhPbTBQNENpNldWcUJSVVZiaVRkSDhFOXZRWnRSdXNRSmlJcXk1ck9wc3VuNkF3S0FyMwovYXI5R1RKWGQ5Zzg5QUFiY29YU0RUUndBUjd2RXJsRnpXeFo3MjZudlNkY3RVaXg3aWFRSi8zaUtOM014RFFZCmlTQUJQZi9wa050U1RhNDRUREYwTzhNNGRtMDlJZWx1QmtGOUpaQ1A1c2RTQ2RrTm9XTk9iWHVFa3NVQ0F3RUEKQVFLQ0FnQmlzTGhrSG1XK1YrQllTQ0xvY0dsWEFHQzEwT2pOUEVZNjNReGVXWjQzRGQzYi9wRzFmbU92cklLbwpHaUFwZmFBRTlUV0JHemdXbnB2cHg3aE5OTkZjeU13bHk3dUV3TTY3SVFPOG1UNit4ajRrbGt4aGltWlJ2aWQ3CkVSb1ZJc2pCeXhlbG9VR29rMU50bmpIejROaUNXRFpYMG9EdkFrd2RoeHVXc2hERk81MzZCdktRbmxDdlpjMkYKa2ZqaHhOdG10U1BHd3g2NHRFUDJnZEFyUDhBQkllSGRDNXpqeW00TnpwY1N4alNWdjlEUlNRU0o0TCtJZUpocQpYNHhoZlQzQTlER0k2Zkc5OVFwbUNoQnY5WUtybkdIYVorMTc2b0lLQjQ2Nk5heDZBUnNLM1pkZzRZZ1BMOGo2Cjl6ZXFnQlNrM1NTVmI1OTdIZzU4c05BTkZNb0pQMitJeVZvNDd2YnFUUmYxSGQzTVFVejErUFZDN1NHYTR5OVoKWStYQWNTRkdkT1R2ZlF3R2wxUW9oc1lYOElhUkpsdFp5WU1sSG5yaW5PQXRMK29IVlNNUHFhOURhTkMyZ3l3QgpsU1BaREpTbHdZRC9RZC9hcHI5RUthZDRCZVlkVzlvRG1sTjdJL1VrcnFzeVRBYkNpU2wrRVlWRmo3RWJJalRJCmtaS0FEc1U4cjBERE5nNWNxeFp5NGVUVUErZElzZ3V6YkxJbXhUR0YvNjI4aWVzeElrQ0pZTVBjNkJQRHo2T2oKamwwVjFOUFJZelZMcllHVlh2YmNveDNzeUppMUN4MHIrODZLTFVlK0ZiM3l1RnBrOFpXZHRBSTQ0enl6K3BPRworRk5BTWZKcW10VE40N0l3dGNPczFISzU2b0R3dG5na0xGTkdONXMyVzNwdmE0SC9QUUtDQVFFQTBrUjhBeVIrCnUxSDVVZGtDeHdQeitGWXovc2QydXJpZ3NhMFk4aThSQnBtY3R2emJlTEo2TlZEWmdUeEFxWjJMOEI1bktaUWYKbjI5eERHMzhsNU5VYU9BaHpyWDRhYUtvSHdjWmZDaUp5dng4QjVrWEY3U3JBK2Iya0c1eW5ZenZMeDFNbVpROApUTzd5dGx1Uk0rVzY5MkljZm5vUEZhV1NxY3p5ZkRnSE9DT21ydm1JTy9IbXFHcFdPbGVVQzdseHd0RnpUd2JDCnBXcUZoekoxOFBYM0JNZ2hESXpHQ3VkTXdLRTUyU3I3bm5kTXBxY0VYQ3pGek1adUFsZGVEM2g4NkI2TFBLL2QKYndZN3A2aEJhQlFRaEpvQVZMa0FPVlVURURsN2lMbUswZVhuOGJVVXpTRXN2VEZaQitVR0VXWEx5ZllMSmt6SgozV2s1cnJtTytQUnRNd0tDQVFFQTVqZk9uZFdZdG56YXpzb0V6eU9aZit2NEQyMU1heEltQWpPYWN0TmJGZ01XCldOdGhWc281bFdCaVdrU2lSSk9aaWNmRGczbFFteEpJWUd1V2k0K3dpOGZXNWZpV3hjeEU4V1l2Sk02RkdvekcKMzdKS2RLY3pGeG9CNHZUdWxJcUQ0ZUhvVUNFSDFWSFJ2bU5zeEtXUTI3ZlFMM0FJYkVQZUtXRHUyQlBmVXR5dwpXeW4wcDY0YnZ2czBZY25OVE5MUy95WklSeDlhNmNTSFg3K3hmRHQrcVd0ZU9uaU9ocHh4Rm9VZEpkZHJVWGhrCnFFQXpjbUp6R09NanpFUFBHdnBUN0hLazQvVTFkdzd2cDFmY3QvaFB6cUZLZVFhd2lNN0VGY3RGQldiekNSYVkKY3phTEtpYXNLS1VhYzRqUmdiTncrMEx6L0tIZW1TejhjV09ma3poUUp3S0NBUUJJZmtvUFAwN2VRRlhvRFJ5egpCcjdmZU1EMmIwaVUrY0NWWVd0L1hCRFBxTGhxTW1Wc2lJUXZ5NDhoeW1jMDAxZUMwc2lZZ2pRZzRPZ2w4K21wClRLZEdmVGZLcjl4VWR6cmxiNm91cno5S2w2QWZjbjJPczhCZVdRdmJJZWtzUG9IY1NZcTJUSEE1eWd3dUtRVzMKMGRXVEl1VldDYmtYcW4wVlE4NjZXd3JLSlNoN25SYUdMRkZzOFRTSGF0aGs3bXUxVWtjaUVOK2M3a3ZaSCtHZgowUDE0VFpOdll6MklWdFNVZVVHYmlRRTFVa1pBRXNjakRHQ3B5Q1AzZEsyK1FiazJ3Z2taUkR6ZzRWSkI3SFdZCmI0cCtYU1lPRDdadkRkRER3RDNDRnM0d3JjWTVCRWlHckpCakxoZFc3SFFhSFhHVVVOcnBPb0pDYnR2dlRKUnAKYXNRWEFvSUJBUURJZGd1NXI4WDhFUmZPUEdhWG41NEhuNGN1bDdPVkFBYU1vRFo2aWNPa2xTZWVVOWljWkJaawpGYnRPY3JrQkVheitKaTMraTJJK3hWcTBhcnA1NTdLSTVJZ2hVNmFsc1VyUEVIVTRqWU9sTExQM0VSNTRHU2NKCmxLSFQ2QWJlM1FZZGFFS0xrMWRvem9mZVNtRHBrbWxpaU5vRWxIOGhGcSthUkVkMWEwaG90TFh6aThMM1IwbnQKc0h0YU13aExQc0J2WC94THdlZTk2bDBlYUtLNVZHemtSUk9Wd21nSW1xeDJPWTY1NXF3U0VzMURIRFF3QTczSgpDKytkNitXb3poVEpyTUlicE9iYk51eERRT1IyWlFmSkd2VG9FWVVpZXppTzZhSytJM2k0ank1TUZGQjFjWnN6CkFTRFpQV2VBa3Fsc2dFNUh5d016U2RLL1FVb3dQVGE5QW9JQkFCWW9paEJvcmV3VDUrbW5xbWpXeGluRzRZWmsKN1lDOC9UWXIyWjN3TFJiNmZiSUhwR2Y2V3ZGMXAvYTVhYTU5OGZHN2tNUmQydnIzdEFvV01HbjExKzB1TVNhTwpjZXR5OHpRYUgyMHh0c2M3TFlBbnB5RzNxYURscTA4SkRjS1lBSmxFa2hhWEIzMGVGb2tJZStCaS9CS2tpdDBZCjEyU2ozWkkzVlZ5RTZDNHMyT1NPaDY0RHY5VG55M2FRRE1CSWx6V3BJSHpNQ3ROZ2M4RHdwL1RJZTkyVXMrYysKdThFMFpCYktrcWRocWIrVkRhN1Zxd2lyc25qejJYN3JQSHJEWWZ2YWFpQTg3d1FuMHh5bWRvSXY4WGY1NmRKLwpycDJJZFhSZnF0ZlVna0dyMHZScXFNNTNNL2M4eUtjbFJicWV2Njlxb1VnL3ExSTJmbXVHVjBDekJBbz0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdServerCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQUt6UHpLK05OWXRZNW9FVWdibGswNVV3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXhNakF5TURVMVdoY05NakF3TkRNd01qQXlNRFUxV2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa2MyVnlkbVZ5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBeDMzZzVZd3VVUHR1UGFKbHpoR1ZVMEVnWnFOTkFzTzhWNDNLZ2NGa2UzcWpLcWNGd1V5cnQraEMKSDJFb09Ldlp3Rys0Q3hJcU1vM2V2dGN4bUZlZnltK2tpVjRLZDJnOTVSc2NOWDhRSHNVcjZiYkRIZTM3RU9Zbgo3NWdZeVBwbkxmdTQ0Ylc1QWJYSFp5ajUwUGp2YkNYSFNIZXpUQmVxRzVsMTY3cUhobUU3SlI5bXB6ZS9KVlFoCkdjdWRUdUlYK3pUYVpQTXVCck5pM2puYnhybStpRGhZV3gvQnRJTVhadjN1T2NpdE1YZlVNOFFveWlCR3dWOGEKdW9Ta0JnOE4yQUx5OUNSUEFiRW5MOCtyNGEyRm5PTlNDSjI2Z3lnZGRwbS9ISHBZYzJPd3RZdXFLdG8wa3Z2agpscjF6ZzJueHJiUGhaem1JMVlOc0NIOGFzV1BaT0tOR2RUZ0k5Q3ljeTN5VXd3UGh3SmF2ZmtWYmZ5dHhJNkVFCnVhalJpajlFVzhaZ1VPWVVJZFlCaEVhYi82RGJBSFhCNVBRMXlnZG1Kb0NPRkNQdzhGek5XTnU2d2xzbzNOVFcKU3FYTHJ6Y1ZLbEdpblU1VFJXOG5aSkZsRmJMQmcxZnd1cjhCSGR0ek54YWZKWWloZjNaWXREVmNSdGcyMzhvTgppZG5FTC9DclBkVnJucnVpQXkzZXJreGZ6RjdhOHQzcGlwNzVpT0Y3ZnZEOEpwYjBsTlhuTUcxUUo1VGJuRTY2Cm5qVUFTSWIvYkV6UnRjR2ExN3NiTE52d0JERjJiS21pQmdUMytMRWgwUmtiWjk5R1VUeXlYWnJycjFmSUpiOWcKK282a2NYazU2QXRhSU5xRk8vRmpRaDRlUnpOQVc4VUdHOW1saEUvRG9LQWt4OThLWlZzQ0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkI0QkFBZUhCQjRCQUJHSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUN1aWh2MWd3b2J2R04zSlUvTEx3alg4SVRtTjVWRlpSVk5Ra3RObAplTGlYTlI5NUVxd3pkRGVBWWdvYlhvdzVkK2EwTHkwUFU1WmRmbHNUd2JranVaY0dXbVFLeWhOb01HUVFISHJLClA0aWNMT2lDaC9jaHkyZERvNC9uYnlzRXhwWXR6TmtwZ1dKSnVhc0duYWNOcnZZek0zcFRhcEZsSXlJSE9WcG8KUkhkYTNRTUVHRzBQZDhGWGN3Z0VoT1JsMFZ5bUtjenp1QXdEdmhmQ1pQc2ZiY1Zab0ZKMTNtYWJJUm5zaDhiRQpMTGFHWTB0YWxzMmJaRlpJblFJaTl3Q3ZIMlBSUEtvZzFOeWdVNHVuUmZnN0VORHZOWnFCSlloRWhOWWxhZ1c0CkhkcHAvM2d6MmpIRllWT1VCZEl3MnM0VEI4VGFBNytsNUlRelJMTi9JUXZ1ZjN3RWtKUytORDZDMXJCWkw1ZkoKeWJ1WEpxZk9OaldRV2ZtZW9qUjQ1QWdpR0YrSkNvUnIrSytRSUJqeVFiM2pmQkY3MExibEpEVml1Z1N4bW5aawp1L1VMekcrY1c0WEoyYndSV0tHYm9SV2dXVy9PS0lreDVBczMza2FYSTB3dEtsTEV0NzNJWmZEVllWL3RacEIxCml1R3UzRjBaaVlXZWNlSy9Jb09PamhBVEFxQ3ZZYUczMDJjOFl5TWVaNDk1MllEajVudjJBVzEwRFRKdEI4UVEKUk55Z0tSMlNpaUc3eTk2VGRaVUlXenYxMi9tUS91ZFh5dW12Q0EyYjJYK0habkR1NENtQ1pyNkw4azN5cWUyTQpsVThsOU5MeEZ5SW1MSUcyRkpJZzFvWmgrZWcySXFVR0k4Sng0djJOdlhkcEx3WEZtd1lKRW81d2Ziam9PRFdYCklXdVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdServerPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBeDMzZzVZd3VVUHR1UGFKbHpoR1ZVMEVnWnFOTkFzTzhWNDNLZ2NGa2UzcWpLcWNGCndVeXJ0K2hDSDJFb09Ldlp3Rys0Q3hJcU1vM2V2dGN4bUZlZnltK2tpVjRLZDJnOTVSc2NOWDhRSHNVcjZiYkQKSGUzN0VPWW43NWdZeVBwbkxmdTQ0Ylc1QWJYSFp5ajUwUGp2YkNYSFNIZXpUQmVxRzVsMTY3cUhobUU3SlI5bQpwemUvSlZRaEdjdWRUdUlYK3pUYVpQTXVCck5pM2puYnhybStpRGhZV3gvQnRJTVhadjN1T2NpdE1YZlVNOFFvCnlpQkd3VjhhdW9Ta0JnOE4yQUx5OUNSUEFiRW5MOCtyNGEyRm5PTlNDSjI2Z3lnZGRwbS9ISHBZYzJPd3RZdXEKS3RvMGt2dmpscjF6ZzJueHJiUGhaem1JMVlOc0NIOGFzV1BaT0tOR2RUZ0k5Q3ljeTN5VXd3UGh3SmF2ZmtWYgpmeXR4STZFRXVhalJpajlFVzhaZ1VPWVVJZFlCaEVhYi82RGJBSFhCNVBRMXlnZG1Kb0NPRkNQdzhGek5XTnU2Cndsc28zTlRXU3FYTHJ6Y1ZLbEdpblU1VFJXOG5aSkZsRmJMQmcxZnd1cjhCSGR0ek54YWZKWWloZjNaWXREVmMKUnRnMjM4b05pZG5FTC9DclBkVnJucnVpQXkzZXJreGZ6RjdhOHQzcGlwNzVpT0Y3ZnZEOEpwYjBsTlhuTUcxUQpKNVRibkU2Nm5qVUFTSWIvYkV6UnRjR2ExN3NiTE52d0JERjJiS21pQmdUMytMRWgwUmtiWjk5R1VUeXlYWnJyCnIxZklKYjlnK282a2NYazU2QXRhSU5xRk8vRmpRaDRlUnpOQVc4VUdHOW1saEUvRG9LQWt4OThLWlZzQ0F3RUEKQVFLQ0FnRUFrMVlxQ3Y5OG1iMEpUNllva0lpMkE5WSs2dTlEQ242c0ZQSVpGYnBTejB2bFJMUTA4TzRDaVlLVgppMzJEYWsrcU5KR09tVWFpT2RKRUtDamhiVVdTTTc0L0JHR2JVMU4vR3ozcG1LMHVwN3N5VXB2MEFaL3BaVExIClhoSzBnNE5GUDFZQjExb1N1T3VieVZvZkg3TXJpWEZoZk9sRFdEakdIem81T0kvOFZraHJtV0JXdmJ2VGhldGIKd3lSNkcyK3JESktkbGg5dzUrd0hZbC9UTFRPMFFBRjFhRi9NL2Rnd0taWDBJMk5PWHhIRWZUTXNlUlJiamFnRApJcXlpUkFOTVV6VGlZV1NMb1pGSWd1eGJZd040Z2tYMktYenM2cjl1KzFCVU1PRS9nSUdwV253N2d3akQrYWJtCkVVZjlENXJvcjBVQ2ZlMmxYU1NDWHNnWlc5aUY3aHUrcUZvRFFaUW1aSkY4TXZEckdtUEJzeWNmcFAvQzRpMjYKV2V4R2NBY3ZEbXFFR1kwY1FNdkhLak1qOGZVbG1FV3duYkZ1dGt4eXV5UURSZHFEQTdSd1hRVE55aEVXRzVsegpBRzNoR3pXdktaNXM1L0FNeE1TV0doNnZoYy9PTzRnRStYb2xVNkpPWmR5cEJTRXBkR3QyZ29hQ25LTURPNFlkCkh1dzhEOW8zZXBVYVhxREdPdGh3N0E0NEVNRnlOL1o2ZWlVUjlGUXl4T3RXTzJEVTNDK3A2N3FTcUZKcnlmZFMKOCtwZkdYZ1crejVKbHRrb3RDbFd4KzBENWhLMWlzU3BwRFFUcHFRYzFQWTV0bWFLbitDRXR5aVgrZjUrZXFrTgpUcFdTNUh3aS9EaEE0VGpFWDJMazg0N0poalNXUlg1UE53Ynd1aTd4WGpVYmVnYmVHdmtDZ2dFQkFObEgrYkt6CjZnWDdGNUlzZUxYVERIR2dwemEvVHpQaFFIRk1ZZ0MzbCsxaWU3Rlp5Q2lQTXRXY1M1M21rdUZzSURWak54NXUKcldMNTQ4eUZnMjBvUHNoWE1TTTQ0Tk15cVN0WENUcjV0VUtmT1huMk9FUWVNR1grb1BrNkkyM1o4Wm1uWEo2cwpXdk1XSjg2and4NjdsVWgyN3lOYmtqL3pXV1F2WGJYQW82cTE1ajFLaDdYV2hwMmpIa2UvbUJJUjR5cjJNeTNIClVkOFZ0UVM5TWtwL0dVczYwdmpjeVAzZ2RrYlBweDVoZGtxSlliamZxZXBYaEN4TFowTmlabk9YK1V4WjRjRDkKdzFmVklVRW5uTTU2ZEl4MTlpeG5nOEtSVnYvRHhPdEpCNU8wTWE5UFRoeEJuN1RjTG9iUVhOdHVjNmZhd3JnNApPQ2xGaTFyYkxGa2RaSDBDZ2dFQkFPc0tZSFdKUm5nUFpZdUNaa0diYUtGVGZ3SUhZSjkvS2dkREpFQVBtWTF2CmFobFdxKy9nVGowMmhvYTdXbWtjRGUrS0xGU0NTZG5uaFc0QzJweXZEVUxYcWlwOWRHL2hYQnZmVFprcURXeXgKSTE2cVRidFhKTkpFSVdrWklzc1lVMzhmbi9UNmtnZUNoVEUydU5iTi9BMExGNTZyOGIzNEg0bDVqT1Q3QVlBNgo0eWtrTDNUcjJmNTdTcUhDWEQ2WWFBUGhJT1VCM2Q1MEd2TGJOT1JiRGNCWVE0UHZRZ1liSzhUUlVBZlNaNjNiCnp5SmNnYUhGN0prYXFyNisxdnNFS3pOL1FoOSt3QnhEU0dST2E4WU5sZHBoV3F4VkkxTUpXVFJjc1JwK010bG8KZnBJVzNSUmtJdXJtM2dGSE51RG9EUTh2MjV1TXNub2M0ejE3bFBhSzBMY0NnZ0VCQUtIbW1LOUlrZ3RNMG41dgp0cTQ5Q1J1dHlvcm51QnQvTHlaODlOVjE5N1hCV1V1SUM3WDFKYnEzVUR6aTd2VWJQVkNxa2dxU0M0NGhoMVVBCjh6SWw5OG9OOWlZNW5vU2dUaDltSmhHVXVUUmdNbEtuWGJ1Y0J4SW96a2VHdzVsNStTVTE2TFN1MXNJazh4cHQKT2RtdmlvZkpYMTBvUVd4M1psZFpWK2t6Rm9FQU13UGVnZ3JEUStFNEJ6c05EMEgvcEJhQ0J4YUlXMy92eThjeApOc1Q5dVpvdHhiLzd1NlE0V2NsZnR6WFRCM0o0dGFFc3Y0NUhFY3h6andsTnkrczhCVjJYNTdpSEhjUlhvZ1RMCmdITDJHZHdEbFovMnJkNFBzQlM2Q2dRTGthTEVkUFVkRWFYS1hEZEdqVUNWQjJ2Vi9FWEpvcWZqOUMwRWpkYncKVXpZL3lYMENnZ0VBZXgzbll3bnlRTWVINEdrQTJWTG5uc0hXNEtBdXE3MTNyWEF0RitWVUFMTWd0MzhmOXpuZQpvYy9pN2NaTDJJMGFlNlE4RGxSbERPQnFrektwZ3JOclZkMFVSTWVNYTJKMzFoM0ZUdnFwSjRzdVJOTWVmb2hxClFEM3g1bFNGVmk4NjVYY1NXY2U3SUhYdEFOZHlRUXFMQWVZU2pFbnpDaGhqcEtabitEWEhGbjFDS25YSzZncjEKR0lsS2thcjJtTTlLaE9XelRtSUk3eEtRWHpBVjU1d09ldmVBL2lZZ3hvUUxERUM4RkN6UnBFOWtrOUl6RVNOVgpDT25nRUtSMGhlNHNGd0NOQ1dSaWl5dHZTeU9NN3FTRkgyd3BpK1hZNkJFWWlnWVh1eEhwM3RvT21zV2hMcUk1CmJDUmNtL3pLc1VxOE5IMVVJb216bjZWc0h2T1NGd2FseHdLQ0FRRUFsMlF3YjExbkR2amFHMkhKTk9KTXRhKzYKVlRPbGpyVVBabUUydXdkVnd4ZDk3ckh3RGllYWtYbmtFeHlQRGhzbE1DbjhkSU1QdHVqVGxDUTJ4bUhSR1ViVAplLy8vS2t0U2s5alEvWWNGTDFFUWpqZGZuMnIySGM1VlhXb3lYSHY3dkNXSVpqS2hNVi9Cb1pqQUwrMmVRdzJPCnpDdUJqWmw2QXF1TDJNejVZdm8rRjZkVG51WEhTM041STJzb3EvV2pxVVFWZGIrdDAxQzlqY2VtR01CbDBuNlYKOFhaVVZJZStQVUNyMUovTW4wSE1oZ0RFUGhsbkRmMmh6alhDM1NsSWZobkFueVJ2am93WWErVUo3NmNoK3dvMApDclFFenEydENpdmFSaThmcG8yRjAveTlHNTFFZFBvcWd2TmxZMEZ4aTB2QSttcmxmSUY5L0x1Nkovb2t5dz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
        },
        "etcdVersion": {
            "defaultValue": "3.2.16",
            "metadata": {
                "description": "etcd version"
            },
            "type": "string"
        },
        "firstConsecutiveStaticIP": {
            "defaultValue": "30.1.0.7",
            "metadata": {
                "description": "Sets the static IP of the first master"
            },
            "type": "string"
        },
        "fqdnEndpointSuffix": {
            "defaultValue": "cloudapp.azure.com",
            "metadata": {
                "description": "Endpoint of FQDN."
            },
            "type": "string"
        },
        "gcHighThreshold": {
            "defaultValue": 85,
            "metadata": {
                "description": "High Threshold for Image Garbage collection on each node"
            },
            "type": "int"
        },
        "gcLowThreshold": {
            "defaultValue": 80,
            "metadata": {
                "description": "Low Threshold for Image Garbage collection on each node."
            },
            "type": "int"
        },
        "generatorCode": {
            "defaultValue": "acsengine",
            "metadata": {
                "description": "The generator code used to identify the generator"
            },
            "type": "string"
        },
        "kubeClusterCidr": {
            "defaultValue": "10.240.0.0/12",
            "metadata": {
                "description": "Kubernetes cluster subnet"
            },
            "type": "string"
        },
        "kubeConfigCertificate": {
            "metadata": {
                "description": "The base 64 certificate used by cli to communicate with the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5akNDQXQ2Z0F3SUJBZ0lRSWtwaHh1VmJUMkZqQmFpOXJlSlpsVEFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBMU1ERXlNREl3TlRWYUZ3MHlNREEwTXpBeU1ESXdOVFZhTUNveApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1ROHdEUVlEVlFRREV3WmpiR2xsYm5Rd2dnSWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFEcGRxbm9TazNibktkbDhYR1FvVVdVdVc3OTJFMFIKMW8ra0QxaFM2QW9KZ1Q3TG01R2JucjE5Nzg3ZVFGaEhrc0tRMHhRQnoxV3YvdFlEMWQzVUZtSGhaTkFWdUFyTQo2Z0VkVzR5a2VmZ1YxOGFRSnhVS2tCeGNFbjlpbWlrUm9HZGtpTmRQdUhXbHI3SlplalRsNE9xWXhSVFVhOGFZCktJVFlxck5yQkVOS1hWNDFtbFhTdXdSeHQ5SFFjOG4yUzk4QkZVL1lpNHBlL05wcTVheXcxbDh2aEQ0b0NBU20KQWNnVWhuTTVVVkVkVGxPekdkaG5KNkVyTXM2aWJERllCTXJZNDZzVkdpTDZvVEZFMVlhRmNzZ1FrQit6ckRObApqVkdoY0EyeU1WczQ2ekp0TWhUOWFkQUpPYm9xOEJYckhDeWo0ZytFUGpRdjZpYkpvK3RXMHhyZG5zdDFaakQ3CjlHQnJRdjMwUEJRb2V6ZXRpRy9KNE9jbUVuOGRjTjV5cDRhb2paZWVLZElQdVZrRmFPZ2RDUUtTZFVVWE5DangKeVlTTElBOWwwaVRPSFJmbDdvL2hZM05YYTBscU1vS1g2Vy9vZzVIWDl0eVUzQTRxNTA4MG4vNkQvRkYzSVRLcQovbXNTbDU3cEhJa1FJQjVOd0owUW94WEdmZUlkYzdJdXR2UUV2bDFydmMzd3VzVS9wMTZyMnRaVXFrWmcyYldNCldBcjRLN21YQzFnQ1VRMEFXdVZubkFjYU9MbVZPUGJlOUNCOFNqSzFxZVlqTVgzMHIwV1JGVERIb0grSy9oNDgKcTdndWU5ZThCc0tTWmRHeDdzU0Fqa0xySDBCRzFmOTZ4LzFCNm43dUNJbGFITUI5Ri9qVHU1RmVRZ05wZXVFbQpHTStacGtqMmVoNmFQd0lEQVFBQm96VXdNekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRnhJT3R6VUYKWUdtNVhtTm9RbEt5WXdTQVduSHpRTWJpRWlrOXg1WXl2SFRsZU5DeDl2bk1MVlg5QTVpcFpDTk91bDZIcmh4ZApDRDBVS0g2cHBaMDJwMExHaWlCdHBXZ2htU0dQUzZHVXRLYiswNUtoZTMvMXlUUjJQNG9RaTRDYWFUcFA2NHdhClc1ZmlWRlVDV1lsYmR5S2xBVjZhendKSElIMXBwYTNMQWZqNjdGUE9UR1E3a0E1NFpCeDA0dEJJcmRvV09jZkoKQ1c3T2dMZzFJZjJxVzFJM0R4bHV6RURzdnBCdUltQjZZTUdOR2ltd1diR2d6ellVRUVsYi9WVHBoc2Z0M1BjSwpxb1B5VTBiTWw5MXovaVVBdjB1RUVKc05MSlFoeEMyQmY2cnVPV2JJdk40dnZveSsrcFp3UVE0VlVrUUwvN3NGClN5OXBEdWJCSVhZbDgrZFVzb1VoTVZRMEpKOWp5N0RBOHROckNCRlJoTysyVEtUYndzZGpuVE9DQjhINHhHdmsKNnpzKzBUeERoVk1kTDYzNm4yS3Nad1FNdytFNkg0eGkxei9vQnY2ajQ3SDRsQVF4UXA5VjhYTkNHZ1Y0dnMxLwpTRDlHc2ZoWXQ3UnY3ajFzc1dQUzJJNzVsZlpGMUtuNTU1RWRpM2FEMGVjQSs3M3dmM0s2SUFXWVo2TjRIdkJMCm1uZ3F5dGNXdldMeUtLVE1rMm1EYVdVUHNHTGFicjR6UW1kUEhIUWJ2MGVGc05sSUdnTmRMMkk0dUFmN3BoUGwKTmczWFE1Z2JHK2dNSWZDM0RYdGRlRnN1QUVUbnJQbU9hSTRmend0RUI0VmZaWXdXVGlTZHp1RVhjVm9Gei9XTgoxZ3hiMTFtRmlMaUtTNS8zMkFsN0F2bXQraW5ST1o0SHl6Zz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "kubeConfigPrivateKey": {
            "metadata": {
                "description": "The base 64 private key used by cli to communicate with the master"
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBNlhhcDZFcE4yNXluWmZGeGtLRkZsTGx1L2RoTkVkYVBwQTlZVXVnS0NZRSt5NXVSCm01NjlmZS9PM2tCWVI1TENrTk1VQWM5VnIvN1dBOVhkMUJaaDRXVFFGYmdLek9vQkhWdU1wSG40RmRmR2tDY1YKQ3BBY1hCSi9ZcG9wRWFCblpJalhUN2gxcGEreVdYbzA1ZURxbU1VVTFHdkdtQ2lFMktxemF3UkRTbDFlTlpwVgowcnNFY2JmUjBIUEo5a3ZmQVJWUDJJdUtYdnphYXVXc3NOWmZMNFErS0FnRXBnSElGSVp6T1ZGUkhVNVRzeG5ZClp5ZWhLekxPb213eFdBVEsyT09yRlJvaStxRXhSTldHaFhMSUVKQWZzNnd6WlkxUm9YQU5zakZiT09zeWJUSVUKL1duUUNUbTZLdkFWNnh3c28rSVBoRDQwTCtvbXlhUHJWdE1hM1o3TGRXWXcrL1JnYTBMOTlEd1VLSHMzcllodgp5ZURuSmhKL0hYRGVjcWVHcUkyWG5pblNEN2xaQldqb0hRa0NrblZGRnpRbzhjbUVpeUFQWmRJa3poMFg1ZTZQCjRXTnpWMnRKYWpLQ2wrbHY2SU9SMS9iY2xOd09LdWRQTkovK2cveFJkeUV5cXY1ckVwZWU2UnlKRUNBZVRjQ2QKRUtNVnhuM2lIWE95THJiMEJMNWRhNzNOOExyRlA2ZGVxOXJXVktwR1lObTFqRmdLK0N1NWx3dFlBbEVOQUZybApaNXdIR2ppNWxUajIzdlFnZkVveXRhbm1JekY5OUs5RmtSVXd4NkIvaXY0ZVBLdTRMbnZYdkFiQ2ttWFJzZTdFCmdJNUM2eDlBUnRYL2VzZjlRZXArN2dpSldoekFmUmY0MDd1UlhrSURhWHJoSmhqUG1hWkk5bm9lbWo4Q0F3RUEKQVFLQ0FnQW5XMEc1VHcxaEFEK1lCK1BGSmVxODc2V3VWVkJvdVdydGxVaW1jVWQvNHJIYlVSWnl6WWZVT3lEOApob3hiUkhwWVA3MFhzUVFZN3pUVTRMRE1tQmxZRGM2bVdxZzNjeHRNLzZudDhFSEtMTjNrWHpKRTNaWnFUeFA2ClkxS1pEaGxmOFZHYXR0WGVZSWdJWFhtZFp4VWxPOVFQR3p3WFduMUtxVHdseGtveHR4dXluWm5xTkd6RFh1R1gKNm0wWmdDRFA1ZS9YNlc0aUpTNE01enI5ZEtZSE5KdmwwN1EwNkFmNnJjK3UwZTZDcWptaDc3RnpjbExSSFhlSQpHZ1VYZVhkWXFNaW1mZ2wzaHNUdmZhOTN2Nm5LWVFGM0lJaHBqakU4cmM4aFF3REZ6NkJvbUJEQng1eXljWERZCjNEQlZ1aUlzWG1lUE80MUFwcEJ6WFpiR3hEKzYyaVRNeS94NTdIemlkWFcyVW41cFgvOUhCaG9XeE93cnR5djUKY1JjekFhSTk2azlkRndZK29PbnpGOHJJVTdmd1RzRldpWUhmd3J5Wjh0a0hmWlBzdlBTMWdjdEVTWDNJaUZ4bgozTnNDU0E0YWYvTkMxbTEwWThPY1QwMzFjaVBFZ282V0hQcVVySjczY1ZzTzllNWtkVVEvT3ozLy9LVjR1U0RuCjFJbkpZZzRJVDhRMUZQRHplMGYzVDlQU1ZFTUdieXZCSDRxbU1Fek14L05wSXZhMXlBQzRlMU1PM2duLzRZZ08Ka3c4Z3hRbmF3Z3hzRHBXMnI4L0JCclBvSWhRbW1POGg0Zmlvc0hkWWVQUEVpVyt2VDhuOFA4MW5LWG5aYnpqUwpRTFZkL01YZGowQjVLUnY4L2dnL1BuSkgyUnZ4K0I3RmF0NDVZRkxkM2FYZ1FBQXhRUUtDQVFFQTh4M1dxK3RWCm4vcHdUaEhacG0xYldMSzJydndybUl1VEZDa1JaTlkrYnM4ekJVdHNhc082RWkvWE8yYjZncU13OEFMQXE3YkUKcUxMaUROZUdoOFpRREJYYmFTWkg5d2ZYd2Z5L1l5aThTejU3OGd4eExubFc4ODhsY0dRR28wQWQwSGcyenBtSQpZbFpGRGNGUXJpYUV4K2hKa25mdW5wTVRlRkhEa2dhUjIvaWhrdFYzZTRydHRxTnhvK0MybDc2bDJSVXZxYTB1CjQvak5xb2o5aXhQMlFzSWV4TTZqYStWU2VsdDE0MnpyL2J4bDRMWlpHTEtCc24rTlkwY3BsMG14T0xsMWhjcWEKQ09ta0ZlZGNnSG5mNlVZdS93WVMxZUpvYzd6TVBaNXRQQU5rVHdnZ3pBNmZweFdQc05XV1ViUDZqSnBTV3dRZQorZnRBQmpjc0w2QjVVd0tDQVFFQTlkWGUyVE1wTGowNUFKaklwUno2eGdEUTZLQmRuRU4xLzNTZWowTGZUU3ZpClBhZklUblVWNTNqTVFxK3BJKzd6bitvcHlzekxWRy9jUURIaTJFa2U4eUVnYmdtZTM5djVINk5xcEVjbnZEYnQKRTdScjd4K3paOGhoaHY1WkxVaUlnUXhtRGwxb0pKM2llbXYwV20wT0loRFdaNnpBUThnVytGMVo4TlZlcXB6NgpUTXNoMVg1U1FmZDZ5VFphcUx6NUdjN0Fsd002S2dtMDNqNGJUTHhXUEIxRXFzVEgzcnV3SHBQZ3lvLzZSK1R0Ckt6Z3dNWUliVitxTWw3SnRwK0lSR051Rm1GWmFyMmxPSlNWRE9pN3B2V1U3SjkraVpHRXZPakxPdUJZeFJpL0IKVCtDajNJVzFsOWNiOWpYUkU4T05JMUhLVjVPRmxCSjk4a25TVDZ4QjVRS0NBUUVBeE9GSUpLZUxDdWdVSkpUKwpEbklIQkppTnFyMmFUSW5UalFNSkRBRVlSRUpWamhjYmNJYWEyL21VTW8zZGx3ZXpMTnI5enRGUEIxTCtEdXBICkR4TkJaZGdaZkZpODlNZU1LWk9XSmlZcC9rRld2SmpvMjNyMk9MRnJIMDVSdGNqSm5EYU9JOWRnQkVyYTF4M1QKU1lUMkNMSUxTcXNIT2JIZmxaT1pibHNWcWU3NllkK3ZTQVFsSjcvSzJxeXpFY1lacHVncVZoMWltTW0zUEVCKwpHekFLUU52VmNRbnFmQWtWTnZOMFQ3MjRpeDRUM3R1czRYeEYzaGkvbGtOZDRoK1NmbDVxVnZQUXRDRUplWmVJCmFKN0ovcTZRaG9RVG90UWNSSVlEWEc4OUJObTJWTzQvS1NFNmwyTzFucjRKWXBiKzh2aFNjMVN1QlVFOEF3eVIKSXV5dzh3S0NBUUVBbkE2SFovUWRTVGdlTG0zT3VWb2JLNFNyR1hGcjIxM0wwejJ4eGhuYWJUL1ZYL1JacU15VQoraHJwOTg5UkhQbDhlR0NLNVMxNlNnQzBuWi9OZENWKzJ6S0ZSclVld05jQVg0QTZtMHg4UWZQUUxma1RwM25GClJyV2lpN0o4NDgwdXNsVXZtQ0Rka3BrVGcwbHlsZEN5N3hjbk5Dc3E1aHhuMElSYUt4TVlCRkNnYUExdlRmcmgKdHZTbVlvTDVyREpDSTRybklUWXdQeTFvUHNqSVJiOHRNdjRWY0I1NURzQ3d2Y2g4STdxZ1UvRlVTV0ppM1pyTgpSdE1qS3MxZTVQc1NoV2dkZDZZaDdVWjVFQVdHbHJIZk9aYkFwY0JHYzFocVJaU3BPNTBDN0o0MkprSGhZNFVSCjBQRUIxQnMzdlVjZkduTzZjanU0eVZXdjFCWGV4eXIvclFLQ0FRQjBBV1BQU3hLbnQ4QUVubnVSQ2pXUjhhTWQKZmpjb2llZGhFZE9WWkFReWdib0V3SGlrb2pJQVZNRnlUUGxUV3JCejNPTkZycmJVcjE1WTFCNEJsQTBKd3NUOQpuNWt0SHllUkQ1bk9aS3NZZEpzZThIaUVyK2pPS2pCYmtaa2l4ellQQ2xxOFphMUxleXc3a0g1TjFZbWtjZ29tCjJxS25MNzB3b011RjVib29JWTBnVlE2SWhyNElQVzRZQ0RGL1UxWm1uZmtkOERQdklhQzh2b05kblBnV0pXQkgKcDJxbFN6aFVWUmtXTDZHTmJPLzU1by9ETjdkWjRVL3FDUlpXcHdpWmhQOHFnNTU3ZmtQY2tLWFBiOEZqWWl0MwpCUkc4ZFFHK1Q3cE5PczA4UFhBbXNOK29wRHF2OTRhVFRpWHRFckd1VHFnT1NmMHg1NzNlMEwxVlg0ekwKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "kubeDNSServiceIP": {
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "Kubernetes DNS IP"
            },
            "type": "string"
        },
        "kubeServiceCidr": {
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Kubernetes service address space"
            },
            "type": "string"
        },
        "kubernetesACIConnectorCPULimit": {
            "defaultValue": "50m",
            "metadata": {
                "description": "ACI Connector CPU Limit"
            },
            "type": "string"
        },
        "kubernetesACIConnectorCPURequests": {
            "defaultValue": "50m",
            "metadata": {
                "description": "ACI Connector CPU Requests"
            },
            "type": "string"
        },
        "kubernetesACIConnectorClientId": {
            "defaultValue": "",
            "metadata": {
                "description": "Client id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorClientKey": {
            "defaultValue": "",
            "metadata": {
                "description": "Client key for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "ACI Connector Memory Limit"
            },
            "type": "string"
        },
        "kubernetesACIConnectorMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "ACI Connector Memory Requests"
            },
            "type": "string"
        },
        "kubernetesACIConnectorNodeName": {
            "defaultValue": "aci-connector",
            "metadata": {
                "description": "Node name for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorOS": {
            "defaultValue": "Linux",
            "metadata": {
                "description": "OS for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorRegion": {
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Region for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorSpec": {
            "defaultValue": "microsoft/virtual-kubelet:latest",
            "metadata": {
                "description": "The container spec for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorSubscriptionId": {
            "defaultValue": "",
            "metadata": {
                "description": "Subscription id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorTaint": {
            "defaultValue": "azure.com/aci",
            "metadata": {
                "description": "Taint for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorTenantId": {
            "defaultValue": "",
            "metadata": {
                "description": "Tenant id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesAddonManagerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/kube-addon-manager-amd64:v8.6",
            "metadata": {
                "description": "The container spec for hyperkube."
            },
            "type": "string"
        },
        "kubernetesAddonResizerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/addon-resizer:1.7",
            "metadata": {
                "description": "The container spec for addon-resizer."
            },
            "type": "string"
        },
        "kubernetesCcmImageSpec": {
            "defaultValue": "",
            "metadata": {
                "description": "The container spec for cloud-controller-manager."
            },
            "type": "string"
        },
        "kubernetesDNSMasqSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-dnsmasq-nanny-amd64:1.14.8",
            "metadata": {
                "description": "The container spec for kube-dnsmasq-amd64."
            },
            "type": "string"
        },
        "kubernetesDashboardCPULimit": {
            "defaultValue": "300m",
            "metadata": {
                "description": "Dashboard CPU Limit."
            },
            "type": "string"
        },
        "kubernetesDashboardCPURequests": {
            "defaultValue": "300m",
            "metadata": {
                "description": "Dashboard CPU Requests."
            },
            "type": "string"
        },
        "kubernetesDashboardMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Dashboard Memory Limit."
            },
            "type": "string"
        },
        "kubernetesDashboardMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Dashboard Memory Requests."
            },
            "type": "string"
        },
        "kubernetesDashboardSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/kubernetes-dashboard-amd64:v1.8.3",
            "metadata": {
                "description": "The container spec for kubernetes-dashboard-amd64."
            },
            "type": "string"
        },
        "kubernetesExecHealthzSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/exechealthz-amd64:1.2",
            "metadata": {
                "description": "The container spec for exechealthz-amd64."
            },
            "type": "string"
        },
        "kubernetesHeapsterSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/heapster-amd64:v1.5.1",
            "metadata": {
                "description": "The container spec for heapster."
            },
            "type": "string"
        },
        "kubernetesHyperkubeSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/hyperkube-amd64:v1.9.7",
            "metadata": {
                "description": "The container spec for hyperkube."
            },
            "type": "string"
        },
        "kubernetesKubeDNSSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-kube-dns-amd64:1.14.8",
            "metadata": {
                "description": "The container spec for kubedns-amd64."
            },
            "type": "string"
        },
        "kubernetesKubeletClusterDomain": {
            "metadata": {
                "description": "--cluster-domain Kubelet config"
            },
            "type": "string",
            "defaultValue": "cluster.local"
        },
        "kubernetesMetricsServerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/metrics-server-amd64:v0.2.1",
            "metadata": {
                "description": "The container spec for Metrics Server."
            },
            "type": "string"
        },
        "kubernetesNonMasqueradeCidr": {
            "metadata": {
                "description": "kubernetesNonMasqueradeCidr cluster subnet"
            },
            "type": "string",
            "defaultValue": "10.240.0.0/12"
        },
        "kubernetesPodInfraContainerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/pause-amd64:3.1",
            "metadata": {
                "description": "The container spec for pod infra."
            },
            "type": "string"
        },
        "kubernetesReschedulerCPULimit": {
            "defaultValue": "10m",
            "metadata": {
                "description": "Rescheduler CPU Limit."
            },
            "type": "string"
        },
        "kubernetesReschedulerCPURequests": {
            "defaultValue": "10m",
            "metadata": {
                "description": "Rescheduler CPU Requests."
            },
            "type": "string"
        },
        "kubernetesReschedulerMemoryLimit": {
            "defaultValue": "100Mi",
            "metadata": {
                "description": "Rescheduler Memory Limit."
            },
            "type": "string"
        },
        "kubernetesReschedulerMemoryRequests": {
            "defaultValue": "100Mi",
            "metadata": {
                "description": "Rescheduler Memory Requests."
            },
            "type": "string"
        },
        "kubernetesReschedulerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/rescheduler:v0.3.1",
            "metadata": {
                "description": "The container spec for rescheduler."
            },
            "type": "string"
        },
        "kubernetesTillerCPULimit": {
            "defaultValue": "50m",
            "metadata": {
                "description": "Helm Tiller CPU Limit."
            },
            "type": "string"
        },
        "kubernetesTillerCPURequests": {
            "defaultValue": "50m",
            "metadata": {
                "description": "Helm Tiller CPU Requests."
            },
            "type": "string"
        },
        "kubernetesTillerMaxHistory": {
            "defaultValue": "0",
            "metadata": {
                "description": "Helm Tiller Max History to Store. '0' for no limit."
            },
            "type": "string"
        },
        "kubernetesTillerMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Helm Tiller Memory Limit."
            },
            "type": "string"
        },
        "kubernetesTillerMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Helm Tiller Memory Requests."
            },
            "type": "string"
        },
        "kubernetesTillerSpec": {
            "defaultValue": "gcrio.azureedge.net/kubernetes-helm/tiller:v2.8.1",
            "metadata": {
                "description": "The container spec for Helm Tiller."
            },
            "type": "string"
        },
        "linuxAdminUsername": {
            "metadata": {
                "description": "User name for the Linux Virtual Machines (SSH or Password)."
            },
            "type": "string",
            "defaultValue": "azureuser"
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Sets the location for all resources in the cluster"
            },
            "type": "string"
        },
        "masterEndpointDNSNamePrefix": {
            "metadata": {
                "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
            },
            "type": "string",
            "defaultValue": "tddevelopment"
        },
        "masterOffset": {
            "allowedValues": [
                0,
                1,
                2,
                3,
                4
            ],
            "defaultValue": 0,
            "metadata": {
                "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
            },
            "type": "int"
        },
        "masterVMSize": {
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A10",
                "Standard_A11",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_A9",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D11_v2_Promo",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS11_v2_Promo",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS12_v2_Promo",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS13_v2_Promo",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS14_v2_Promo",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS3_v2_Promo",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2",
                "Standard_DS5_v2_Promo",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
            "type": "string",
            "defaultValue": "Standard_D2_v2"
        },
        "masterVnetSubnetID": {
            "metadata": {
                "description": "Sets the vnet subnet of the master."
            },
            "type": "string",
            "defaultValue": "/subscriptions/e39b9baa-50b5-4665-8297-2fa801ed1fa4/resourceGroups/td-poc-vnet-devlabs-rsg/providers/Microsoft.Network/virtualNetworks/td-poc-vnet-devlabs/subnets/Master"
        },
        "maxPods": {
            "defaultValue": 30,
            "metadata": {
                "description": "This param has been deprecated."
            },
            "type": "int"
        },
        "nameSuffix": {
            "defaultValue": "ffd256a",
            "metadata": {
                "description": "A string hash of the master DNS name to uniquely identify the cluster."
            },
            "type": "string"
        },
        "networkPolicy": {
            "allowedValues": [
                "none",
                "azure",
                "calico",
                "cilium"
            ],
            "defaultValue": "azure",
            "metadata": {
                "description": "The network policy enforcement to use (none|azure|calico|cilium)"
            },
            "type": "string"
        },
        "orchestratorName": {
            "defaultValue": "k8s",
            "maxLength": 3,
            "metadata": {
                "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
            },
            "minLength": 3,
            "type": "string"
        },
        "osImageName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
            },
            "type": "string"
        },
        "osImageOffer": {
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Linux OS image type."
            },
            "type": "string"
        },
        "osImagePublisher": {
            "defaultValue": "Canonical",
            "metadata": {
                "description": "OS image publisher."
            },
            "type": "string"
        },
        "osImageResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
            },
            "type": "string"
        },
        "osImageSKU": {
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "OS image SKU."
            },
            "type": "string"
        },
        "osImageVersion": {
            "defaultValue": "16.04.201804050",
            "metadata": {
                "description": "OS image version."
            },
            "type": "string"
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring",
            "defaultValue": "2ddba07b-95b9-4d45-b224-f03afd5eefbd"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring",
            "defaultValue": "tdadmin2018"
        },
        "sshRSAPublicKey": {
            "metadata": {
                "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
            },
            "type": "string",
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8ujxcfRR4df4clP8up2LSQIB0w8CaQVLEFsiSnhgfXtLTR+QbrXhVpMvayhXpCCTJfqOSF0pGGEd+aEO1febNhq9eC0U/uL6VcD1h6AFRrnAeVe/T95AuFqbRJ8PVqegzLdan0kY/IbCbSt1tilBFFNKqxSADFufhrOj1Tt5qP/me/X6QFyypQeQXeNPIuDdCiQPppaKC7ZbmBUQDqbCsm2zINt1L1PE0LhoDLJuAE6EDwDLxnhEXBijumQzVSWpXvy2nqGrOjtaPZW6A1WH6dGEBjtj3HgWMQwuihwbq7nBILDAeOlJkUWD6SVyEz314K4KIHLu0otBlM4H1W8vR jvarughese@architech.ca"
        },
        "targetEnvironment": {
            "defaultValue": "AzurePublicCloud",
            "metadata": {
                "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
            },
            "type": "string"
        },
        "vnetCidr": {
            "defaultValue": "",
            "metadata": {
                "description": "Cluster vnet cidr"
            },
            "type": "string"
        },
        "vnetCniLinuxPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-v1.0.2.tgz",
            "type": "string"
        },
        "vnetCniWindowsPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-v1.0.2.zip",
            "type": "string"
        }
    },
    "variables": {
        "agentpri2AccountName": "[concat(variables('storageAccountBaseName'), 'agnt1')]",
        "agentpri2AvailabilitySet": "[concat('agentpri2-availabilitySet-', variables('nameSuffix'))]",
        "agentpri2Count": "[parameters('agentpri2Count')]",
        "agentpri2Index": 1,
        "agentpri2Offset": "[parameters('agentpri2Offset')]",
        "agentpri2StorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpri2Index'))]",
        "agentpri2StorageAccountsCount": "[add(div(variables('agentpri2Count'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpri2Count'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpri2Count'), variables('maxVMsPerStorageAccount')),1)))]",
        "agentpri2SubnetName": "[parameters('agentpri2VnetSubnetID')]",
        "agentpri2VMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri2-', variables('nameSuffix'), '-')]",
        "agentpri2VMSize": "[parameters('agentpri2VMSize')]",
        "agentpri2VnetParts": "[split(parameters('agentpri2VnetSubnetID'),'/subnets/')]",
        "agentpri2VnetSubnetID": "[parameters('agentpri2VnetSubnetID')]",
        "agentpri2osImageName": "[parameters('agentpri2osImageName')]",
        "agentpri2osImageOffer": "[parameters('agentpri2osImageOffer')]",
        "agentpri2osImagePublisher": "[parameters('agentpri2osImagePublisher')]",
        "agentpri2osImageResourceGroup": "[parameters('agentpri2osImageResourceGroup')]",
        "agentpri2osImageSKU": "[parameters('agentpri2osImageSKU')]",
        "agentpri2osImageVersion": "[parameters('agentpri2osImageVersion')]",
        "agentpriAccountName": "[concat(variables('storageAccountBaseName'), 'agnt0')]",
        "agentpriAvailabilitySet": "[concat('agentpri-availabilitySet-', variables('nameSuffix'))]",
        "agentpriCount": "[parameters('agentpriCount')]",
        "agentpriIndex": 0,
        "agentpriOffset": "[parameters('agentpriOffset')]",
        "agentpriStorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpriIndex'))]",
        "agentpriStorageAccountsCount": "[add(div(variables('agentpriCount'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpriCount'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpriCount'), variables('maxVMsPerStorageAccount')),1)))]",
        "agentpriSubnetName": "[parameters('agentpriVnetSubnetID')]",
        "agentpriVMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri-', variables('nameSuffix'), '-')]",
        "agentpriVMSize": "[parameters('agentpriVMSize')]",
        "agentpriVnetParts": "[split(parameters('agentpriVnetSubnetID'),'/subnets/')]",
        "agentpriVnetSubnetID": "[parameters('agentpriVnetSubnetID')]",
        "agentpriosImageName": "[parameters('agentpriosImageName')]",
        "agentpriosImageOffer": "[parameters('agentpriosImageOffer')]",
        "agentpriosImagePublisher": "[parameters('agentpriosImagePublisher')]",
        "agentpriosImageResourceGroup": "[parameters('agentpriosImageResourceGroup')]",
        "agentpriosImageSKU": "[parameters('agentpriosImageSKU')]",
        "agentpriosImageVersion": "[parameters('agentpriosImageVersion')]",
        "allocateNodeCidrs": false,
        "apiServerCertificate": "[parameters('apiServerCertificate')]",
        "apiServerPrivateKey": "[parameters('apiServerPrivateKey')]",
        "apiVersionDefault": "2016-03-30",
        "apiVersionLinkDefault": "2015-01-01",
        "apiVersionStorage": "2015-06-15",
        "apiVersionStorageManagedDisks": "2016-04-30-preview",
        "caCertificate": "[parameters('caCertificate')]",
        "caPrivateKey": "[parameters('caPrivateKey')]",
        "clientCertificate": "[parameters('clientCertificate')]",
        "clientPrivateKey": "[parameters('clientPrivateKey')]",
        "cloudProviderBackoff": "[parameters('cloudProviderBackoff')]",
        "cloudProviderBackoffDuration": "[parameters('cloudProviderBackoffDuration')]",
        "cloudProviderBackoffExponent": "[parameters('cloudProviderBackoffExponent')]",
        "cloudProviderBackoffJitter": "[parameters('cloudProviderBackoffJitter')]",
        "cloudProviderBackoffRetries": "[parameters('cloudProviderBackoffRetries')]",
        "cloudProviderRatelimit": "[parameters('cloudProviderRatelimit')]",
        "cloudProviderRatelimitBucket": "[parameters('cloudProviderRatelimitBucket')]",
        "cloudProviderRatelimitQPS": "[parameters('cloudProviderRatelimitQPS')]",
        "cniPluginsURL": "[parameters('cniPluginsURL')]",
        "containerRuntime": "[parameters('containerRuntime')]",
        "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "dataStorageAccountPrefixSeed": 97,
        "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
        "dockerEngineDownloadRepo": "[parameters('dockerEngineDownloadRepo')]",
        "dockerEngineVersion": "[parameters('dockerEngineVersion')]",
        "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
        "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
        "etcdClientCertificate": "[parameters('etcdClientCertificate')]",
        "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
        "etcdClientPrivateKey": "[parameters('etcdClientPrivateKey')]",
        "etcdDiskSizeGB": "[parameters('etcdDiskSizeGB')]",
        "etcdDownloadURLBase": "[parameters('etcdDownloadURLBase')]",
        "etcdPeerCertFilepath": [
            "/etc/kubernetes/certs/etcdpeer0.crt",
            "/etc/kubernetes/certs/etcdpeer1.crt",
            "/etc/kubernetes/certs/etcdpeer2.crt",
            "/etc/kubernetes/certs/etcdpeer3.crt",
            "/etc/kubernetes/certs/etcdpeer4.crt"
        ],
        "etcdPeerCertificates": [
            "[parameters('etcdPeerCertificate0')]"
        ],
        "etcdPeerKeyFilepath": [
            "/etc/kubernetes/certs/etcdpeer0.key",
            "/etc/kubernetes/certs/etcdpeer1.key",
            "/etc/kubernetes/certs/etcdpeer2.key",
            "/etc/kubernetes/certs/etcdpeer3.key",
            "/etc/kubernetes/certs/etcdpeer4.key"
        ],
        "etcdPeerPrivateKeys": [
            "[parameters('etcdPeerPrivateKey0')]"
        ],
        "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
        "etcdServerCertificate": "[parameters('etcdServerCertificate')]",
        "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
        "etcdServerPrivateKey": "[parameters('etcdServerPrivateKey')]",
        "etcdVersion": "[parameters('etcdVersion')]",
        "fqdnEndpointSuffix": "[parameters('fqdnEndpointSuffix')]",
        "gcHighThreshold": "[parameters('gcHighThreshold')]",
        "gcLowThreshold": "[parameters('gcLowThreshold')]",
        "generateProxyCertsScript": "H4sIAAAAAAAA/5RW/2+jxhP9nb9izrbOiXQEcC7ffPLnI4tQXZQ0STGVGrUVWsPYbA27ZHedxL3L/14tNgQc4179k5md9+btm2FE94M1pcyaEpkYhuRLESFYPFcW+Xsp0Io4U4QyFNLKBX+iknIWrtOONOLev/vtIXTH4bX3MOr0vtWfhyNLZbnGvazMKKXIlBmRowWuXjsl0A9qKD9ogURCvUFurrzbYKteFdtB0Cy4znQn/ju0O/F3oSMp3qEbqqvYTnSh3Avcy9D3fvnVmwRfvfGl51ewsWbadz4crRkjFEpaAh+XKFWCJEbx5pA5oymWhTa6vLXKrVCTrmk0CrWDaON0M7KHZoGrkuX6fBJWE+H6QfjT1Y13Pw6+asLWw+HIQhVZi+UUBUOF0mpUKcfhDX/tPbQw10/20m6GpKapXe2PSt3oNPAl50KBNtANbkLv9vL+7uo2mJSuNoLDUaJULoeW5QzOjuwj+8gZDo7PLl472zzuuJBRZ9mE2lRV1m0xlS7VqcpYGxeqKG68X9vqvI1NDX1l8AdYG0r98e1lQdY7yBYKs/zQMLowR4aCKATBuQJ3bPAcmZSpPhCSgMmXCnr1lQQD+/N5lSbwEUyGz2C+nNgXYMZkJcE5H5yCHuItZIPMD8CUy+lf0Lfc21HRbbeQ7Y77dWGaXN9sr7JqebWpq4t5S97B4U78ui4ynwucE8WFdTeSK6kwG2ZEKhSyX5VZX70oVtz/7NgGk7JdzO64YYA73uGSRBVKFJSkYA92avQDw3gWVGFY9DxUPIypXBwcwjcDAKCYAaWtUtDbtxnhf9BrXSItVNVaaILre2IvUk/wVt3tol3wMeNPCM8JVShzEiHkJI4pmwNRMMU5ZUw/8Bk4UkFKGRZAiTGYFPqOtP6QltXfc7s2AXvvFCUZj+HUtluzXnd2JnymKgkFKrGqmjTjAihQBg4M4Bg+wwmcwhmcwwU4NjgOOIMvEPMiV/920FZnv0Pv/2DiI9gAf8LHjzAVSBbw/TvIFDGHkyIz5gy1wC5MUx4tYMkUTYGkadEroBIEknhlFDqjLA7pLJwRmi4FgmPbcKKFlW2N0qV+DcwESaoSows/kwWuiRa4kp+g7BekSIp/tWZOMSJLuUl/5qyvgEQR5goIPJEUVFK2WYK2Dgj0zT4cJKs8QXb4waCzSki2+JcZ70DvICIKah9Jr4edL6ASZI1JrZjeRvwdtloer4edfeBiylvQawHrga21Z//cGF24mmnNRcV1wYhnGWEx6CZh/GltW4aEySJR7xaSFj0FfKFSSQNTif+18Iwa/wQAAP//gHPm/+MKAAA=",
        "generatorCode": "[parameters('generatorCode')]",
        "kubeClusterCidr": "[parameters('kubeClusterCidr')]",
        "kubeConfigCertificate": "[parameters('kubeConfigCertificate')]",
        "kubeConfigPrivateKey": "[parameters('kubeConfigPrivateKey')]",
        "kubeDNSServiceIP": "[parameters('kubeDNSServiceIP')]",
        "kubeServiceCidr": "[parameters('kubeServiceCidr')]",
        "kubeconfigServer": "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', variables('fqdnEndpointSuffix'))]",
        "kubernetesACIConnectorCPULimit": "[parameters('kubernetesACIConnectorCPULimit')]",
        "kubernetesACIConnectorCPURequests": "[parameters('kubernetesACIConnectorCPURequests')]",
        "kubernetesACIConnectorClientId": "[parameters('kubernetesACIConnectorClientId')]",
        "kubernetesACIConnectorClientKey": "[parameters('kubernetesACIConnectorClientKey')]",
        "kubernetesACIConnectorMemoryLimit": "[parameters('kubernetesACIConnectorMemoryLimit')]",
        "kubernetesACIConnectorMemoryRequests": "[parameters('kubernetesACIConnectorMemoryRequests')]",
        "kubernetesACIConnectorNodeName": "[parameters('kubernetesACIConnectorNodeName')]",
        "kubernetesACIConnectorOS": "[parameters('kubernetesACIConnectorOS')]",
        "kubernetesACIConnectorRegion": "[parameters('kubernetesACIConnectorRegion')]",
        "kubernetesACIConnectorResourceGroup": "[parameters('kubernetesACIConnectorResourceGroup')]",
        "kubernetesACIConnectorSpec": "[parameters('kubernetesACIConnectorSpec')]",
        "kubernetesACIConnectorSubscriptionId": "[parameters('kubernetesACIConnectorSubscriptionId')]",
        "kubernetesACIConnectorTaint": "[parameters('kubernetesACIConnectorTaint')]",
        "kubernetesACIConnectorTenantId": "[parameters('kubernetesACIConnectorTenantId')]",
        "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
        "kubernetesAddonManagerSpec": "[parameters('kubernetesAddonManagerSpec')]",
        "kubernetesAddonResizerSpec": "[parameters('kubernetesAddonResizerSpec')]",
        "kubernetesCcmImageSpec": "[parameters('kubernetesCcmImageSpec')]",
        "kubernetesDNSMasqSpec": "[parameters('kubernetesDNSMasqSpec')]",
        "kubernetesDashboardCPULimit": "[parameters('kubernetesDashboardCPULimit')]",
        "kubernetesDashboardCPURequests": "[parameters('kubernetesDashboardCPURequests')]",
        "kubernetesDashboardMemoryLimit": "[parameters('kubernetesDashboardMemoryLimit')]",
        "kubernetesDashboardMemoryRequests": "[parameters('kubernetesDashboardMemoryRequests')]",
        "kubernetesDashboardSpec": "[parameters('kubernetesDashboardSpec')]",
        "kubernetesExecHealthzSpec": "[parameters('kubernetesExecHealthzSpec')]",
        "kubernetesHeapsterSpec": "[parameters('kubernetesHeapsterSpec')]",
        "kubernetesHyperkubeSpec": "[parameters('kubernetesHyperkubeSpec')]",
        "kubernetesKubeDNSSpec": "[parameters('kubernetesKubeDNSSpec')]",
        "kubernetesKubeletClusterDomain": "[parameters('kubernetesKubeletClusterDomain')]",
        "kubernetesMetricsServerSpec": "[parameters('kubernetesMetricsServerSpec')]",
        "kubernetesNonMasqueradeCidr": "[parameters('kubernetesNonMasqueradeCidr')]",
        "kubernetesPodInfraContainerSpec": "[parameters('kubernetesPodInfraContainerSpec')]",
        "kubernetesReschedulerCPULimit": "[parameters('kubernetesReschedulerCPULimit')]",
        "kubernetesReschedulerCPURequests": "[parameters('kubernetesReschedulerCPURequests')]",
        "kubernetesReschedulerMemoryLimit": "[parameters('kubernetesReschedulerMemoryLimit')]",
        "kubernetesReschedulerMemoryRequests": "[parameters('kubernetesReschedulerMemoryRequests')]",
        "kubernetesReschedulerSpec": "[parameters('kubernetesReschedulerSpec')]",
        "kubernetesTillerCPULimit": "[parameters('kubernetesTillerCPULimit')]",
        "kubernetesTillerCPURequests": "[parameters('kubernetesTillerCPURequests')]",
        "kubernetesTillerMaxHistory": "[parameters('kubernetesTillerMaxHistory')]",
        "kubernetesTillerMemoryLimit": "[parameters('kubernetesTillerMemoryLimit')]",
        "kubernetesTillerMemoryRequests": "[parameters('kubernetesTillerMemoryRequests')]",
        "kubernetesTillerSpec": "[parameters('kubernetesTillerSpec')]",
        "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
        "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
        "locations": [
            "[resourceGroup().location]",
            "[parameters('location')]"
        ],
        "masterAvailabilitySet": "[concat('master-availabilityset-', variables('nameSuffix'))]",
        "masterCount": 1,
        "masterEtcdClientPort": 2379,
        "masterEtcdClientURLs": [
            "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
        ],
        "masterEtcdClusterStates": [
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
        ],
        "masterEtcdPeerURLs": [
            "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
        ],
        "masterEtcdServerPort": 2380,
        "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
        "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
        "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
        "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
        "masterFqdnPrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
        "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
        "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
        "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
        "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
        "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
        "masterOffset": "[parameters('masterOffset')]",
        "masterPrivateIp": "[parameters('firstConsecutiveStaticIP')]",
        "masterPrivateIpAddrs": [
            "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
        ],
        "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', variables('nameSuffix'))]",
        "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
        "masterVMNames": [
            "[concat(variables('masterVMNamePrefix'), '0')]",
            "[concat(variables('masterVMNamePrefix'), '1')]",
            "[concat(variables('masterVMNamePrefix'), '2')]",
            "[concat(variables('masterVMNamePrefix'), '3')]",
            "[concat(variables('masterVMNamePrefix'), '4')]"
        ],
        "masterVMSize": "[parameters('masterVMSize')]",
        "maxPods": "[parameters('maxPods')]",
        "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
        "maxVMsPerPool": 100,
        "maxVMsPerStorageAccount": 20,
        "mountetcdScript": "H4sIAAAAAAAA/3RSUW8TPRB896+YL8nb14uTgioVKUWVACmCNhWEJ4Qqn713Z+LYx3ndpgX+O/IlTQ8J7uXkHe/M7HjH/8nSelmq2IgxrkLybH0NG2GCJzTUEayPTMogVCDWBiVplSLlc5lqNMxtfCVlmeo4dSp53bTKTD2x1C4kU1hvWf5fplrOz85PZ+cvxBgrrwncUM9gIyq7I3OCjlqnnhBy4R73lpv+2HMhc0E3ytcUn27n6tFFbblJ5VSHrbx8TB1JpWNBvraeZJuck2dn86mIxCh24s3y0/uFNHQno9Hi5vLjerlerq4Xkx8Z+TUXV6vP1+ub1fJ6vZB3qpPOljJnYGzciGToTpktIjE7EtuNsR2KFpPnLrHNieIn6o7+BGyFL5i8RkHfMcNXwQ15AQCkm4BRFsi5KNeRMg/oeciM9ld2ljETlRVjVNY5ZE+yiqxK0QuNnmaaj4bYUdPT3zQnxwCw/wZ+DxWVOOS/oUolx/HEh0pZd0Bnh//pCBcXQ+HeqW5Ib2ArtKpjyzb4PEjkKFzEs/a/XY4HnSZQhA+8p+hhGfMmx7qPrig83WOOSX7IAbzdVHFKO345UETxoV/s233nOxRv4dTjw61lVTq6zTu3mJ/0pW8hdV65Qy0Ptn/hQVS/AwAA//8o5bmvUwMAAA==",
        "nameSuffix": "[parameters('nameSuffix')]",
        "networkPolicy": "[parameters('networkPolicy')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
        "orchestratorName": "[parameters('orchestratorName')]",
        "orchestratorNameVersionTag": "Kubernetes:1.9.7",
        "osImageName": "[parameters('osImageName')]",
        "osImageOffer": "[parameters('osImageOffer')]",
        "osImagePublisher": "[parameters('osImagePublisher')]",
        "osImageResourceGroup": "[parameters('osImageResourceGroup')]",
        "osImageSKU": "[parameters('osImageSKU')]",
        "osImageVersion": "[parameters('osImageVersion')]",
        "primaryAvailabilitySetName": "[concat('agentpri-availabilitySet-',variables('nameSuffix'))]",
        "provisionScript": "H4sIAAAAAAAA/9x87X/iNvL46/ivmDp89uG6xpDsQ5see8cS75YmgRRI7nrdHhW2AB1GciU5Cc3mf/99JPkJsAlp++L3+d6L3saaGc2MRjOj0YjDr9wJoe4EibllHcJoTgQIn5NIAo+pAEYB32C+grN4gjnFEgu4vrAOwbsjEnwWYAEcRxwLTCXIOYYpC0N2S+jsxDqEL4BTOKDxcoI5fIElRpTQGXzRAEcN+AIjssQslnCLiFRDU8YhYP4CcyBUSBSGIBlMCSVinuAdwxcYYn5DfAw+i8MAKJMwwYApmoQ4gMkKxEpIvPRlmOC8rsIREnFZjvOmgj0/ZHHgEEq0pvxloDj02TIKscQJ7tsKXARTEqZATaUAT/oBBEgiCAjXXE1ZTIMUpFlBCCs0yZQIyPexEGSS0T2uUuziGwF+GAuJeYI7xyiU89UXyxJYgnNnCRZzH4PLIumi32OOXZ9RiQjFXLgRZzdEEEbHBqyubKc/bNVe+EiCi6Xv/s3hOMRIYPgCM44j+G/3tAVfQHJwAnjePW3Zz+ELoNsFPL+POFG2w+IowvxFrfHy4flL6+rDVW90Ne4Px732hdeyzd+2NfjeO8+/qr9sq9MfeP1h/tX8bVtnVx+8zui85caCuyHzUaiNfRFPsC9D67TfOfMGZlR9NwZndPD1neWNOqfjS88bjDveYNSqvcD+nEHtfv1792O30x55wwf4An4swQme//wcnCkc5R9+0R+a+YdX+kPtxYva/UV7OPIG427v1Pv3w9fNly9fFiY+834qm/dy0L1ujzw1/FfOm6y9Rabw889Q6w+h1YLaunLhl1++U9ucWgAAmjO7M0d0powrwFMUhxISBcOEUFBql4RRWyNkK6IMK12HKbEsTEXM8SCmHbZcIhp0ko0UvHhp3RfmKtpxvu2MYzBTKIjxlPGx3mLfNhrQrLBjg19P96zGVrLDV0pLe+FAURs5l0/2F3ZOQPnLN/rPKbEeUs2catvsGl+4j3KqvGeZko7f7tCSIZTQeZqyylGfoLPdQmTqOmoU9aWo/RogiX999eucCUnREv/6yrh4E9rev9f8Lo2pa/5vEFdr63I8YUw6HP8WE46DNV4H3od+fzTwfrzqDrzTluQxtnAocNngFKkBZdlmN30Fzu9gZ9uu1z/1HuyyzYTvsB9rBSyR9tBUxc7M5QKLMNcbStiWRosF5igIwLkCW4UDO/u6ZAE4Edi1F3OMAnB8OD4CN8A3bswRDdgSvsAECfz29Uu7iBshIW4DcOLiRxKkf+XMlmh5gmeEfsJSSaBiWgdzKTJ9K8z2ZXfoDa7X3dj4sj36vmXr2LHIMg3XV9guiojA/Abz+gKvDDeSxf5c6bOa2oOB9OdKDQ1l4fuBs1sKnDF5ov7zKI5G6rT3lsVHJUKU4Jdyvwtui+1yYA2tI8kTF0GtfeUq7CJYKsleCEokNe2JznIex8pl65x3vd7oSbL5IcFUVslWQbBatscQtpbrEaxcts0M4FHJIoz5RryvErOUdrWQu8HLl68KZ8swC8nVvobpc7nDMDcJbsj1+vXeCOWLV421ZZhPkS0xzArZKghWy/YYwk7D3CnbZkr8hwyzQsxS2tVC7gYvF7EKRyMlR4I8TFeEhQc7i6ngOAHWB9/3e0WelO66364mWB0MUkoV7rKa5B5eeY32trt6hPZur7hGOz3/PEJxlwsq00NhgffTQ4UVlelhf9q7N+G2HhTgPoqoIJge7HYlbpgGO9O25SIgXKWTpak+PHuW7Njyk4De9HWOUbDKU2Yjp1iQKNon330Fck4EEAGIApphKjWsrbNsdbA89/YP+cVwn7maKiIPtrUe/XYCbrmXHdBWwS1cfTjvdp6QDGtXWZYIrxMqMG885G7IXenvFrjV/s/VwBv/MOz3KpjWllD/n2C0yOs61pZ6y8a3+doCSgs36f4p0Xv1JtqxSCUeP9PEXg5/W81Iwt//Dl7/YwK7JYs51tu6aGCf2LX7UXvwyRuNvd51d9DvXXi90YP9ygBJTBGV3cA+UbRGXq/dG427p9m4iCfm3EsYTaGGVx+GnUH3ctTt94qwCAUdvTUyQG9w3e14Si+9TveyfZ46rzKkIfY5lo8gDr3OwMu559hUET9xFkcGdeAN+1eDjjf+NOhfXWaQWSlJA533O23FfVFMimUPLXEmYq8wj8B+zIlc6XlyqJ43+ld/cKa4uhp0Rz9tzHmzRvK6Oxhdtc/HCdIa1GBbjg3wcYVcnMUSj9AkxPlMg/7VyBuP2h/OvQwu4mSJ+Kp9g0iIJiQkcjUscnc56F60Bz+N29ft7nn7Q/dciTMsqEBb06VyrQHmH5C/YNOpfQK1+855/+r0ctC/7p56g/GHdues//Hjww6sAZacYFGNPB54o0HXG+4i4t1FjGIqd1Dx/n3Z7ylb30HmNOapWVSROb0aGFvZQeYHIiXmO4j80B2NvEEpiQGSOCRLUibKoD3yzrsX3XIZFOa5wvzxcrgLefzjZbkuMwIfYn+BdzIw/nDVOfMyPmKBLxBFMxx0A0wlkSvvTmIqUlVeDb3xRbvX/uSdjrunXm+kzMn798jrDQuqjAXWVUnq4wssUYAkyrC7veGo3et44wtv1D5tj9oPmSUb5q9RHBYM+OxiOM7Yvm5fnY90zbmwAQzaGV6lSItvRMnoNeaJGLZtPVhe/2N2s2FNY+orcwFTWP1IQhwhOX/xEu7TomZtvZi3Ua7kWMacphXH7WqqKabWmhsl0lrzCYXPWnOjxPm2OJ/1UBBDYHkWT3CIZT+SArQcBwIH4BCwxeF/08DWvxwNW/W/Ha79XbtvPhza5s4mqd7r6B1iuTaJz+iUzNoqmHd63UxXnV533On3PnY/jU+7g5Ym41PiUizrwXraWFuHLRzFnEEhsJeDqeTg3Zs3paPq04duzzCgkk/FwITQkukTMFOG1CFXfR19+s94dHHZcuUyMvnK2KekLme/W8ly85W/DMYzLMcS8QkKQ3irl3iLBtTur3veSH+6PL/61O0Nx1eD8wdzokUcnLvfp2V4Tmebw06/N2p3e94gCR/d3qdtfrMcm2J5y/iC0Nm+3D9CX/mR3WI8RmBDKKi7IWPRBPkLqLsR43KJop12UNSGMQJnkNtBcXR5s/bNbTYck3kqww2J2DIst0BUbdjN4S0CGt4VE0JdPJEqWAtwJFAkwXE0wPZ+UfuSYrm2Xf6Aqf7fNoQJJ8EMQ91Vh1FH39L+BUaxvRg9o5dLFhJ/VfT2P/9czAMv++fdjkrrW2BrC9i4pdHTrnlDc5YNd1KijGpCUEopsZPCJVbGe3L11Qkx4p3sPD2IqSRLbHz9IbSDADQE5CDAccQEkYyvYIFX1oEJNu0gUDHmEeh6vW5bB37MQ3DE8BwcR5sPvEn/5QQ4RCtoNrIPS3TnKJ7guAH2XMpInLhuwG5pyFBQZ5GKtgLXGZ+52VwEC3fOlvjEV+zk5QLzt5N/cI7du6tJTGU8br6tN167A9NdoM/v8AVQJJ0FXoG+B7MqVFKQcX9tGE1o6OcBnoCS7AmCuZuSuY+KBu5zeG8iMoqkaw4Voq5cTD1wfd/hZvH1Fy1rcitcIoaBTKVN4MolTohqcZU6Z1hCHAVIYnj2DNIv6U2s41DmJH84HPtsucQ0EOCs4LN1cJBzucagnOOkvSYAkbThIBqAYCp11T0xom4daB+g12Acc9LKrImj2/qMyHk8iQXWStWFcbbc1LIbcXa3co/rjfrR8Z8y5Np9ysaDUr2mW09YrxOqbE+lWs/F4T9DMsF32A8I/+ehaTgxHw6z5UxET/5/i95fz6dW6yabSrlCIokNpzeI78GhpqTX0tPdVWbZJOJy25Q0CmRCGdvTaMryMsRSM1zDNcaY9WOZmds0GOp5U+Ysle2upcA2OPkGSw2xxfGSSazUZz7oO34spFYii2Wr+WZZhuhgGkSMUNmKKbk7cV3dJ5CBBYV/aj3Zpf47gzE+uzPQ2YaJmqfja2+gzlQtu1lv1hsO9+sNO90HBbDT/r965/32qYrB+bYQknE0w/UZY7MQo4gIsyc4yYUJ0n6szc+1+3JWHuohofGdg5bB29d1iXh99nt6250Dl2cgQQL/SN5h17Yp2etfiwLb1kGWcZSjOh1wrQO+VKetUggrtcZhrJvlpnEYrtIlwgGs6yYxPyzjKF++7zbPXsVBs7ZJU5SO7DFXZl5C1zrI8j1TM83H7S3zMHlpaxPQNdlDXbJlmAYpW8QTjlGEObRAN6HYusRYSjFDYmw5Fj7jGFrQsOH94xg/R2E8I1TUfU7qBdliKnksJA7GKtlSIXKc7KNf9qKbAI/lKlLMPCesSD2NUjdNY57Pn0QT0xmhmmrW8pcHqv1IVYmdnJ3/v5XVND/q0wuPqf8IrYetKsmmjafJboY8Hlz1Rt0Lz4ZWC+zNJKeQQx8cHMIFWmBQZOEWg48oUCwk3BAuYxSS33U1zzpQk+jeUec3uFnegYrqvutHMaFTllErC0nr+y0PRetzp7dJAaMY0FTfPWVnJ0gWGhDHuYdQJHbFs/KJjSM5qI5kGYZ1cDAl1sHGGaACLzvDZC6WTMdTREIlXFN52ONCM3OA8JJRFQYYMqWZfMx0TKclq/w7EU7aTJ2MJX+2av8whxXGgQChcN+s179tNB6+g4Blhxtd+6qlFByKobFVAtvFyPb4NkNZkWydMXMkS+4Z18tttSZIxhZQIyCwz1TWapqgy/rG7TUCyrMusi9JMU5zGGIcgeFImZNVKb45OW8XAWvNx5vYN0qCx8WSYAY05thsgqYuQzYbqab2shKVGMYCak2T4Udohjk4ocoPb5ByI7PkbrfWdAxsPWSzbbNRE+SLZDTxD3Dwb0/RQdKUvyH267JjcrFJNtsXVfst6fN+2EQ/uxjuwO3Msb+AxVLo8UNgNFwl/oZMAYHpHFUORbGfNpCm8n/1SFE51166fulMpZIm6e6jopbVcvGd5MiX368izNX4i5e73IiykLeNtBM3isMQat//dOkNzq4+eCov2zn/PJ3ESWYtkeUHFnOKwpSNKlLJ2cT5nwEPCi0EQ5MBtyLMBRHqVKjj29qRJkXTBb0irh6/QHdXArean/ZHTGowfwDzI+O3iAcjNlyJkM1alD2GW2IA34g/c2Ox+EZ8b958tMwWpSzAou1LcoOLXwYYBSlI6S1H0tC/HQ3ebkaDFBSO3useZKpMKXmG4qiQvuZqtcuwa//Q1bOGnTiN9H9bISRXbvFxCxHpy5ZXmz7f3kIvqKSxNbju+WFv758TfSwAbPCtfEjCe5KblPFu4kCjuLLGPC5ZMEzuu03Bs8SEPOkHmQ1h6QddMYgpJXSWLPju9TTFCsdHPubJq5+ybmefSwVVDbPe4wiOLuTt06cLTl4DeduA9DjcPHpXb9Qb9ebJ0fG7b92bI3eJ/DmhWHy3kZmsB6RSu1pXS6MkndAPt/Q5EEThVPmIwf2hTKLIy2PmpNlSRlR4FvaIHTWb1fFGkTtFEp2SPLwuWUxl+r5Lb2kR+M3sg84XyEQvWkDEIpdka1tX8U90XVKLe0vkPH8fh+TJ9gR2mb9bSwIN6S1EuEWi8OQOyVyaOoz4Ss0vWSIvCkMIsErrRT2fUUArebRTsnHW940Gj4OUnoPg2bOn6vK7P+srX7wACS2o3ZMH+BvU7sUDvHxZ4VG39aW5xYFZhpTZ1OJltYstrEuJ6efmXxPZx2wPTImuPhWsI7OGzeWrsg1j5Y0S895yl2ky8gdC62X/NG8mMndA44/dc2+7N26JKJliIYUbscBJ+5OcSHNQX6FlkvGnj5RqVaS3TlVZrPU5RhLvRC7b9LecSJ1jmipWtuU1WV0k0FeYc7bEbq19etHtXQ29gVtXwm0AatFra4hJ3Wrj1nMNxLgF3S9YW6dVuBvMZz7J/1lGaE/wAnndcNBolBPL7ow3UJODQUCEPsWGbKZfRRq3K3RrHLBYRrG56dvqKbccx7FQRJLulRO4aVpJSiBOLCdND04MG5hLMiU+kthBsZwzbTtqT5zAZ7vWaRebgT+nfcD8BvOTIuNJm7MFQNESa9SkIf/jj6e9z7alr1nupGHA/DthIOFmGwWS92ebQw4KloRqgKrJYs4xlU460TbEgtDgBIxZWmoSzVgZucJsmpmEaaLpF5SXqayglG3VJYgLvCpFOPN++mxbNrwvtadD4Ello8wmRGYNzp3ahX+itnYI3am+ZfPzS09zTFGxtAT1FgPFWD9FNZ5QYSs6PKbgm6e4CjV9uxnAeIKnjOOxQk1Ov/m1YnrJF+AI0wBTn2ChqJn3r+uT65BaKMZhjtPEF0EQLWYQMn9Rtw4qnwYnNc+SZnYFvMwBs0b2/D1m+rp5/Zn5mipz5m6RrsCanvOAYUGfS8gvSAMV6pXYSxIEIQY2zdIWmf+egnVQdsA+asAbeKPvV5eIL2DOwmBtPvM6ukJOr1D20KfkTNJdr4bXBitpl3RNrE9RAvDnbNdIs7MmvFdJuEqinb0U67IdHOwE3mOSrKZbRbhQ9J0StcrVLzPWK/BlC12gVklmo+yzQWZjdOez5WfPsgFTpPGoz1e6v/xfRM69O4k5ReHZUpS+ca6U8exiuM4VZAfas4vh4zpKqmJlCkqGHiGQlKLKCCRD+xE4ZRRv4Jf5r6e6r/3fkm8kcAVFpv2u66WbzTHz0xiFocIBcONrcZG+EU9wsSYyLokkM727dZSYxLPsJD+JZ6Ieopj68wgFdYqlG+tOGfdr0xXjajfpfj2JZ27z7bu3b4/f5FZ2FARNHzffOY1332LndePYdybHb44c1Pz2qInxUeMdxvAeXLES7iQW7s1S/Tfg5AZz4c5vxrEkoRvTCaHJfUnSU9s8Jp//8hk+06QLl/t10wNXWZPdDBkx3RE00qaf/JdpilUKW69V1QnnUJf8oAlLQmOJVcBOi9OUBfgVCAZyjszP/vixkGyZ/nYQTjvJtSsv/GiE6aRKauVpkfxVUjxXEVM//yI0m/W5BZD9RBE4PthiHstA9wZyaMIze2eExDTY/M2HP/eSLXuZlv8URiQAxXfT21u12DlSBulE+pYEnln/LwAA///VJYvXbkkAAA==",
        "provisionScriptParametersCommon": "[concat('TENANT_ID=',variables('tenantID'),' HYPERKUBE_URL=',variables('kubernetesHyperkubeSpec'),' APISERVER_PUBLIC_KEY=',variables('apiserverCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',variables('clientPrivateKey'),' TARGET_ENVIRONMENT=',variables('targetEnvironment'),' NETWORK_POLICY=',variables('networkPolicy'),' FQDNSuffix=',variables('fqdnEndpointSuffix'),' VNET_CNI_PLUGINS_URL=',variables('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',variables('cniPluginsURL'),' CLOUDPROVIDER_BACKOFF=',variables('cloudProviderBackoff'),' CLOUDPROVIDER_BACKOFF_RETRIES=',variables('cloudProviderBackoffRetries'),' CLOUDPROVIDER_BACKOFF_EXPONENT=',variables('cloudProviderBackoffExponent'),' CLOUDPROVIDER_BACKOFF_DURATION=',variables('cloudProviderBackoffDuration'),' CLOUDPROVIDER_BACKOFF_JITTER=',variables('cloudProviderBackoffJitter'),' CLOUDPROVIDER_RATELIMIT=',variables('cloudProviderRatelimit'),' CLOUDPROVIDER_RATELIMIT_QPS=',variables('cloudProviderRatelimitQPS'),' CLOUDPROVIDER_RATELIMIT_BUCKET=',variables('cloudProviderRatelimitBucket'),' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' CONTAINER_RUNTIME=',variables('containerRuntime'),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
        "provisionScriptParametersMaster": "[concat('MASTER_NODE=true APISERVER_PRIVATE_KEY=',variables('apiServerPrivateKey'),' CA_CERTIFICATE=',variables('caCertificate'),' CA_PRIVATE_KEY=',variables('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',variables('kubeConfigCertificate'),' KUBECONFIG_KEY=',variables('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',variables('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',variables('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',variables('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',variables('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ADMINUSER=',variables('username'))]",
        "provisionSource": "H4sIAAAAAAAA/8xTTXPTMBC951c8gibTMmMaF05oAr30xo0DhzTjUexVrEGWXGkNLU3+O2M7yaQhuOHW29qrfR+rp7dvrpbGXcVyNArE4TGviszoTCtjm0AXl3hC+99QnIlU4pcyPBPXEmwq8g3PxAeJWBrNmEyOCgntAwyMg7iIdI8UYot1KVH4HQbEvni62UjMIb4goXtMgUWLtgykfmC9RrRENUQrogVwJEF56XH7QHnDVOBuLG7uxhCmw44Sm1OuMuezyIrj67d3oH9FnLEKS2XtgO7+QKe7CXYmPr4sUwUk/FtDbIeHJA5tc4+LFOkUeRMsEh2/fYXoSn/AcNJq+5VpHzJt7ED02m6tuOxMvmDOaMyRaIjdEBYSXJLrLbVgJ8RgM1I1dxtv6kJxL+YvqnQ67VlUzcmKGP1hXH+epFhjFahG8oDx/Pvt4tP7d+PdYh396+7T07E+wj+Md3yMTFXONgsUWQU+J9OIP3OnKjorHscp3jOiUFR5lwSyXhXdu9i3tmIgtkzPu88G//dF/AkAAP//Ky0c8bIEAAA=",
        "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "registerWithTaints": "node-role.kubernetes.io/master=true:NoSchedule",
        "resourceGroup": "[resourceGroup().name]",
        "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
        "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
        "scope": "[resourceGroup().id]",
        "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
        "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
        "singleQuote": "'",
        "sshKeyPath": "[concat('/home/',variables('username'),'/.ssh/authorized_keys')]",
        "sshNatPorts": [
            22,
            2201,
            2202,
            2203,
            2204
        ],
        "sshPublicKeyData": "[parameters('sshRSAPublicKey')]",
        "storageAccountBaseName": "[uniqueString(concat(variables('masterFqdnPrefix'),variables('location')))]",
        "storageAccountPrefixes": [
            "0",
            "6",
            "c",
            "i",
            "o",
            "u",
            "1",
            "7",
            "d",
            "j",
            "p",
            "v",
            "2",
            "8",
            "e",
            "k",
            "q",
            "w",
            "3",
            "9",
            "f",
            "l",
            "r",
            "x",
            "4",
            "a",
            "g",
            "m",
            "s",
            "y",
            "5",
            "b",
            "h",
            "n",
            "t",
            "z"
        ],
        "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
        "subnetName": "[split(parameters('masterVnetSubnetID'), '/')[variables('subnetNameResourceSegmentIndex')]]",
        "subnetNameResourceSegmentIndex": 10,
        "subscriptionId": "[subscription().subscriptionId]",
        "targetEnvironment": "[parameters('targetEnvironment')]",
        "tenantId": "[subscription().tenantId]",
        "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
        "useInstanceMetadata": "true",
        "useManagedIdentityExtension": "false",
        "username": "[parameters('linuxAdminUsername')]",
        "virtualNetworkName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetNameResourceSegmentIndex')]]",
        "virtualNetworkResourceGroupName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetResourceGroupNameResourceSegmentIndex')]]",
        "vmSizesMap": {
            "Standard_A0": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A10": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A1_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A6": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A7": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A9": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_B1ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B1s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B2ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B2s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B4ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B8ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D15_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D16_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D1_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D32_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D3_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D3_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D5_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D5_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D64_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D64s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D8_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13-2_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13-4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14-4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14-8_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS15_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS1_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS5_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS5_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E16_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E2_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E2s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32-16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32-8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E4_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E4s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64-16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64-32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E64s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E8_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F16": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F16s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F16s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F1s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F2s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F2s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F32s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F4s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F4s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F64s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F72s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F8s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F8s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_G1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_GS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4-4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4-8": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5-16": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5-8": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_H16": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16m": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16mr": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16r": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H8m": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_L16s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L32s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L4s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L8s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128-32ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128-64ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64-16ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64-32ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC12s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC12s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC24r": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC24rs_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24rs_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC6": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC6s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC6s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND12s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND24rs": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND24s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND6s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NV12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NV24": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NV6": {
                "storageAccountType": "Standard_LRS"
            }
        },
        "vmsPerStorageAccount": 20,
        "vnetCidr": "[parameters('vnetCidr')]",
        "vnetCniLinuxPluginsURL": "[parameters('vnetCniLinuxPluginsURL')]",
        "vnetCniWindowsPluginsURL": "[parameters('vnetCniWindowsPluginsURL')]",
        "vnetNameResourceSegmentIndex": 8,
        "vnetResourceGroupNameResourceSegmentIndex": 4,
        "vnetSubnetID": "[parameters('masterVnetSubnetID')]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpriCount'), variables('agentpriOffset'))]",
                "name": "loop"
            },
            "dependsOn": [
                "[variables('nsgID')]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpriVMNamePrefix'), 'nic-', copyIndex(variables('agentpriOffset')))]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "primary": true,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig4",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig5",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig6",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig7",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig8",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig9",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig10",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig11",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig12",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig13",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig14",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig15",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig16",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig17",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig18",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig19",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig20",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig21",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig22",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig23",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig24",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig25",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig26",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig27",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig28",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig29",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig30",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig31",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersionStorage')]",
            "copy": {
                "count": "[variables('agentpriStorageAccountsCount')]",
                "name": "loop"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpriAccountName'))]",
            "properties": {
                "accountType": "[variables('vmSizesMap')[variables('agentpriVMSize')].storageAccountType]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('agentpriAvailabilitySet')]",
            "properties": {},
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpriCount'), variables('agentpriOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpriAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('agentpriVMNamePrefix'), 'nic-', copyIndex(variables('agentpriOffset')))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('agentpriAvailabilitySet'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpriAvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('agentpriVMSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpriVMNamePrefix'), 'nic-', copyIndex(variables('agentpriOffset'))))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[variables('username')]",
                    "computername": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=Accelerators=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.240.0.0/12 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=kubernetes.io/role=agent,agentpool=agentpri,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n\nruncmd:\n- echo `date`,`hostname`, startruncmd>>/opt/m\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent\n- echo `date`,`hostname`, preaptupdate>>/opt/m\n- apt_get_update\n- echo `date`,`hostname`, postaptupdate>>/opt/m\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates nfs-common iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- echo `date`,`hostname`, aptinstall>>/opt/m\n- systemctl enable rpcbind\n- systemctl enable rpc-statd\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpcbind\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpc-statd\n- echo `date`,`hostname`, predockerinstall>>/opt/m\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- echo `date`,`hostname`, postdockerinstall>>/opt/m\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n\n- echo `date`,`hostname`, PRE-APT-SYSTEMD-DAILY>>/opt/m\n- /usr/lib/apt/apt.systemd.daily\n- echo `date`,`hostname`, POST-APT-SYSTEMD-DAILY>>/opt/m\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- mkdir -p /opt/azure/containers && touch /opt/azure/containers/runcmd.complete\n- echo `date`,`hostname`, endruncmd>>/opt/m\n\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[parameters('sshRSAPublicKey')]",
                                    "path": "[variables('sshKeyPath')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[variables('agentpriosImageOffer')]",
                        "publisher": "[variables('agentpriosImagePublisher')]",
                        "sku": "[variables('agentpriosImageSKU')]",
                        "version": "[variables('agentpriosImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpriAccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')), '-osdisk.vhd')]"
                        }
                    }
                }
            },
            "tags": {
                "creationSource": "[concat(variables('generatorCode'), '-', variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]",
                "orchestrator": "[variables('orchestratorNameVersionTag')]",
                "poolName": "agentpri",
                "resourceNameSuffix": "[variables('nameSuffix')]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpriCount'), variables('agentpriOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')),'/cse', '-agent-', copyIndex(variables('agentpriOffset')))]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpri2Count'), variables('agentpri2Offset'))]",
                "name": "loop"
            },
            "dependsOn": [
                "[variables('nsgID')]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpri2VMNamePrefix'), 'nic-', copyIndex(variables('agentpri2Offset')))]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "primary": true,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig4",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig5",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig6",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig7",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig8",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig9",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig10",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig11",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig12",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig13",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig14",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig15",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig16",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig17",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig18",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig19",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig20",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig21",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig22",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig23",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig24",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig25",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig26",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig27",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig28",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig29",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig30",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig31",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpri2VnetSubnetID')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersionStorage')]",
            "copy": {
                "count": "[variables('agentpri2StorageAccountsCount')]",
                "name": "loop"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri2AccountName'))]",
            "properties": {
                "accountType": "[variables('vmSizesMap')[variables('agentpri2VMSize')].storageAccountType]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('agentpri2AvailabilitySet')]",
            "properties": {},
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpri2Count'), variables('agentpri2Offset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri2AccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('agentpri2VMNamePrefix'), 'nic-', copyIndex(variables('agentpri2Offset')))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('agentpri2AvailabilitySet'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpri2AvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('agentpri2VMSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpri2VMNamePrefix'), 'nic-', copyIndex(variables('agentpri2Offset'))))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[variables('username')]",
                    "computername": "[concat(variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')))]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=Accelerators=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.240.0.0/12 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=kubernetes.io/role=agent,agentpool=agentpri2,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n\nruncmd:\n- echo `date`,`hostname`, startruncmd>>/opt/m\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent\n- echo `date`,`hostname`, preaptupdate>>/opt/m\n- apt_get_update\n- echo `date`,`hostname`, postaptupdate>>/opt/m\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates nfs-common iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- echo `date`,`hostname`, aptinstall>>/opt/m\n- systemctl enable rpcbind\n- systemctl enable rpc-statd\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpcbind\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpc-statd\n- echo `date`,`hostname`, predockerinstall>>/opt/m\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- echo `date`,`hostname`, postdockerinstall>>/opt/m\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n\n- echo `date`,`hostname`, PRE-APT-SYSTEMD-DAILY>>/opt/m\n- /usr/lib/apt/apt.systemd.daily\n- echo `date`,`hostname`, POST-APT-SYSTEMD-DAILY>>/opt/m\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- mkdir -p /opt/azure/containers && touch /opt/azure/containers/runcmd.complete\n- echo `date`,`hostname`, endruncmd>>/opt/m\n\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[parameters('sshRSAPublicKey')]",
                                    "path": "[variables('sshKeyPath')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[variables('agentpri2osImageOffer')]",
                        "publisher": "[variables('agentpri2osImagePublisher')]",
                        "sku": "[variables('agentpri2osImageSKU')]",
                        "version": "[variables('agentpri2osImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "[concat(variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpri2Offset')),variables('maxVMsPerStorageAccount')),variables('agentpri2StorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpri2AccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')), '-osdisk.vhd')]"
                        }
                    }
                }
            },
            "tags": {
                "creationSource": "[concat(variables('generatorCode'), '-', variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')))]",
                "orchestrator": "[variables('orchestratorNameVersionTag')]",
                "poolName": "agentpri2",
                "resourceNameSuffix": "[variables('nameSuffix')]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpri2Count'), variables('agentpri2Offset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpri2VMNamePrefix'), copyIndex(variables('agentpri2Offset')),'/cse', '-agent-', copyIndex(variables('agentpri2Offset')))]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
            "location": "[variables('location')]",
            "name": "[variables('masterAvailabilitySet')]",
            "properties": {
                "managed": true,
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 3
            },
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('nsgName')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_ssh",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow SSH traffic to master",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22-22",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "allow_kube_tls",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow kube-apiserver (tls) traffic to master",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443-443",
                            "direction": "Inbound",
                            "priority": 100,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('masterPublicIPAddressName')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('masterFqdnPrefix')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('masterLbName')]",
            "properties": {
                "backendAddressPools": [
                    {
                        "name": "[variables('masterLbBackendPoolName')]"
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('masterLbIPConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRuleHTTPS",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                            },
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('masterLbIPConfigID')]"
                            },
                            "frontendPort": 443,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "Default",
                            "probe": {
                                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
                            },
                            "protocol": "tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpHTTPSProbe",
                        "properties": {
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2",
                            "port": 443,
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/loadBalancers"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "masterLbLoopNode"
            },
            "dependsOn": [
                "[variables('masterLbID')]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
            "properties": {
                "backendPort": 22,
                "enableFloatingIP": false,
                "frontendIPConfiguration": {
                    "id": "[variables('masterLbIPConfigID')]"
                },
                "frontendPort": "[variables('sshNatPorts')[copyIndex(variables('masterOffset'))]]",
                "protocol": "tcp"
            },
            "type": "Microsoft.Network/loadBalancers/inboundNatRules"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "nicLoopNode"
            },
            "dependsOn": [
                "[variables('nsgID')]",
                "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                                }
                            ],
                            "primary": true,
                            "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig4",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig5",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig6",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig7",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig8",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig9",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig10",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig11",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig12",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig13",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig14",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig15",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig16",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig17",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig18",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig19",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig20",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig21",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig22",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig23",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig24",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig25",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig26",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig27",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig28",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig29",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig30",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    },
                    {
                        "name": "ipconfig31",
                        "properties": {
                            "primary": false,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
                "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('masterVMSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[variables('username')]",
                    "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                    "customData": "[base64(concat('#cloud-config\n\n\npackages:\n - jq\n - traceroute\n\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n\n- path: \"/etc/kubernetes/generate-proxy-certs.sh\"\n  permissions: \"0744\"\n  encoding: \"gzip\"\n  owner: \"root\"\n  content: !!binary |\n    ',variables('generateProxyCertsScript'),'\n\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n\n\n\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SRQW+jMBCF7/wKy+dFaK/WKpe9tIe0kSL1EvUwmClYsceWPRDx7yunQJomKdzwe+/z+A0E84YxGU9KyOGvLI6GGiXkzjeycMjQAIMqhCBwqIQ89jWWSXfY9BajnIQUQF/UMTG6LFmo0aacFoINRiW0J47elsEC4flcexc8IbES1+wiBdQ52/nEL8gnH49KcOxzLnPAEMaJXj6eL3/GQZvVf1mOhIzpaQwY8+8+oN7MRu2dg1zAQVbd7JB/hLwg3ycrxDYpcfiG3M+e/54+TLuZnYO3vcOt74mnca9GRtblBSIXgxAuR3bAnRKyQtbVPdvCGSCW1tRnlkV+CBogVtbU1Y1vJrlk1rIngBaJqy0QtNg8N0hseCz3yGyovXpFRGheyY7L8r76+Lm5+zXk5Z8vX4Dhlz7WunhMu1vKbSHrgPVmPgMAAP//6fKK/HMDAAA=\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySsY6jMBCGe57Ccn0IXWud0qS5K3IXKdI10RaDmSVW7LFlD0S8/coJsJsNWZYO+OYb/t9AMP8xJuNJCdn/lMXZUKOE3PtGFg4ZGmBQhRAEDpWQ567GUnvi6K3FWDogaDHKkUgB9IylITG6/MpCjTZljRBsMCoxKspggfD6XHsXPCGxEk+WFCmgzpKTT/wX+eLjWQmOXRZkHAxhHNeU3/jifBkHbcZ+ZS4SMqbfQ8CYbw8B9WYCtXcOcjdHWZ0mQv4QcsH9Ms5AbJMSxw/u7QzvbuzW06tpN9NE723ncOc74jHIXRhkXb7L5AwI4fLIHvikhKyQdbWEzZ4eYmlNfXVZ5KeiHmJlTV09cJPJJbM2ewFokbi6BW7+NEhseCgPyGyovUsREZp/ZIf5WG99fD7T5Rryb3FdPgvDF32sdfHctljKYyHrgvVm3gIAAP//7hHuXJ8DAAA=\n\n- path: /etc/kubernetes/manifests/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7RVwY7jNgy95ysI51Cg2HiwtyK3aQsUBabbRbrTHoo5KBJjC1FIV6ST8d8Xkhw7mWSAHqY3JabI954eSdP5PzGKZ1qD6Z3Xev+D1J4fjp+3qOYzLOFb6wW8QMR/eh/R1Yu9J7eGrxy8HRZL+JnpO4UGCaNRLGkAj0gqsOMIJoR8GUUFPMGmnDdo0R/RgahpsF7wwesf6SjrBcAKqjdx1SL2oXxcwhM30LED2xpqUMDonFY6JkEIeMSQM+XT+m3AAgAgonAfbUmbYpvIfbeGqsq/U6nNGAJVx04qcIySCB+M2nYmpgyGBpB+e84JvEsY5dOU6tR62yYtLZN4USSFk9cWtEXY/Pj4E3RZ1Hq8MaODv0v1l8VEP//xELipPo1nUaO9VEmM31CNM2puVTh/+W/0bxDcKziCKj4I3MDpWprtkAlWMojiYb3vt7jqIr8OFTABkuvYJ7NwBMF49BblEvEXpvJYvWDMQG4TveSAI8ZtDsgAxj/f5whLsBwRHr/+Wv68R3qCl1if4d1SNr22SOqtUXRXrrAY1XgCYlpN1njePEFntJX6Xaa/JESXdK9KjOSI6ezP583TRLF6MJ3/PhH8ywdnTXTFrp6aego5lsavZkulVxqhw5bdkBxsmXa+OZhu6jVPkJUvsOo7LfYRuk91ZaQ6TqI0BIApDGC6LnjMGk83E7jstQuEFZA5oHTGYj1lQsBDpwOIRk9NAmUNwRaT9C6lFAxoNb/adN3NhUqm6UuGfFnzolHvyipoI+pZ0/9LxFLlamykaczaYrwWLecy5ABfFSn5Ig/VPJhG6BnehyGdA+aKKXRcR0mjHADSch8cfPn9W3oeTzb0Lm2hzOgRbPL1Ku+Y5Azl0o4XLMdWHNlcT8b63dGY1KJmFXuiZJApTfB7LAMuWa81CrtUrCeHEXRy6MmHAMQ65pq3I10uyDvrsBjrehmOHXuzEP8NAAD//+gVlJa+BwAA\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySwc6bMBCE7zyF5XMR6tWqfqnqpf8hbaRIvUQ9LGZLLOy1ZS9EvH1lCqRJoQk3mJnPy6whmB8Yk/GkhBw+yqIz1Cghj76RhUOGBhhUIQSBQyVk19dYQjAJ44BRzkIKoFc1jYnRZclCjTbltBBsMCqhPXH0tgwWCKfv2rvgCYmVuGcXKaDO2YtP/A356mOnBMc+5zIHDGGc6eX+fPkxDtqsfspyJGRMX8eAMb+eAuq3xai9c5ALOMvqsjjkByFvyJ+zFWKblDj/hfx8fD9Nni+efpn2bXEO3vYOD74nnse9GxlZlzeIXA1CuBw5Al+UkBWyrrZsK2eAWFpTTyyLvAsaIFbW1NU/vpXkknmavgK0SFwdgKDF5r1BYsNjeUJmQ+3df0SE5jvZcV3fw3nJ6273QB+mEf+U+Lju7e7yjZniKzP8p8RnBe7TNptccC6ZlwGvlbnZ1z58Ku53AAAA//+XfMNr4AMAAA==\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRsW7zMAyEdz8Fkd3w/w9ZhKJAxw5pAwTozkiEIySiXJFy4LcvZMdOWjRtR5LH43cSdv6NkvjIBvr/1dGzM7CNrgqk6FDRVACMgQwc855qdC5yHZCxpXQZSYd2nssgSqEC6G9cpSNbfA5R9IX0HNPRgKZMFYCNrOiZkhRF/dMtAB+wJQMPZZyYlOSpaDaTZNeRfRx1iSTmZGn0nBrvmUSXGsB22cA6LHWgENNgYP1v48dmH0850CZmntdmuJFLLpuhCLaoBwOrhtQ2V7ZmEq4WBnSvfBqW6FfHIP47ux5Tc/L75ozYEmsz5XTPjli9DvWOVD239y9MGT697A18+Y7x1GW9+y3FV9x7Bn/n/ggAAP//ovMbJ38CAAA=\n\n\n\n- path: /etc/kubernetes/addons/kube-heapster-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWW2tjNxB+P79C+F1ep92AK+pCmk3bh2Y3JFAoLISxNOujWrfq4rX31xfpHNvnYgcTNlC9WGdGo2/mm4sMTv6FPkhrGNlcVWtpBCNP6DeS4w3nNplYaYwgIAKrCDGgkZEawYWIvhUEBxwZWacl0rALEXVFiIIlqpBtSNF4gxHDVNp3XKVsTEMDw8gk+oSTchKEsEaDgRX6ad9MW4GMPCK3hkuFFaW06rrvl8CnkGJtvfwGUVozXc+L5eZqiRH20d028I9W4YnQGv/ZPkL6VcaaGjBm93Yx3ZmQPN5tZYih8klhYBUl4OTv3iZX8CjBbUSTIw3lE5zLG4/BJs+xPSTQKbvTaGJWbtAvW8UKY/lVMjSbrxB5XXbJCYhYtq4IR9CTyRgJNy0IPZZA+2lFu3NWXObGd0jlr9IIaVb/y4xahY/4JYPsiX0hxIqQcZ1eEEtIy3+Qx1I6J9v48uYdpmM4GHokv47B/snGsT/6jl3iaXDIM7SzPrYllreMzGcFJoJfYXxoRfMfKkICKuTR+tbjeaDgXAcrB99E++HQTD02jo14qMazfIxuf8s6e2EYD/jc0+bRKckhMHI1YkbnzvyzE8zpcCJqpyBia9QhIi/Vsz9HCCFgjI2lCzqHA69RJIV+CsrVMCCAexklB0WdFawZUYTsAyu5twp9/05K1rhj5LY1vcn0hk9G7Q6Y1mUb6xk5kFru7bXSx2F15sWtiSAN+g6a1LBCRn4+er6v8SeH/JcDKrdagxHH0CmZvNvfP+lKKW2m8KJDRkhag989g5Ps8+Tz5GgwaqNm9Ub5UfhvwhB7MkK4S7lzdE+oUVu/Y+Tq/exedjRKavnqC06xVRL0iEF+u4gxZ8VzGYYDyrhLi/lMD6S4jR6Kbja9HiobDxfFwZN27YH3I3WsPYbaKrG4HmiOj/PiTG4PNXTugLNKUYdeWrH4cZbX0LkQpc4FvMCtswZNlKDOFcThFXxdWVyfyepPF1bFRfZoNt0kb0Al/M1b3b/vi0Ql2jd2JH+AWLPDaJpmDjrHGkru/35++PTh+ePN/d33Rysj+SXIp4eb2z1u/vv01JvEeeV3ZjAAbWBESZO21X8BAAD//0SxZ2rFCwAA\n\n- path: /etc/kubernetes/addons/kube-dns-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xYS2/jNhC++1cQ7ll+ZJHdQFgHCOKgG2yTGnXa+4QcS4QpkuHDjffXF5RkWZRsx14URX0T5/VxHt9IBs3/QmO5kinZTAdrLllKlmg2nOIdpcpLNyjQAQMH6YAQCQWmZO1fMWHS1gdWA92d2q11WAwIEfCKwgYbUkqMRId2xNWYCm8dmsRWYVIydMbjsNQExpQsQEKGZhSbFYphSv5AqiTlAgdJkgxOwY9wR2hubAJaR9e4BGOsWWXku3/F+fPyggxZjTTgqSM9LlLydV15qS/wuLgdEKKVcSXwpHa9AxwEKbn+VD0Y5RRVIiV/zhexcuKoPmXwch8MLAqkTpljKepmG7S24830FR3s8j5HLdS2wE7L/FwjHC7Spin21aSX62R/eCLfBrXgFGxKrnrXLsDR/LcW3mM4ekgcFlqAw9pP6/plV0upHDiuZOOXEEtzZF6gGYHQOXS6nRruOAWRaMVSMhzWZiICdxzeJak+cB1Cdukq4a9WXHK33YfVit1Jx+96gtBYuEJjkM294TJbVrfkMnvMpGqOH96R+pCQtmlC/kae5S4l08mkdV7Fq2O9oCnSSFhnZRmVsv0ry/rwrg1aG9dgH3mN23SXzZ6YEKXRQHBOHuUB8QaExwN+S8/dylQ/p7QSKtt+LwNHxcqVdaGLBztNEYK3kdd47+smuQusaX+XYjvoA35459Y1bauEL7DlpzNCVMkVzxov1eMT6PbVegy3jxlAgkhJaK5B48IBl2haQcFkrWQlZJgkTBXA5ezrPhOBUgW6+6pz56X8djTsmEmbBF6bTSeT608d4WZ21Tmp7pMwbmbjzp33mryADGs23kMJvKyR3jZqgm9QorULo16xnZ8VcOENvuQGba4ES8l1S5o7p39FF/eKBpenZDjOEYTLfyQhNJN22BmCwN83k5t4NgKPhIJ8e3lZtARhWDiIOQrYLsPSZDYln9um1lOK1rZwTltSxwtU3jWm+zvs698uf7OnduluCr8ocZcF6nVRyL9QFETEIPEuu9iho/qE02rfVT+DwPjBIp4sU2N2pEDTny7Qp8lZJTBolTc0phzBC+46JFRgocw2JdMvkyfekhh882i72lT7Mq/FQR+Ri4pInsILYlT103xCSBEsFmUeuxN4gh56kyxU5pR1DI2JBZWr+ckBD3oGrQPj5tIWYN9m8TYsuSJ+XHeZBGiOieU/MFDPpCOVKgRQYtM5D+sXzWx69WU0GU1G018O0VatNOYyAcbMCIyG8Zkm+vM56kJlyQooF9xtZ8kp5ps/L5/AvsXM10xaSN3ZBHB4WC+f++ND/+G4H2vaj5uS9Pbex02b0ILNpBVKrb1ur3iGK/DCjeyGjj5aeKSpJLkdM9yMpReiU05vxKxZHXVZuu36r0JJy6Y6E1Bvl5Uq5dIOu6xz/uY5ulMdGd4cv1Wu/7t93Esq+d/t4xrq2ePYwX1sP164Z64vWDOHt0zLA5N2oQSn2/BtWfZpLbDRHxTPh95HpWLY/yIIn6udDy1lUyK49O+DfwIAAP//KA420AwRAAA=\n\n- path: /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUy27bMBC8+ysI3RklVyEuULgBemkawEDva2psE+ZDWS5d++8LSrUtOYmb8kTMLoczswSps7/AycbQKBwEoWxTvX9YQehhtrOhbdQ3go9hCZl5CLUk1MyUcrSCS2Wn1C6vwAGCdGdjbVxOAtYJvLcGjaqEM6q+00TfxYAgTX9IdxwPx74iFtyoEFvMlArkcdVRoNSROeHpmAR+ljqYIkLgO0eCQdBYaFljsbdlvJGi1OmKvhQdmKSkdIK02uE4tGuODnfTNDyVMM7csSvnIzfq6TWTO+N7cnkaVVlYr2GkUc9xabZos8PsZCAI2QAeyTDRewrtxaVWVb09duCiqBrBU7taVVqXFhPD2m7m9Z64dnZVF8xB6kutmh46TdrYluePpW0xIAvb8per5jVIMkNvSJDmT4cObD2CkFuwFWvIvcT2awhR+nzn0ySsp03J5/GS7veTtWUHM7rtncczLEaKmQ1GD6GArxlJJphSpsuNeri/92c0wWS2clzEIDjIuL1ju7cOG7SNKqovQ40ue/yIOYz5tfIFeSHZNqqqIaZOydUGLKka0Q4+UnK6L+ltTDIRTu3P4I5Xd77DfonsLT3E6Ev9v+k/81TGExlq/7qmOH2G/I68m+BDnqMnXxp7KeNp/JWWE9dpS4zaUJ+gXVtDkxBuJHyb+zO2PzB9m/ijcd0YVvl4lnAw5Vc5Hygf+NVPFFOjnA35MPsTAAD//zcsf+33BQAA\n\n- path: /etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9xVS2/bRhC+81cMeM5KMZKDsWgDpDGQHhJDsNxeCh9GyzG51b66O1TNFv3vxdKiRMaSLBsIUJQnYl7ft/PEoH+lmLR3EjYXxVq7SsKS4kYr+qiUbx0XlhgrZJQFgMEVmZT/ANaXSWAIEtbtiqIjpiQqTM3KY6weLXaKmfZzZdrEFEV6DC+h5NhS2VtiVXln0WFNcTZ1s74iCTekvFPaUAHg0NJR1KxMAdXWQqQuMdlCCLF93Y03VIzfHVeoZthy46P+C1l7N1tf9tCbi8njj+MKq522aI7j/ydSF1tDSRYCMOjP0bchSfitLO8KgEjJt1FRL0mkInHqFRuKq16oIiFTefe8u/LuXtcWw6sjjAkMiuuc2Kw8WIA1daLxpqI4xayJyzdQtqHK0G+grMjQq55xHo9EzNrV6RSLsxLQF/oIckMYcj9MQUL0D91Lgs8Hj1MQb6BsmIMcBHKQpJHoyWPv+oE7e8r2k/mTdpV29f9s7ryhG7rPHIbSnEhIATDaVGc9P7Wr30lxP9sHd/jrl+apC3H8NJydxecq8hraKZDKPIKP3BMS/a+E9+/f9aCMsSZe9LLLR2EiQ4p9PK9PuAsk4dpXlIM8yRM9MLn8m+abixUxDnm7omB8Z+nUVf0+N/P7ZjpSMFphknDxJJcWWTVfRi88I71kg0GmbYBRpvJnJrHOGeqBZv6Ud4zaUdxFEICxHsUTIAS27EVNjiIyCUWR9b1WyJQmZsMGFI1P/GO/J+fzQTgbZUpevt05aos1SfhhT/dqYLsMpD5MDRetMQtvtOokfDR/YrdnYPSGHKW0iH5Fe/4Amchn4rEIICA3Esp5OZWOh2D/JdVQboefb28Xy5FGO80azRUZ7Ja5vaok4d3bkQVrS77lQ8qTHbanMynFrlyLQ0RD9OyVNxJuPy128v2xG5lG+qOlxGmaFBXaw5X4tPjlZuvxYeJhyfrYHXb62usO+Rlt9Uuwv2T7lwJ/47TxprX0Ne//MbI4dVByp6cxrM3ui7515mPlY/BJqV4Qlmzg7kpHCX//sxWnycG6fq5VnK9oOdkz+cu79ptV6JMEo137UPwbAAD//3JLoyPsDAAA\n\n- path: /etc/kubernetes/addons/azure-storage-classes.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8yQsWorMRBFe33F4F77cPdQmzaYEEPaMJbGzrCr0TIaGZKvD7veBOwYV8Gklu6dew6O/EJauUiAakXxQF3/v3Zc/h3XOzJcu54lBdieHh8GrNVlMkxoGByAYKYAifbYBnMAKFIMjYvU6Rm+auOU7KbKrm87UiGj+Q5Xv6T9/CfAyrTRygEMuKNhqTkPxaFVI/WV9MiRvjOjliNPOKThIoIfTcknrr0bUTGTkc7dEeMbyyGXRAE2Rch5791vmWmSUfBAyY9KmVv+6eg+mAsExliamL2PFODpNOn18Xl7RxHVUBJq+ksmtsummyqucN60c8XCPGrPA90Ffj50Ad+3zbzkjPgzAAD//wD1SX0IBAAA\n\n- path: /etc/kubernetes/addons/kube-tiller-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RUXWvbShB9169Y/C4Hc3PhslwCbmKSQJwaOy3tUxivpvY2+9WdWWP31xcpsaKvhuQhhepJu3uOzjkzo4WgP2Mk7Z0Uu0n2oF0hxQrjTiucKuWT48wiQwEMMhPCgUUpWBuD8WlJARRK8ZDWmNOBGG0mhIE1GioZojqJDhlprP2JMokYY06PIlKMOCYcVUgoCu8sONhgHLdp1hclduYoRZztNTGNsjzPs2aCuAY1hsRbH/VPYO3d+OG/ir6brJHhGPD80cPSG/ygXaHd5qWQfyZL9AaX+K2UgaAvo0/hhUCZEL0otfOjLSisdhml9XdUTDLLxWB/X9vVbrW789KqYbNoEIIUWzS2WnXE3rOmbbG8wGD84fcBKaAqHQcfubKe982WZ1Kcnk7+Oa3WDHGDvKh2axihQcU+viI+HwLWXbxe9IqMe0ZXvlJnhi+qMBY7P+jfXHdGGwwwPrpvpiqfZrJ+usGExw9X762hv+1ChVDeMWiHsdbIBbrds+BxGu6ub25my/vb6Xy2WkzPZzVAiB2Y1LsLB9lX16u7j8uv9/Pplz5/9P9zke8qj3PYX2liHw9noxqvLWxQih54FVCd1Sijd+iQaBH9GmVDbMscLpGbW0IE4K0UJ0dS+6ye/X8b+9pp1mAu0MBhhcq7gqSYNACsLfrEA2e9hh1VqFn1ujGLzr/3wkciQqHfnLpmvW/siORTVEhNExF/JCSmtjEV0kCDzxeflk/wsxbcovXxMMCYVwdDJKOtfrXqTQl+k2SL4XyBq9bdWD7lrda5VTxJYbRL++xXAAAA//9fQ5xvoQgAAA==\n\n- path: /etc/kubernetes/addons/azure-cloud-provider-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7yQMW/jMAyFd/0KIouXUw7ZDtrubuieAl2CDLT8mqqRJYOkDDS/vrANZClQdCi6SiTf+z7vveMpPUE01RJIeo57bvZSJd3YUi376x/dp/p7PvQwPrhrKkOg/7mpQY41w40wHtg4OKLCIwLpmxrGwLcm8DHXNvhJ6pwGiCPK3CPrMk10bT2kwLBmxO2qV8icIgLtTBp2TlqGBueJp/QgtU0a6NR1Z0ck0NokYn1RRIHp+jFDeg1LBp26C6z71UUBG7qz+wbqf6kMqVx+Ar5mHPG8rHx0T3cln1B8qZq2/hXRVs1bzuNW5G+MtRW7H5kWa2oo5uea2wjfp7LBLQM68VJ+YfNbnnsPAAD//990ZYZlAgAA\n\n- path: /etc/kubernetes/addons/kube-metrics-server-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RWS08bSRC+z69o+cKpDWg5oNbuSiyLokgQWRhxjdo9xVBxv1RdY3B+fTQPP8aPEU6AkLm43dNVX331VVWPjngPlDB4JWan2RR9rsQYaIYGLowJpefMAetcs1aZEF47UMIBE5okE9AMqN1OURtQYlpOQKZ5YnCZEFZPwKbKUtRvyANDGmI4NrZMDFT7wMpwwFTCoD6p8zx4p70ugIZdMxdyUOLKp5Lg6hkTp0xKma3zoIk2Q13yYyD8rhmDH07Pa+Mlw8sG/DZY2EGviV5tsXwPMlRaSCqTQkf8RKGMNZ4Ug8oZQQolGWj3YshTvfAhh3a1EKL6OwOatEcL4PrXYmoWT5rN4w4YeGbwVR7TDsAcog1zB55f6P6XlPkPfY6++GgCBQu38FCBLHLXQywTYrvi+mmkcvINDNdFsLMfD+3CQ1SYAOuFFP0adNFl5U8S6Pz3z4OfVKgjzbINpI64RhE8o6nNF2Q/jFwv6pxuEKqtwFq8HCwUmsOf20gbNN5cmc0L89VuysMSuS1Sgz246YAPDlAzRTBVKAksGA7UVsJ5kjrGHaxiIF5eSsRKnJ39VZtEChxMsErcXY7qHdZUAI+WpzaTurqANur7/+Xl83pfJHsJvV3Z706tq+7L67XQ+oJjcNFqhtZ0LRnVsych1WM7AP38F3HW607ffNkPYIJnjR5oCSL74hECnS5Aib9XaWuLdlyfG0cw/3YPj0prR8GimStxYZ/0PC3fm+Cc9vmKnxTHe3ClkLL5tPlnTbFUOqdp/lVHVEdHW6WpIxIUmJh6xvDF6PP+cdAeHbZRrWbbewzcVeU1nrLeatnbQEUzqbcozFZjscmHEOgTmJJgPMV4dz2+B8KHuRIVgYWjEWEg5PkNenSlU+L05GTlbPG22f4RAAD//789LNetDAAA\n\n\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates= --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=30 --network-plugin=cni --node-status-update-frequency=10s --non-masquerade-cidr=10.240.0.0/12 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_NODE_LABELS=kubernetes.io/role=master,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n  \n    KUBELET_REGISTER_NODE=--register-node=true\n    KUBELET_REGISTER_WITH_TAINTS=--register-with-taints=',variables('registerWithTaints'),'\n  \n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n- path: /etc/systemd/system/kms.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SQsW4yMRCEez/FvYDxX/46yUWipEgLRCkIhTEDrM5nX3bXEHj66I6kOUVKY3lGn2alb/OaSbfmCRKZBqWSfbhVRteLWeKjEkP8vsQOvBDwmSLMw0HBPkMvhTtbcqKMhQY+Qo3ZrO7U1qyvA7xQPySYJUQDqw/pEq5i1tSjVF2N3QrR/zPPn4hT9K4Kux1ld7/acM3Nu2kaazPUn4rodzyXVHt4VwZtx2dWQ6Pr6g6coZB2ln+BRZKLYBUXgx0/dKAYFLKIrO3fyGzyHNgl2rlLCEdkbefFhDNpuJ1c91/spN12vbRpXBxVvmTRkNLWvIWs2D9efV+Tkq0C/hH+FQAA//884M3mwQEAAA==\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -e\n\n\n\n    # SNAT outbound traffic from pods to destinations outside of VNET.\n    iptables -t nat -A POSTROUTING -m iprange ! --dst-range 168.63.129.16 -m addrtype ! --dst-type local ! -d ',variables('vnetCidr'),' -j MASQUERADE\n\n    sed -i \"s|<kubernetesAddonManagerSpec>|',variables('kubernetesAddonManagerSpec'),'|g\" \"/etc/kubernetes/manifests/kube-addon-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g; s|<kubeClusterCidr>|',variables('kubeClusterCidr'),'|g\" \"/etc/kubernetes/addons/kube-proxy-daemonset.yaml\"\n    sed -i \"s|<kubernetesKubeDNSSpec>|',variables('kubernetesKubeDNSSpec'),'|g; s|<kubernetesDNSMasqSpec>|',variables('kubernetesDNSMasqSpec'),'|g; s|<kubernetesExecHealthzSpec>|',variables('kubernetesExecHealthzSpec'),'|g; s|<kubernetesKubeletClusterDomain>|',variables('kubernetesKubeletClusterDomain'),'|g; s|<kubeDNSServiceIP>|',variables('kubeDNSServiceIP'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n    sed -i \"s|<kubernetesHeapsterSpec>|',variables('kubernetesHeapsterSpec'),'|g; s|<kubernetesAddonResizerSpec>|',variables('kubernetesAddonResizerSpec'),'|g\" \"/etc/kubernetes/addons/kube-heapster-deployment.yaml\"\n\n\n    sed -i \"s|<kubernetesDashboardSpec>|',variables('kubernetesDashboardSpec'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPURequests>|',variables('kubernetesDashboardCPURequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryRequests>|',variables('kubernetesDashboardMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPULimit>|',variables('kubernetesDashboardCPULimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryLimit>|',variables('kubernetesDashboardMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n\n\n\n    sed -i \"s|<kubernetesTillerSpec>|',variables('kubernetesTillerSpec'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPURequests>|',variables('kubernetesTillerCPURequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryRequests>|',variables('kubernetesTillerMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPULimit>|',variables('kubernetesTillerCPULimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryLimit>|',variables('kubernetesTillerMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMaxHistory>|',variables('kubernetesTillerMaxHistory'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n\n\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesMetricsServerSpec>|',variables('kubernetesMetricsServerSpec'),'|g\" \"/etc/kubernetes/addons/kube-metrics-server-deployment.yaml\"\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesControllerManagerConfig>|\\\"--allocate-node-cidrs=false\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--cluster-cidr=10.240.0.0/12\\\", \\\"--cluster-name=tddevelopment\\\", \\\"--cluster-signing-cert-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cluster-signing-key-file=/etc/kubernetes/certs/ca.key\\\", \\\"--feature-gates=ServiceNodeExclusion=true\\\", \\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--node-monitor-grace-period=40s\\\", \\\"--pod-eviction-timeout=5m0s\\\", \\\"--profiling=false\\\", \\\"--root-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--route-reconciliation-period=10s\\\", \\\"--service-account-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--terminated-pod-gc-threshold=5000\\\", \\\"--use-service-account-credentials=true\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesAPIServerConfig>|\\\"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,AlwaysPullImages\\\", \\\"--advertise-address=<kubernetesAPIServerIP>\\\", \\\"--allow-privileged=true\\\", \\\"--anonymous-auth=false\\\", \\\"--audit-log-maxage=30\\\", \\\"--audit-log-maxbackup=10\\\", \\\"--audit-log-maxsize=100\\\", \\\"--audit-log-path=/var/log/audit.log\\\", \\\"--audit-policy-file=/etc/kubernetes/manifests/audit-policy.yaml\\\", \\\"--authorization-mode=Node,RBAC\\\", \\\"--bind-address=0.0.0.0\\\", \\\"--client-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--etcd-cafile=/etc/kubernetes/certs/ca.crt\\\", \\\"--etcd-certfile=/etc/kubernetes/certs/etcdclient.crt\\\", \\\"--etcd-keyfile=/etc/kubernetes/certs/etcdclient.key\\\", \\\"--etcd-servers=https://127.0.0.1:2379\\\", \\\"--insecure-port=8080\\\", \\\"--kubelet-client-certificate=/etc/kubernetes/certs/client.crt\\\", \\\"--kubelet-client-key=/etc/kubernetes/certs/client.key\\\", \\\"--profiling=false\\\", \\\"--proxy-client-cert-file=/etc/kubernetes/certs/proxy.crt\\\", \\\"--proxy-client-key-file=/etc/kubernetes/certs/proxy.key\\\", \\\"--repair-malformed-updates=false\\\", \\\"--requestheader-allowed-names=\\\", \\\"--requestheader-client-ca-file=/etc/kubernetes/certs/proxy-ca.crt\\\", \\\"--requestheader-extra-headers-prefix=X-Remote-Extra-\\\", \\\"--requestheader-group-headers=X-Remote-Group\\\", \\\"--requestheader-username-headers=X-Remote-User\\\", \\\"--secure-port=443\\\", \\\"--service-account-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--service-account-lookup=true\\\", \\\"--service-cluster-ip-range=10.0.0.0/16\\\", \\\"--storage-backend=etcd3\\\", \\\"--tls-cert-file=/etc/kubernetes/certs/apiserver.crt\\\", \\\"--tls-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--v=4\\\"|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesSchedulerConfig>|\\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--profiling=false\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesAPIServerIP>|',variables('kubernetesAPIServerIP'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n- path: \"/opt/azure/containers/mountetcd.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('mountetcdScript'),'\n\n- path: \"/etc/systemd/system/etcd.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=etcd - highly-available key value store\n    Documentation=https://github.com/coreos/etcd\n    Documentation=man:etcd\n    After=network.target\n    Wants=network-online.target\n    [Service]\n    Environment=DAEMON_ARGS=\n    Environment=ETCD_NAME=%H\n    Environment=ETCD_DATA_DIR=\n    EnvironmentFile=-/etc/default/%p\n    Type=notify\n    User=etcd\n    PermissionsStartOnly=true\n    ExecStart=/usr/bin/etcd $DAEMON_ARGS\n    Restart=always\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/opt/azure/containers/setup-etcd.sh\"\n  permissions: \"0744\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -x\n    source /opt/azure/containers/provision_source.sh\n    ETCD_VER=v',variables('etcdVersion'),'\n    DOWNLOAD_URL=',variables('etcdDownloadURLBase'),'\n    retrycmd_get_tarball 60 1 /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz ${DOWNLOAD_URL}/etcd-${ETCD_VER}-linux-amd64.tar.gz\n    tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /usr/bin/ --strip-components=1\n    systemctl daemon-reload\n    systemctl enable etcd.service\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n\n\nruncmd:\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- wait_for_file 1800 1 /opt/azure/containers/certs.ready\n- /opt/azure/containers/setup-etcd.sh > /opt/azure/containers/setup-etcd.log 2>&1\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent \n- /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" | tee -a /etc/default/etcd\n- /opt/azure/containers/mountetcd.sh\n- /bin/chown -R etcd:etcd /var/lib/etcddisk\n- systemctl stop etcd\n- systemctl daemon-reload\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart etcd\n- MEMBER=\"$(sudo etcdctl member list | grep -E ',variables('masterVMNames')[copyIndex(variables('masterOffset'))],' | cut -d',variables('singleQuote'),':',variables('singleQuote'),' -f 1)\"\n- sudo etcdctl member update ${MEMBER} ',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\n- retrycmd_if_failure 5 5 10 curl --cacert /etc/kubernetes/certs/ca.crt --cert /etc/kubernetes/certs/etcdclient.crt --key /etc/kubernetes/certs/etcdclient.key --retry 5 --retry-delay 10 --retry-max-time 10 --max-time 60 \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\"/v2/machines\n- apt_get_update\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n- /usr/lib/apt/apt.systemd.daily\n\n- bash /etc/kubernetes/generate-proxy-certs.sh\n\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- apt-mark unhold walinuxagent\n- touch /opt/azure/containers/runcmd.complete\n\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[variables('sshPublicKeyData')]",
                                    "path": "[variables('sshKeyPath')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "dataDisks": [
                        {
                            "createOption": "Empty",
                            "diskSizeGB": "[variables('etcdDiskSizeGB')]",
                            "lun": 0,
                            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
                        }
                    ],
                    "imageReference": {
                        "offer": "[variables('osImageOffer')]",
                        "publisher": "[variables('osImagePublisher')]",
                        "sku": "[variables('osImageSku')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                }
            },
            "tags": {
                "creationSource": "[concat(variables('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                "orchestrator": "[variables('orchestratorNameVersionTag')]",
                "poolName": "master",
                "resourceNameSuffix": "[variables('nameSuffix')]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' ',variables('provisionScriptParametersMaster'), ' MASTER_INDEX=',copyIndex(variables('masterOffset')),' /usr/bin/nohup /bin/bash -c \"stat /opt/azure/containers/provision.complete > /dev/null 2>&1 || /bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        }
    ],
    "outputs": {
        "agentStorageAccountPrefixes": {
            "type": "array",
            "value": "[variables('storageAccountPrefixes')]"
        },
        "agentStorageAccountSuffix": {
            "type": "string",
            "value": "[variables('storageAccountBaseName')]"
        },
        "agentpri2StorageAccountCount": {
            "type": "int",
            "value": "[variables('agentpri2StorageAccountsCount')]"
        },
        "agentpri2StorageAccountOffset": {
            "type": "int",
            "value": "[variables('agentpri2StorageAccountOffset')]"
        },
        "agentpri2SubnetName": {
            "type": "string",
            "value": "[variables('agentpri2SubnetName')]"
        },
        "agentpriStorageAccountCount": {
            "type": "int",
            "value": "[variables('agentpriStorageAccountsCount')]"
        },
        "agentpriStorageAccountOffset": {
            "type": "int",
            "value": "[variables('agentpriStorageAccountOffset')]"
        },
        "agentpriSubnetName": {
            "type": "string",
            "value": "[variables('agentpriSubnetName')]"
        },
        "masterFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
        },
        "primaryAvailabilitySetName": {
            "type": "string",
            "value": "[variables('primaryAvailabilitySetName')]"
        },
        "resourceGroup": {
            "type": "string",
            "value": "[variables('resourceGroup')]"
        },
        "routeTableName": {
            "type": "string",
            "value": "[variables('routeTableName')]"
        },
        "securityGroupName": {
            "type": "string",
            "value": "[variables('nsgName')]"
        },
        "subnetName": {
            "type": "string",
            "value": "[variables('subnetName')]"
        },
        "virtualNetworkName": {
            "type": "string",
            "value": "[variables('virtualNetworkName')]"
        }
    }
}