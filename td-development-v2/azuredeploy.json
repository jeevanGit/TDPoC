{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "agentpriCount": {
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100
            ],
            "defaultValue": 2,
            "metadata": {
                "description": "The number of agents for the cluster.  This value can be from 1 to 100"
            },
            "type": "int"
        },
        "agentpriOffset": {
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99
            ],
            "defaultValue": 0,
            "metadata": {
                "description": "The offset into the agent pool where to start creating agents.  This value can be from 0 to 99, but must be less than agentCount"
            },
            "type": "int"
        },
        "agentpriVMSize": {
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A10",
                "Standard_A11",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_A9",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D11_v2_Promo",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS11_v2_Promo",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS12_v2_Promo",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS13_v2_Promo",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS14_v2_Promo",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS3_v2_Promo",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2",
                "Standard_DS5_v2_Promo",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "defaultValue": "Standard_D2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
            "type": "string"
        },
        "agentpriVnetSubnetID": {
            "metadata": {
                "description": "Sets the vnet subnet of agent pool 'agentpri'."
            },
            "type": "string",
            "defaultValue": "/subscriptions/e39b9baa-50b5-4665-8297-2fa801ed1fa4/resourceGroups/td-poc-vnet-devlabs-rsg/providers/Microsoft.Network/virtualNetworks/td-poc-vnet-devlabs/subnets/Agent"
        },
        "agentpriosImageName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
            },
            "type": "string"
        },
        "agentpriosImageOffer": {
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Linux OS image type."
            },
            "type": "string"
        },
        "agentpriosImagePublisher": {
            "defaultValue": "Canonical",
            "metadata": {
                "description": "OS image publisher."
            },
            "type": "string"
        },
        "agentpriosImageResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
            },
            "type": "string"
        },
        "agentpriosImageSKU": {
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "OS image SKU."
            },
            "type": "string"
        },
        "agentpriosImageVersion": {
            "defaultValue": "16.04.201804050",
            "metadata": {
                "description": "OS image version."
            },
            "type": "string"
        },
        "apiServerCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSU5CRENDQ3V5Z0F3SUJBZ0lRQVZjMnBGaHcvTy9EYW56RFdiZWVhakFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBMU1ESXdOVEF5TXpsYUZ3MHlNREExTURFd05UQXlNemxhTUJReApFakFRQmdOVkJBTVRDV0Z3YVhObGNuWmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBTTlSUDlpVHBtWDM4Ni9wazErNVczZ2VmWFpuRTlBRk00czFWM1lyaUlaRWQ1TVpsendzcC9wRlZ3RzQKQ2x4eTZUZjd1aU1EUk44dFVSVHZFbFo5TWd0QXFLMlpuUVFvZnVQNWEzWnorc25VRFVCcHljMWxvdXRXSEJsVwpIWG50OFRBNDlaQlRGeDZjWUt6MmtsUVdKZzV5SWdTYk9XTlJTaHIwOGMrTms3SkZrL3Q1Tk13N2FMRlhlck1uCnVrN3dWL2tTZ0loQmgvK1hvaWd1dDk4dnR1SlpjQlEyN0FENnJtTWFSUDVsSGJCaU94WUtFRGNZTklKQ0d0aHQKZ05TdWxtbkFRSWNBRG5WeUxjcW9XQWRTNTNLb2NtMmtYTFpoRmNSdXMwaDBmdkpnbDhXK2dEQjBzWXk3YXpPRgpiQVdIM2VKTUFNV2J5cHVMK20vWFQ5WXdXdXdCWVhOUGc2Ulp4ckYyT0F1djdRejg3VEtmTXdkcWlCVHdxS3pTCkRPYmtzNnBIaHlSekZUSldFVUJCc09BU1hETnY3S2dOUjRkbjRxV3ZuM0pXb0dLUy92WHIvbFoyRjhieDF3ZWMKaG42bVlaY1IwUVdiQmVkL0xlbi9SZld3a1JrMDhSQUdQRjdXT0M1VXo4a1hWdjNZMlhPc1dHRWhzKzRRaVUvWApobVN1Mi8ydDdpY1ZDdUxmSndSTSt4YlZOaFYycUhzcjNVK0tHQ3BjUEJFK3ZwWHZpRUhqZnZWWkpETkNpaU8rCmdJTEp3Z0w1UE1EdDVCcGZSWVF2M25wdUR0Ym9mQ1Z5NE14S3pLdTJadHRSSVduQm14b2FEalhYOVI3VEJGWWEKd0xCOWtydENFTUpod0pEOFZYWEQxQmQ2KzFydlNQMjdyMEtRejZQQlBpUDJ5Zkp6QWdNQkFBR2pnZ2hYTUlJSQpVekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvCkJBSXdBRENDQ0J3R0ExVWRFUVNDQ0JNd2dnZ1BnaTUwWkdSbGRtVnNiM0J0Wlc1MExtRjFjM1J5WVd4cFlXVmgKYzNRdVkyeHZkV1JoY0hBdVlYcDFjbVV1WTI5dGdqTjBaR1JsZG1Wc2IzQnRaVzUwTG1GMWMzUnlZV3hwWVhOdgpkWFJvWldGemRDNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNMSFJrWkdWMlpXeHZjRzFsYm5RdVluSmhlbWxzCmMyOTFkR2d1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2k1MFpHUmxkbVZzYjNCdFpXNTBMbU5oYm1Ga1lXTmwKYm5SeVlXd3VZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXQwWkdSbGRtVnNiM0J0Wlc1MExtTmhibUZrWVdWaApjM1F1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2kxMFpHUmxkbVZzYjNCdFpXNTBMbU5sYm5SeVlXeHBibVJwCllTNWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNLblJrWkdWMlpXeHZjRzFsYm5RdVkyVnVkSEpoYkhWekxtTnMKYjNWa1lYQndMbUY2ZFhKbExtTnZiWUl1ZEdSa1pYWmxiRzl3YldWdWRDNWpaVzUwY21Gc2RYTmxkV0Z3TG1OcwpiM1ZrWVhCd0xtRjZkWEpsTG1OdmJZSXhkR1JrWlhabGJHOXdiV1Z1ZEM1amFHbHVZV1ZoYzNRdVkyeHZkV1JoCmNIQXVZMmhwYm1GamJHOTFaR0Z3YVM1amJvSXlkR1JrWlhabGJHOXdiV1Z1ZEM1amFHbHVZVzV2Y25Sb0xtTnMKYjNWa1lYQndMbU5vYVc1aFkyeHZkV1JoY0drdVkyNkNLWFJrWkdWMlpXeHZjRzFsYm5RdVpXRnpkR0Z6YVdFdQpZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaWQwWkdSbGRtVnNiM0J0Wlc1MExtVmhjM1IxY3k1amJHOTFaR0Z3CmNDNWhlblZ5WlM1amIyMkNLSFJrWkdWMlpXeHZjRzFsYm5RdVpXRnpkSFZ6TWk1amJHOTFaR0Z3Y0M1aGVuVnkKWlM1amIyMkNMSFJrWkdWMlpXeHZjRzFsYm5RdVpXRnpkSFZ6TW1WMVlYQXVZMnh2ZFdSaGNIQXVZWHAxY21VdQpZMjl0Z2lwMFpHUmxkbVZzYjNCdFpXNTBMbXBoY0dGdVpXRnpkQzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDCktuUmtaR1YyWld4dmNHMWxiblF1YW1Gd1lXNTNaWE4wTG1Oc2IzVmtZWEJ3TG1GNmRYSmxMbU52YllJdGRHUmsKWlhabGJHOXdiV1Z1ZEM1cmIzSmxZV05sYm5SeVlXd3VZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXQwWkdSbApkbVZzYjNCdFpXNTBMbXR2Y21WaGMyOTFkR2d1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2k5MFpHUmxkbVZzCmIzQnRaVzUwTG01dmNuUm9ZMlZ1ZEhKaGJIVnpMbU5zYjNWa1lYQndMbUY2ZFhKbExtTnZiWUlzZEdSa1pYWmwKYkc5d2JXVnVkQzV1YjNKMGFHVjFjbTl3WlM1amJHOTFaR0Z3Y0M1aGVuVnlaUzVqYjIyQ0wzUmtaR1YyWld4dgpjRzFsYm5RdWMyOTFkR2hqWlc1MGNtRnNkWE11WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2k1MFpHUmxkbVZzCmIzQnRaVzUwTG5OdmRYUm9aV0Z6ZEdGemFXRXVZMnh2ZFdSaGNIQXVZWHAxY21VdVkyOXRnaXQwWkdSbGRtVnMKYjNCdFpXNTBMbk52ZFhSb2FXNWthV0V1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2loMFpHUmxkbVZzYjNCdApaVzUwTG5WcmMyOTFkR2d1WTJ4dmRXUmhjSEF1WVhwMWNtVXVZMjl0Z2lkMFpHUmxkbVZzYjNCdFpXNTBMblZyCmQyVnpkQzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDTG5Sa1pHVjJaV3h2Y0cxbGJuUXVkMlZ6ZEdObGJuUnkKWVd4MWN5NWpiRzkxWkdGd2NDNWhlblZ5WlM1amIyMkNLM1JrWkdWMlpXeHZjRzFsYm5RdWQyVnpkR1YxY205dwpaUzVqYkc5MVpHRndjQzVoZW5WeVpTNWpiMjJDS25Sa1pHVjJaV3h2Y0cxbGJuUXVkMlZ6ZEdsdVpHbGhMbU5zCmIzVmtZWEJ3TG1GNmRYSmxMbU52YllJbmRHUmtaWFpsYkc5d2JXVnVkQzUzWlhOMGRYTXVZMnh2ZFdSaGNIQXUKWVhwMWNtVXVZMjl0Z2loMFpHUmxkbVZzYjNCdFpXNTBMbmRsYzNSMWN6SXVZMnh2ZFdSaGNIQXVZWHAxY21VdQpZMjl0Z2pGMFpHUmxkbVZzYjNCdFpXNTBMbU5vYVc1aFpXRnpkQzVqYkc5MVpHRndjQzVqYUdsdVlXTnNiM1ZrCllYQnBMbU51Z2pKMFpHUmxkbVZzYjNCdFpXNTBMbU5vYVc1aGJtOXlkR2d1WTJ4dmRXUmhjSEF1WTJocGJtRmoKYkc5MVpHRndhUzVqYm9JM2RHUmtaWFpsYkc5d2JXVnVkQzVuWlhKdFlXNTVZMlZ1ZEhKaGJDNWpiRzkxWkdGdwpjQzV0YVdOeWIzTnZablJoZW5WeVpTNWtaWUk1ZEdSa1pYWmxiRzl3YldWdWRDNW5aWEp0WVc1NWJtOXlkR2hsCllYTjBMbU5zYjNWa1lYQndMbTFwWTNKdmMyOW1kR0Y2ZFhKbExtUmxnalowWkdSbGRtVnNiM0J0Wlc1MExuVnoKWjI5MmRtbHlaMmx1YVdFdVkyeHZkV1JoY0hBdWRYTm5iM1pqYkc5MVpHRndhUzV1WlhTQ01uUmtaR1YyWld4dgpjRzFsYm5RdWRYTm5iM1pwYjNkaExtTnNiM1ZrWVhCd0xuVnpaMjkyWTJ4dmRXUmhjR2t1Ym1WMGdqVjBaR1JsCmRtVnNiM0J0Wlc1MExuVnpaMjkyWVhKcGVtOXVZUzVqYkc5MVpHRndjQzUxYzJkdmRtTnNiM1ZrWVhCcExtNWwKZElJemRHUmtaWFpsYkc5d2JXVnVkQzUxYzJkdmRuUmxlR0Z6TG1Oc2IzVmtZWEJ3TG5WeloyOTJZMnh2ZFdSaApjR2t1Ym1WMGdpNTBaR1JsZG1Wc2IzQnRaVzUwTG1aeVlXNWpaV05sYm5SeVlXd3VZMnh2ZFdSaGNIQXVZWHAxCmNtVXVZMjl0Z2dwcmRXSmxjbTVsZEdWemdoSnJkV0psY201bGRHVnpMbVJsWm1GMWJIU0NGbXQxWW1WeWJtVjAKWlhNdVpHVm1ZWFZzZEM1emRtT0NKR3QxWW1WeWJtVjBaWE11WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1cwpiMk5oYklJV2EzVmlaWEp1WlhSbGN5NXJkV0psTFhONWMzUmxiWUlhYTNWaVpYSnVaWFJsY3k1cmRXSmxMWE41CmMzUmxiUzV6ZG1PQ0tHdDFZbVZ5Ym1WMFpYTXVhM1ZpWlMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWoKWVd5SEJCNEJBQWVIQkI0QkFCR0hCQW9BQUFFd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFKelFBQnBRZGlzcApIMTJuUm94MXRQRmMwTk5ONHp3QmtaZHZLZzQxUXFUbENjVzg5THhDeGlDMmFSaFUzaE5BY2hPMmJmdnEzTkNUCmZUZFBOY1l6WUVnMDJPbGhXM014WFFNTTB5Qml0Q0pxZEFwOTZuSFp5T25zVmIzYmI3UXZOd3NXeEpRajlZNjkKeS8rNmRuR1FGZTZoTlRLSUpaZzdzTWJWZ0JnM29uYS81TzlOWmp4NVVtd2NBblR6OWNqQlMvWFMybDl0RGNQKwptZ1NpL1NGbEFQZXhFYk1qSk9HQzY2ZGovZmI3bzVZL256RitJcDB2azNLVWtJS3hldlk3MWFEM1c0aTQyMFNxCkhJZ0d0Ymw0UWdZa1YzNGJxZnRVWnJhS1dWYk5nOTJVd040ZzVKM0hYaE9JZGQ5R1J5eEJ1S01sVXhVOEIvMFkKTHlQN2RYeEVnL0xmQ0wvVGFEdXlTL29Cb3BvUnNjNnBmZ24xdENDKzFMN3VLMVMwbnBKMTBQdERuRU5JTEVVMQpTdlhjMkRYZUtkcC93ZVkvM05mN3RaSzJRZm85Sit6VFlUdk1IenEyQUNGQzROcUFYdjJVQUpVSVNaZEdpZ2tzCkYxWElHRnlRdzNMOFdhZnF5Vlh3b3htRlRKLzdBMTZMMml0MDZyVGFrUFFYRUozTTUzRHEwd1UxVGRldTI2Y3kKTVlIYnJqZXpkUnJ3Ti9WS1BnNFlTNHFuTHZCd3luT0ZzSE5PMUgzbVBPM1BscVVyVHdkMzJlRXZTWUhxUHNCbApBUis1Wll6cnh6MThuZ0w2djVjTFdhZ3dQTWFqNUUrL2hFOUlNd3ErajZVZzdyTCtkT0hudTZONytIMmlVU2NVCkh6bnFKc0xsSjM3a0NvbVlHN3B3b0pITitxSnlYcW1ZCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
        },
        "apiServerPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBejFFLzJKT21aZmZ6cittVFg3bGJlQjU5ZG1jVDBBVXppelZYZGl1SWhrUjNreG1YClBDeW4ra1ZYQWJnS1hITHBOL3U2SXdORTN5MVJGTzhTVm4weUMwQ29yWm1kQkNoKzQvbHJkblA2eWRRTlFHbkoKeldXaTYxWWNHVllkZWUzeE1EajFrRk1YSHB4Z3JQYVNWQlltRG5JaUJKczVZMUZLR3ZUeHo0MlRza1dUKzNrMAp6RHRvc1ZkNnN5ZTZUdkJYK1JLQWlFR0gvNWVpS0M2MzN5KzI0bGx3RkRic0FQcXVZeHBFL21VZHNHSTdGZ29RCk54ZzBna0lhMkcyQTFLNldhY0JBaHdBT2RYSXR5cWhZQjFMbmNxaHliYVJjdG1FVnhHNnpTSFIrOG1DWHhiNkEKTUhTeGpMdHJNNFZzQllmZDRrd0F4WnZLbTR2NmI5ZFAxakJhN0FGaGMwK0RwRm5Hc1hZNEM2L3REUHp0TXA4egpCMnFJRlBDb3JOSU01dVN6cWtlSEpITVZNbFlSUUVHdzRCSmNNMi9zcUExSGgyZmlwYStmY2xhZ1lwTCs5ZXYrClZuWVh4dkhYQjV5R2ZxWmhseEhSQlpzRjUzOHQ2ZjlGOWJDUkdUVHhFQVk4WHRZNExsVFB5UmRXL2RqWmM2eFkKWVNHejdoQ0pUOWVHWks3Yi9hM3VKeFVLNHQ4bkJFejdGdFUyRlhhb2V5dmRUNG9ZS2x3OEVUNitsZStJUWVOKwo5VmtrTTBLS0k3NkFnc25DQXZrOHdPM2tHbDlGaEMvZWVtNE8xdWg4SlhMZ3pFck1xN1ptMjFFaGFjR2JHaG9PCk5kZjFIdE1FVmhyQXNIMlN1MElRd21IQWtQeFZkY1BVRjNyN1d1OUkvYnV2UXBEUG84RStJL2JKOG5NQ0F3RUEKQVFLQ0FnQUQyeXdIMkQ4NUdGS1ZEQkFzc0tMdDZndEZYNGR6MEJUMFd1cWtqUXkrQ3BuNngzZ1RxM1Q0WjcvRgpqV25MN0d0QUdsT05BU3VQeHlVQjhheHlwV04vNkJUN0hhZFpBM1BRdzd2bStTTktDOEt2VndoazVLWVNJSWpuClE3M0tuYzFscXptT0ZLMlNhVEEzSjJMelkzSVR4TFd6Ump2Y0NCQUx6bENOSHNJSGg5bkh6S3BadmlVbFgwNHQKOU9nM1BhczFPODNlT3ZIUHBEOWs1ZkdQbWpDWnB6WTVlZ2dMd0ozcncvcFNqUWp2VmZScFpZaUZyZEtVTmF5UQpLQUZFYzNiaXdxdXdseVN0dEpEN2V3UWdKcitkVjFyQmhWUWdKRkFtVmpUSmZUazdRdWF2eStwUWZHc3RCZk5wCmd1ck9jNGVDQlEzaW54STJzSFRaRGJVemM3VE5OR1BOM3g4c0tqbEhGOTJReFBtK0Z4R2VHUFBnTkRrRWdrekoKOXhOVVQzRzZRMlBLY1hFNFFldlUveFBuOStkYVFlV3RUbE5WYWxsT1F3dTlrWFk0c3ZvVUhuczFMVW85Wm9jRAo1U0FZTlkrbDlwV2tWQUVLQVJPKzc5SlNQVnZWa2dmZnBTT0s1T2VBOVlveFJ2YXpvTkxVcEhjd1JxcWNCajgxClhJRnl3Mk5aZ3hFRjlFbVduanc2eFhpRGpDSWJPTXRGbk5Yc1hkM013MnFRRHhFdlFnajQwaGNIT1RFVE5qRi8KWXp1c25TcjZ6dWJwcjRubWZPb1BCVk8vWnh3Qm55Ykcrb0MySzlqSTVIT21aR3VOb1dsakNwM2w0Y1hsV0g3TApsMHA3L3YyRGlnSndaV1lkN0xoSFlRYWpqK3BHVWtJOVdHQzlrQlRldnV6emRTbVBrUUtDQVFFQStscWdWekZrCkFvdHQ2aW9MUUV2ZWc3ckhSdkpQc0dQK002eUxpVXhqam1EOHRrdTYxQ3JKWWUwVnZrcFhHNmJmYXZtMVFDQTcKTkwzZFVmZHkrQ1lMN016RFdzTmtsREM2aVBISllkSHJ0M2hmSjR4ajU2SE16d3JpTVI0RTdFRXR1SXAvQUZTRwo3bU42SERtdktvRFVPSVBxME1YdkUrUFdua2p2OEg3eUw4cDVXRnYzVENmMFRENjlqSFB2TUxFa1BvV2Y2b0gwCjFVUGFySlNMMW1JNXQrNm5weUw3bjUxcTh6ajc4SjBRTExMaWsyc0ZINWhCMStsQ0JPU0hKbVVPWVAva0hiMDkKR0dhMERtdWxoZVZadlBQQmVvanFNOXVraS8wV1lja0NlazZibm8ycTNwMXBPVnhUSWJPTDZwTGQ2Y2V0bHd3NApLeGgyaVB3a0IyWnp1UUtDQVFFQTAvNG9xejB3dDRoRk1uUHVyb1pKWk9NMkY4a3dxOUJhRll1NFR2MkxYWFNNCi9jdURaeC9RcXdva2NTWjVDd0wvVldWY09aZnFuTlljZ1Z0czgycjVYU2p2NEl0ekpKajlqRXl3Ty9lMDBSNnAKRDRYQXBYUVFLY2k1V21NbVl0cFVoTFV0ZWdBeWlRaWF6UWZCRHhLRlNpSm5uVHd2dU1pWW9hb1hUTGFKb2JJeAp0ckZEZGRHN0tLelh1SHpjVXVZWisxY1FKNStRZ3p1QXlGM3JJUjNyWllza2FINGtHYVhIYWRiUEJ2OXBNa0FRClFIOFR0RmVaeG5WRFdNNkpDN21YSk9oaDB6VjZmN0RJL0JTblpNTVdVMmN5MGlVM2pLQVJaclcvWTdBM2QreHcKWWNpNnVRQnZubU9XdEM4ZlN5UEVHaTJhV3ppVU16ai9leHFsMFZxRml3S0NBUUVBM2hJSGluQm9TdzJNMlJxawpVa3M2UE5Vd01SRjllSFNxSndJVjRCc2ZjRXM5dnlKYnZobVorc0JIK2p5TkdoMGlyd3lESnpldjdPL0I0eFJCCktqYnRld2FDL3Y2MU4vSWxkSllzMFJWWkpxeWlrejBuM1c2YmNzZ3ZyZXYzNSsxRTloMzcyN29lMmxUcEd5SmIKNjdMTkRMaVBVTk5TWisxQkViU1hDVmhCMGZ5ak9LcVRLVDJEcVNJNkZ0MDd2WkJVR3hXQ3JZekxOV1YwRW9QTgpxc1FFZU5BOGJMaE9STjVvNFFpYUNtdjN6ZjU3bHRKbWdBa1oxc0MwN0F3ZWlnTTRCdmpWU3oveWNyT2ZZZTlBCnF3MnZWVGxQVlRjZnNCSlQyazBNVG43ME1MT0x2TS9qVW9hRXNQbmhUOUtvK05HQUFRQTdUZkhyM09aZE50T1oKemVxbUdRS0NBUUJtRXdiNkRPaWNOcDA3QWQ5M1lXbU5qbW5KWWpKeFNFMVgrb0t3Wmh6b3p1bmtlazIzSmZhUApwTDZQVFBzVGRrb0RrRjZyeko1SERrR0RkOFlxSHVRYkcwOEZTNkFSaXlqcW1USnliWDgvQWdoZFZRWEJwUFR6CmFaYjJFcSsxQVhPWXdyUTIva2xXK2pHdmI0QmlCWVR3Z1VocXlVUWhNVlZzNGoxOXpwYk9xTUtQT1NOR1k4bysKZDVzWFZlZXdjdU1ueG5BYzVCUHRYSVZSOVFiMlZ6VzFHeDVZd2dRWDVWN3pjMThUKzM5bmxyazhsUE9qN2xvNAoyTldvdVNuNzMwMExsR2ttRGFZQ1BkbElwNWxDUnoxRXczZ1EvNktUcjY4eFNXbnlVak1qSjFHbGc4V0V0dFVICjZ1UHh0bzdXMjAzZFhQL3AxSUJuZVpacWJCWlRpOGFwQW9JQkFRQ2RpelFFYTQybkFidWgrR0diS3NBMVdQM28KeC9rd1FJYjJTYlVjUTl6bUZLdmF1bkI1bXUwbUl3MnV1LzkyNFgxRlRBbVdrNHNlN2luWEZhR0VaRmc5cDNINwpYelR1MHhhT3U2ZGtIaCt6NDk4UWpBV2hMZ0J2d3pkNlhvd1NwOExrczNnakpVb2Vzbys0eG5ZbTF1eDl4bnZNCnBFblhycytHSHNCaVgwaFJ6dlNBdkpJR1FUOFI1VEZtWUo0Vy9iRTRlZjRPQzl2TmNnUTBGUHQ3QTg3dTltdlAKMlJacmdoWG4vTkRwNWpFNm5ReTZrNWF4QmdnbTFwc0VMcWRMblZOZzgyd2IzcXNkRnZrbVRteVhqSVlnQXpnRwpEdFlCVGRoQjZ1TUMyYmp6cm8xeC9ZYU9vRUhSdFVFNnpiQ2JOMFh1NE81Ti8vTTFwVEZhdUp0b0UzRlQKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "caCertificate": {
            "metadata": {
                "description": "The base 64 certificate authority certificate"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV5RENDQXJDZ0F3SUJBZ0lSQU1SeCtmL215VS9MTHNnd2MvdGRmUFl3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXlNRFV3TWpNMldoY05NakF3TlRBeE1EVXdNak0yV2pBTgpNUXN3Q1FZRFZRUURFd0pqWVRDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDQWdvQ2dnSUJBTXdpClF0cUxnN3VTZ2xsVVNrM2Q3ZXY1K3B0VURtZDUxV1pPUzZhb25yNk0zSmllUFZRR2JWVnk1QUZtMkJMT0Ziem0Kcmxkek5KRWgvUng4Q3RpNnZ6dTJaNXlmeis1Q0NzaURRUENwS2UvSXlUZ3JPVXN1cVZVcU5WcUR3UWo3UngwZgp0WHN4cldXaGtFamEzYU1tSmxOTlliMjJZR0txR1dCRWdTcW1WZUJYcjcxMVlDb2ZJdjRPS3dwUXJLdGNyL0lmClJYT0MvdXh1SEJ1NFVaVTJZRWFES1Q2Zml5blF2dyszMUFrcm44cTBKRVN2bXB4NnR3bFJ5MlZyVU1FQ3VpZzAKaVc2SGZSRWY0OXJJb0d0WUtCV3lES2hTM3l6eEdiOURxdEw5QVMrSC9kd1VkSURZY0F3MFRNMllITEdNMFBuaQpGZnpMQVU3eHduby9vYk5WQ3ZoeS9aT01ReU80RGJXWmhxNDhqZUdhQ2FNeVU4WkMvTnhVRHFWT2UwZ1krNGtOCjFCdDdLTlZZUnZvcHR1bEJNVjlDWnB0Ykw2aTAvUm9ibkRWWnlsOW92bmVIRmtSbTdxUnJwZVc4NFJWQU8ydkcKNldxWjFvTDNNdGgyS0puWXB3ejB4TXpodFdaaHU2WEtiU2Y5NXphR2ExTTN5MVlHWU9jNjBjV2w3YThkSm1qYgoyRzBCbU9wY2VnY3hBU1dOU0F4cHpkNm1JZmNobS9Ld2RaSE5XaEhPd2VSbndjbVZQOCsxS25SQU1kSndCUFRICmZRK0FGaXhNdEE1d3kyTmRGNW04U2V3RTBaRFJSMUdva2owWnEvVllCWnF6VlJqZEtYZ3o1U3QvV2hidzRKeDUKeHdOM1VUc2JoMkp1RG1XZmZoMXFTZzJzV0FBUm1qTEtYYVJlMU51aEFnTUJBQUdqSXpBaE1BNEdBMVVkRHdFQgovd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmFaQmwrCnRONi94THdMRXppS1czOTQ5SnJqbUVJRStrMEFPK1NRL3NUL2lDcmVFVGI2UXZSL1ZyN29TQnhwUmltdHh1YTIKU1hkT3FOb1dpYjNyOXRoUkxKS29tQ1F4WUJCM1JRLzBLU05hZGpZVlRrRFRNQzViYVFiSTl0SDhjL1I5ZmZ0cwoyNjN3OWlMaDNxNzV2bzRFNE45d2dXM0dlekJFMzR4cEZWMitWeDR3RDgrMnc3TG42MDhtNU8xcWRsSEVSOUc2Ckk0bmt2VGxHM0lIcmlkTVJUL2hIWTFvUlFiWCtTNU1xZ1ZmQTJZekxOelhTQVV6SWtqMjNxY2Z6L3hVZEd1QlIKbEU0T0JHU2duTkxZZkRzNHZuWUt1ckFjN2N1QkUzZDhtcFFrdmlCNHJPdjBubnNxT0NtREVaaTZEckRTUS94ZQpINlFYd09nRXloQzBzYTYyWVUzMTN0VmtjVWk4N1ZvaEN3MmEwSytsQWVibU1xVjhQdTl1N0pxeTRGc1ZudVdHCmVYMjZ3S09haUtDdFVWVzJFc1pLa2szWTJIUVVXZGZJUktsS3dtOC92Zk4yQjVaNk9tVGtQV0FlcEFWdlB4ZnoKb201T0pWdmk4dGkyaTgvMWJjeDRCcnVKTHRGOGxPM0NiUFJXWWFTOEMrUzcwTFc5bmJlWFRWNjltWFN2VzBzUgpza2xyTnRCcDlTV2J5ck9aZ1N6eUM1Vm54ZlZDbGw3Y1YwWWZyK2h5cld0ZjJ2MjAxaUZiSHk3VEtocVF6MHM5CjZPbXNoVUdYZkxSL2gyVkJMV0Q2L215RWJYVnFUbkpld1dYb2xEWEtsWkdkQ0JxWWhGZEswbEl2cGUrc1hIdnEKdlVFUDU2VEtlQ0lKL3RuWkRleXpXbVRNcTBYajFPVUUwS1JCbUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        },
        "caPrivateKey": {
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBekNKQzJvdUR1NUtDV1ZSS1RkM3Q2L242bTFRT1ozblZaazVMcHFpZXZvemNtSjQ5ClZBWnRWWExrQVdiWUVzNFZ2T2F1VjNNMGtTSDlISHdLMkxxL083Wm5uSi9QN2tJS3lJTkE4S2twNzhqSk9DczUKU3k2cFZTbzFXb1BCQ1B0SEhSKzFlekd0WmFHUVNOcmRveVltVTAxaHZiWmdZcW9aWUVTQktxWlY0RmV2dlhWZwpLaDhpL2c0ckNsQ3NxMXl2OGg5RmM0TCs3RzRjRzdoUmxUWmdSb01wUHArTEtkQy9EN2ZVQ1N1ZnlyUWtSSythCm5IcTNDVkhMWld0UXdRSzZLRFNKYm9kOUVSL2oyc2lnYTFnb0ZiSU1xRkxmTFBFWnYwT3EwdjBCTDRmOTNCUjAKZ05od0REUk16Wmdjc1l6UStlSVYvTXNCVHZIQ2VqK2hzMVVLK0hMOWs0eERJN2dOdFptR3JqeU40Wm9Kb3pKVAp4a0w4M0ZRT3BVNTdTQmo3aVEzVUczc28xVmhHK2ltMjZVRXhYMEptbTFzdnFMVDlHaHVjTlZuS1gyaStkNGNXClJHYnVwR3VsNWJ6aEZVQTdhOGJwYXBuV2d2Y3kySFlvbWRpbkRQVEV6T0cxWm1HN3BjcHRKLzNuTm9aclV6ZkwKVmdaZzV6clJ4YVh0cngwbWFOdlliUUdZNmx4NkJ6RUJKWTFJREduTjNxWWg5eUdiOHJCMWtjMWFFYzdCNUdmQgp5WlUvejdVcWRFQXgwbkFFOU1kOUQ0QVdMRXkwRG5ETFkxMFhtYnhKN0FUUmtORkhVYWlTUFJtcjlWZ0Ztck5WCkdOMHBlRFBsSzM5YUZ2RGduSG5IQTNkUk94dUhZbTRPWlo5K0hXcEtEYXhZQUJHYU1zcGRwRjdVMjZFQ0F3RUEKQVFLQ0FnQlNyUUdrbitLL29tdjJvQVBrRzZGVDlJL0NQejRDUEw3b1M0ZXFQUnJtRkFqNEt3YXR0Rml0eGZXQQpkOVhGY0FBdjNNSDVteWhNSzVibTVYcERJd2QydUw2b0diWE9TcU14YUs5eGlTSDZBcmswYlpVcjFQOHlCZ0ZMCjRwYlkrMlJtOEVQQlhISmMraDJFMUZmMXp1cXd6R05zd2FPeDhqQ0s0OVBvb1N1Z3pBTGFXZUtUekw2UVpNNmIKdytiYkZKUVNIUVkwN1hZdjdieW1vWFV4V0srUGYybkIrajRUdG43YmI5bUp5VWhUZ2JnNnRXQ0tSYzFDRWdXdAowdFFIQ0FLN2ErUEpoMGhwR2lCZnFPZ0g4ZEZ5VUFWK1d1b1d1cU54Nm9jU0l2UksrdW9mSzQydjdYa2NDRWFlCjhoK1U3WEpwOGw1elh3anRuMDdqMGtlOGFSSWlxc25nVnlMZGhxTlA5WXNNSHJWeURGRTZMTlJ4aVVKVUdEYWQKTlpQVlNRcit4ZXg5RzJMbldoZDkxUWh4TG9ySjR3UklFbDdkdHpFQzU1N0NYajlFc2xidzV3R3E0a28xQXRuZgphMHNrbW1VUzVKazBMWEVmTjN4YWxNM25EVkNkNVNrRVlqeXNqZEc4Z0lRK2YvSnY5QVJtVzhRZ1hnaUZVS0piCkNuVEhXUVQwUWpiek9NN0VFdjJQcDFZc3pIcXFJU0hxL204eHF3VkRyVUlnaGVFUmNFSmt1ZzBvRDRXcWYrdU8KUDM5MG5OYmFGSmxNSkxWK1dDRDlpOTYyTzNqVE5ucW5oVFlEb3VBaFl5K083bmJVa2N4K1lSRmdsMml5QzhaQgpVN1hRS0RnanZhRlB6UHJVeE9OZUVaK3FVbm4zbXRaNzY0OWl5WEM4V0JnNitldjRMUUtDQVFFQTRwdzlGMHBuCmFwdUhMOVFhMXNNQkV2MVJvbXJHNkJWZ1pNVEV6M0hOc3p6ZDZEYzlKb3ZVUHV3M1pMSFdLSGNwK0hBREp6MGsKWk4xOXBZaWt2aGJ5QzRxSkhtT2lPR2FQb3BjczNDaUo4WFRNOWNtRHdTa2RmaFBIcnhwa1VQMGcxalZraXFCRgpqS0w3YzZkK2ZqRnVlTHA5SG1yMHZpbmhoSkVDYkgrVVo4MFo1ZWJtNjlKaWdMY1FNc2ZkTDd1YmRKdW9DSEQ4CkE1akJ2UGRnaTFUSU81RWxaVy9IWmdFWEdOVmNEaDhRQkFPTE1Xb1htbExBTEtGSTNjeGV4UkszV2JtZHo4QVQKVFIrVWVMM0JUZ0lCK3Z1WVdvUllYaEtvbkRTb2haMnk4dEJtUUhVS0FVdTlGZjBsMkt4a29WbmFpRk9wODJsNApsbmlTREd2eDFtWFVPd0tDQVFFQTVwdkdIU0tXV0gya282d0ZSbmg1a0EyN1MvZDY5dngxUHVZakFTSmtTdnpVCm9US2hxcGlQZzF4NmNzbEdkSFZxOXJWV1pBSHlsS0h5OStYUGRueENpUjVwWEVlUERvS2NGemd4SUcyenU3VGYKRGM3dFFRQmZqaGZYU3lBd01iMzR3WkVLdkZLYkV4Y0EzbmRiUFYxWEcvMlE3MmhZWTFzMHVuMTlLcmJIZkduQwplVmRaUFVwQ2NDTzcya0tlRW1IOUtrZS9zVzZwck5LVnIyNlczK3NlUWVDWlBHdmE5bWxJZWJVUlRKSDQ2K0ZuCkFibVM2RktkKzRhMjFDbkFzK3UwZVNJMkFCV3RkaE9BZUdEUUw4dzMwTTNjNlF1SHVzbUYrRVRXUDVuWUxxR2QKdVVSRDRINC9KbjZrNUM3TThGUGQ2ZlVEUHVuUnVrOFY2R0tScHhEZDB3S0NBUUEwOXp1NE0rWFVIeUlMNWRHWQpIT0FsWmh3c2tEU0pqbVdIYUE1d1JqTkVENWYyYk9MWUhacXdVbG5vS1VEYkdHOHc2RTEwWUhBZk96M2c4UDFBCmlQQnVEaVZhZXdNeGw1Yys4NExDdXA3elZzK0pLMTZtU1V2aGFoSWtOVkQ1TlJEMXdHa05sY1JyeUxScEpkOEUKODl6VVR4SnJoNmhJd2xVNXZRTUtCUS9VNnpXQWJPWFFmTTRWTTdTUGlmT0M4cUMxTXFTbHhITERESE5NRGEzOQpJd1hpRmx6ZFJyRWVnR2E3b1RMeEFnV21Tb1hBT1FIblNpd3N3azNidWFiMC9SanAyZDZ1N2tBVXFLcjFSYlRtCjNNVkZ1b1N6czNkTUZhUmZUbGVOVTN5K0VFTzJFU1VUaEhaZnExbXJPVEFVSG9KYmx1S0VTRVN0TnVVOERnYnEKaThaOUFvSUJBRmRiUnc4ZVhRbWtmc3VwakU0SHNUVUtucHJHWXdSUTJqRTdpS01UWGg2eDYvSXNkZVZqNldsLwpqTHNTMStlaDJ5VWR5RjRXQnNpYkdLa2pteFZ0T044c2NBa082bmc2cmRwMTVOWTkrRW53MkZZb3Z1TlN1dC9lCjFDV1hTZXB0NWwrZERBNE8xTVBFZ1FYRS9RRWY3TEdqdWxXV2wzVDd4ZHVuVWRUdWJGOEt5U3FpRmlJTGtXTmQKaGZuR0pvOGNJNFR5clFFUHhLSzlHd3JidjdlUEgyVWhLYXNqeUV4ejBZcVpOclprellDOVlBSGRSSE5SYUpzeAppdXlQN0htN25pQU0vNXZFbW5NU0xDWnR0aStGRXRlOFJDVGJ3MHpVcmpWQURsRUZmRWtkMjl1a3Fubk9HU29CCjY0Q3M0ZUZnUTc0dW5FNG0wTlhjdzVYR1VScVNYeFVDZ2dFQUpSUkdVcTZ4WUFGN0lWSFBxWVo4S0VRL3loekkKQTdwY0p5ZmhMc1NvZVpMSlRZNHJTR2lDZ016VW44TFJRV1c5MWhJY0xDeXlkSk1aNWRVREpGY3ZyRkZCWnJ5UQpiWlJpZURpemhsVlJublFjUWNIVDA1K3VWekZ0VExLc1B2clo5N1gwTXUvMyt2SU9JNWhlM3pBVWlHK2VoYnBXCkpvVVZCN2k4dlpzSnVpaWNQWG5XMVQvQjN0QmZVS2VXbW5QQmMxdm5mUW5WMFlIdTNPN0doZGRTOC8zMWlVQUUKMXYyaHFsZDJVVzVrQUhEcEdXbTE0dkVrTGIzakhBaXhndEJHeEVJYmFIQ1BqWmZzbXU2VWFyeWVEUWtnT2svNwo0NlNlV0JVdXlGS0JOMjYzZnpJMmlVZnFNWnlPMi9xYmNzVEJsN1JHbjYxOElWUkdET2R3U2RJUUlRPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
            "metadata": {
                "description": "The base 64 CA private key used on the master."
            },
            "type": "securestring"
        },
        "clientCertificate": {
            "metadata": {
                "description": "The base 64 client certificate used to communicate with the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5ekNDQXQrZ0F3SUJBZ0lSQUlKOWtWdHRIUHNIQmhzU0I0TXRNS0l3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXlNRFV3TWpNNVdoY05NakF3TlRBeE1EVXdNak01V2pBcQpNUmN3RlFZRFZRUUtFdzV6ZVhOMFpXMDZiV0Z6ZEdWeWN6RVBNQTBHQTFVRUF4TUdZMnhwWlc1ME1JSUNJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQWc4QU1JSUNDZ0tDQWdFQTBkb0RDR09LUnNTenJwd2Y2ZEVDeWVwc1paeW0KYlVzSHV1TW5xWGtiZjRocXk3QWM3dHNGVVpvNTI5VTdVb2RPK2NTQ1pTVGUydDRlMXo1L04vS2QxRXZhSVVDbgpwYkg5Sjl1ZVc0d3ZKK1cyZXJRTHBiMGkzdkY5cnZweTRDcVF6UHZrNDAxMjM0dytRN01qQ214RG9SZ3NXbGp1CjZVa24yRlM2cHAvUW5iYVorYVFaVXREeXQyaG4zeUNqOVNVY3dmbkZqK2dtNzVOWnRCOEsxQWxzNk1ucUVrWWUKUjFXY2Z2b3V2VlFYeDY2Qk0yQkI5MllDOHRmMlZTa0tjTURDY1VLRjlZTjBNQlNxclJGVy9vT1d1WUQ3SmF3Wgp4WTZuREV6bWpIRVZoYUhyR1dEdFRRSzYwckRGSFZ1RGd6UkdqNEdJZWMxVXVENmRONldCakF2WGJ2UGM1WWYzClVGa2hJNFp3ZERjV3ViV29pV255bzE5VnVrRWt2Rnh6ZnRrMTFnN3NkbGJIcGtPaWkvZ24xOTNtUjYzZUhnWmcKMytGUVRVZVpDcml2Q0QxR2ZRTThTTHpBVGE5QzJUK0dwWXpJN3pVYTRqelBpa3BnSXZoMXBhUTlhUnc4anNmOQphb3kvV2MyQVBiVHVXTkFNMENmUk9tdTdlaDR6NUUySndmREE1MXlYajh5NXAxM0ROMFRtYitUUzBwaTBzQTMxClZ3RTdrWHpPaWZaaVE4Mko1VDlRY2tlaDFYYzRHd2MzVTlkVExtN0tYWFdFR0VTY2tmOS9MdW9MVG5XcmNCVkMKQzJvbnhCWVdWdmRMdkFtY1NyTEZ2WXA5c1VicEtPU0pOak9iWjhlWWVPQm9ab2w0OTR1akdHdldwMEZTVitqcQpUNzJtSlc0eWZmTTE2ck1DQXdFQUFhTTFNRE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HCkNDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUVtTlRaaVAKdGpEcElXdWp6NEtLWG1zWG9sRCtZeUlQUWl6MUFEZ1BDL1Y4SExKZ014VFZJSkxDa0FjOFVBRkhrNFh3KzVLNAp6NnpBRkt5UUMwNEQ2SEl0d0d4ZkQ2K1RiRUVMQzNKbVB3Q3ZJOXMwZUpsVlIvdGdsWWZMRWw5S0VleENrZlBjCndKSkJHajhjejA3aHVrRzN6M1pkdUd6ZllxZmp0L09hVnRPVVFCNVRLdHRyMVBDUmFCbkt5UEhDdTNoZXE0NUsKaCtzMFdObGhrMWI3SS92WkVhV2lPTUxZTVFUZy9pd0VKTUdNWEU5ckR2SWpPdVg3RlJsbFpQTmg0VGowVEZoRwowU0dIcXBSZ2tiQ29saEJ6alJ0YVFtM3lyYmtiTW1TU3hkeGtFdC84cHhaU29lTVpQT1lhTEsyTHMwSVAyQkdYCmEwTjJIUjVWNHpiYjNWMS9Camdzd0RKejg1S21nMkxzMXNlYUxWUG05Ry9ZTlhpdjlldTBtNE4wYTF3MWdWaSsKU0dBU2hidTdRZXVVdHAyL2NRY2Y3MTJZWlNDU1dCUHdEZDhIbmFuT2tRYmpDbGVZRzdZMDdMZnUrWnBndlJBbgpWeTJvQmZYVVZFRkxWVmY5Qy8ySTAvUkVpNW12MkFBWGZxN2syaSs5eFhibTJWRmFGVW9OMHVYa0VDcXAwc0xzCjZjSURvcW9oL1BTaWtyVDFMdTZOQVVFSEVSeGJ5cmpHdUx2RlYwSXdoNGdNT21hOVFKdjNwaTQrRCticFhKeHAKL2kxektZM2ZMc3V6Zk10UnpRNW1yZ3YwVVBROFNPMEtrUEUzeFVITm5JNFdsVFEzY2l5bWtMNktmSXlFZW5GZQpHQmYvNGZ3VE4rL210b2U2ZUszTk5XSnk0Sk81Qmt4OEh4RmYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "clientPrivateKey": {
            "metadata": {
                "description": "The base 64 client private key used to communicate with the master"
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS3dJQkFBS0NBZ0VBMGRvRENHT0tSc1N6cnB3ZjZkRUN5ZXBzWlp5bWJVc0h1dU1ucVhrYmY0aHF5N0FjCjd0c0ZVWm81MjlVN1VvZE8rY1NDWlNUZTJ0NGUxejUvTi9LZDFFdmFJVUNucGJIOUo5dWVXNHd2SitXMmVyUUwKcGIwaTN2RjlydnB5NENxUXpQdms0MDEyMzR3K1E3TWpDbXhEb1Jnc1dsanU2VWtuMkZTNnBwL1FuYmFaK2FRWgpVdER5dDJobjN5Q2o5U1Vjd2ZuRmorZ203NU5adEI4SzFBbHM2TW5xRWtZZVIxV2Nmdm91dlZRWHg2NkJNMkJCCjkyWUM4dGYyVlNrS2NNRENjVUtGOVlOME1CU3FyUkZXL29PV3VZRDdKYXdaeFk2bkRFem1qSEVWaGFIckdXRHQKVFFLNjByREZIVnVEZ3pSR2o0R0llYzFVdUQ2ZE42V0JqQXZYYnZQYzVZZjNVRmtoSTRad2REY1d1YldvaVdueQpvMTlWdWtFa3ZGeHpmdGsxMWc3c2RsYkhwa09paS9nbjE5M21SNjNlSGdaZzMrRlFUVWVaQ3JpdkNEMUdmUU04ClNMekFUYTlDMlQrR3BZekk3elVhNGp6UGlrcGdJdmgxcGFROWFSdzhqc2Y5YW95L1djMkFQYlR1V05BTTBDZlIKT211N2VoNHo1RTJKd2ZEQTUxeVhqOHk1cDEzRE4wVG1iK1RTMHBpMHNBMzFWd0U3a1h6T2lmWmlRODJKNVQ5UQpja2VoMVhjNEd3YzNVOWRUTG03S1hYV0VHRVNja2Y5L0x1b0xUbldyY0JWQ0Myb254QllXVnZkTHZBbWNTckxGCnZZcDlzVWJwS09TSk5qT2JaOGVZZU9Cb1pvbDQ5NHVqR0d2V3AwRlNWK2pxVDcybUpXNHlmZk0xNnJNQ0F3RUEKQVFLQ0FnRUF0WHp0MkloMTQwUmsvYU1LdXFYSDJxYkNQcExmSUhDZWE5UGV6bVB1RXpzQTJjNGpCN1FtQW0vMgprQmYyNlNZYWVFcXFWeDB2RzJ5MGtZVDhjMytCWGtTSGp2Q2l6TnVGVEw1VVUycUdzZU9xRUs2NzBBZ21LMWdCClVaNUtVWEtlcnBrL1dCSDd0OVJMV1RPSkg0K0lZYjlOUkluYmZhaUdMRU1DOWU0TGR3cWdXZFhCRE8ybXJGWkEKVnltY2d2d294ZDNsTGRNaU1WcG5YeTdscDRITFRmeXFVa21RRURPTFdBbTQrSWJNMWlZbW1TOHJmZkljcExkLwoxQ0RkWmF4ZnZhSkJ4cFo4bXNTVTQzNjJsUUZyRGwzdFZxUmoyWWJKRkF0QjdMNDBWZEUyU1VtWmtWdkdCVWRhCkFrek9EVi9ka21qOWhoRzlybWFBZzhyQW9rVHZkL1d0N2ZPUVdoWmErT2lrWHQrNGRoME5lUGp2UVN1VnhZL3gKc051KzNJRXlmL0xZek5EdFhuR3FMR2FZVi9YUEd1ekJSY0VhWlJZWDZjZWNkd1NlM1FPQ1VGbElkOGo3MHRzYQp6ZExEdjB1NXR4eU1ZL0hjUWw1Y1lFaFRML1UzQXg1dktSanVmV3pCWmsySWE2U1N0blh5MjBoLzB6ODcrZTBpCnpObTJwcElDR0xzK2F3NE5MRFN5THdGc01GWUI2bURUZy9wYlJCcmJtbXlCdmREYUhUcll3TTh1bGIzSEVqVVYKdE9jVXUra0lLQVpJd0lqWmRUTVkyOEE5Y0dnTHZkdlhUTjQrWkx0MWs2LzBwaldyUWI4em5wNmlGTTlXMzNFRApRRlViWHpiZ3BYbmtndDFhOCs0bys2OFBhQzdvY29MVWZTcldhMXU1aVQ3Z0ViYXBkZUVDZ2dFQkFPMGVZYUY1CkhtWklDaUZVNlpFTi84VHJaeW9nZzgvclo0WmxBYWdESkhHS3pJU09xYmhuU1JmcUlqR2E2SlpUbys1RFF3NWwKNFJrVUxIcWgzT0lZdUdDOGRrejJSZUk1cHR2cDFYYmxoWWpZcDcwbTBteDBFYXM3Vmp0TDF0eXU4SEJCQUkzWQpHdVlJN2llczF0Ly9hK1I1UFNTZ2RrTW1jVjNpSFRnTmNsb0xoSE9rVjZMeVFKNlUycDc5RlRJQ3hqaDdpMTJOCklOVDFWU3ZTNDBnbWpOWCtzVml4Qm9ydWlmY0N5cHl6dTM2UkI5Njl5ZU1XU1RZV1hDT2RBRlFsWTZhdGxVd2QKc1lOQ3NhZkpzYnNGdzdFOHc1dHk2c0E0ekxiZmxXbXhvc2IrZFBBQmdsSkY2OVpoQ1k0d2ZRcDVNU29aaENyRgozMTBpSnFCUXZqNFRGQU1DZ2dFQkFPS1B5K2x0YXRMalNzZ3FjYnJQS1lXeUc4WnJ2bHVadFBJVTJld0xkOElzClNqeFIwRWRFWjNSL3hQZlVGNXV5QktMVURuMFNnejE3b3pRU0l0ekRFSkZhY1owK01tOUVHVzZHRlJiSWZmVzUKZjA2UW5ieEIyZ1FsZzlkZ08zVXA1dDRMU09NTE10MkxzVTNXZ1B1NGh0QkRSRlhJSHV6VnNJTmdtTTd5VTFXbAp3b2ZkRytWU3hWbFM5UTlvQ01VVHNudGNITG9PM3JLNlRJN0p6Y0dQZFRNekx2eXVLd2pGVi9VQ2M3Z2ljanRNCjZDVVpuTVBrRmlNeVgyeml1YjhNZkVZdE43b25qdURvcVg0bjUvb01Ra0Q2eldqdnZVVlU0ZjlwSTF0SDdsTlYKZlNZa3dYNTU2b1hMMW82d2pDRnlhWVlyV0VxejZoaVBwTmsyZE11ZWg1RUNnZ0VCQUs2MndSYzZhRVRTOWV2agpaZ29FZDU0QUdjNjNrSWdHR3d5eXBnckc3ZlpmWUJ5WUJjUWpEbjk1ZStKekVzZVpMMlBpMmFqbE5udkZHcFR0CmFSU0xSR2U2MWF3VmxoNS9ma3Z4dXVEVmM1UUdsMm5QRGlMdFR3dU5PQmVPNU8xTVZVdFJDZmg1OEMvcENwbmYKUjZCYTBvUFJOVlVraXA4bDEwaG0wRUs1M2JVdFlWWFlGTjZ5Z3h5Vjc1UlFSR3JLRW9ZUnVmbWZnRDZKMmt6bApJYVRMQ3VDdXZydnNERGNZVmozVUo3aFkwbUVLdWZMTWd0STVYSTVtNFZNNFhzS2huaEIxUEZtT1UzcTFETFBsCjhIZ3VZaWZZN3dRK0kyeXBMV1hkem5qSGMzb09pZGxDTTJVdHNmMFBHUHhWQy8xSW1RbzlMTjViV0I2R2lGRjkKelA5dURVTUNnZ0VCQUx3Ni9nNU04dENOT0ljL0JFaFJiMHo5b2lmalFqODJYK2cwdksxcEJiR1VQSVVLOEFFVgo2dUlXZVYzeG56K2kwa2s1NTJPd2FzczlHbVhibjQxTW4wbzBHMnFwenhzME4vRGtnMGJ2Z2Y4U2c1dVJlUXQ4CnBwYUZXSmtyQVpzaEdnZG0xc0tUZmtva2trVjZMcVYwTk1WNDdhQmJhSjRhRjlHL0FwWUZMSWxlODFVUHRlcDgKTHl3OFNRL292a2lHU2VaRnJEUkV3Rzg3YXZuQzNpaXZlSTcyT2xhQ21ZeHE4TjNGa01EdUZYd0JOR29HY29FcAowZDZpTGpmMzBwelEwYnM0UERGMFJqZkQ5WFd6ei82bUNyR1Q3ZTcrSjRFZnViZ0s4TzRZd0FBS2FiUzBHdkpxCmRoZDlPQ0JLdTlIYURhUUVCUkhqa2wyZmtqVkpFaFpOK3BFQ2dnRUJBSVRIRS80WVNCMXcycWZsTkkrOHFsT2YKbXVmM2lFRUdUa3VkRkc2eWdOMVhlSmFBemwrWjUvbkRQVGI0NUtQeUJWaDAzckxIdWhxS3dBd2J0RTZqOUVkdwo3Q2dpZjUralVVOHFDcmRMNVpaQU4rbnplZ2pncjVTaVVUd1BlaU9LL0NIRFJBVGx5NGtVa1VuT0sxa3RSSDdRCnZDam4rVnRXa0FETGdIRTBPUXBKc1lBdEFncFpCNjVOaDlhVTcxOEhsREFQMjdndFBRekFJTGdZY291dEJYZUoKMWFCYks5VXJMWHExbE1YRm5hb3BDWlB5Mlh2VFRoQlloSXExRm1wTTJ5WXltNHhTYmtSa3N0ZDdCYm9uT0c0NwpxQXRnQVFDdnFRZFA5Wm11ZVNUcmU2bW5GUWxPaGZLZnMxcTU4SXRPdUR5VUd1UmxSZmFLRG9weU9HVStKbWs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
        },
        "cloudProviderBackoff": {
            "defaultValue": "false",
            "metadata": {
                "description": "Enable cloudprovider backoff?"
            },
            "type": "string"
        },
        "cloudProviderBackoffDuration": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, how long until timeout"
            },
            "type": "string"
        },
        "cloudProviderBackoffExponent": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, retry exponent"
            },
            "type": "string"
        },
        "cloudProviderBackoffJitter": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, jitter factor between retries"
            },
            "type": "string"
        },
        "cloudProviderBackoffRetries": {
            "defaultValue": "0",
            "metadata": {
                "description": "If backoff enabled, how many times to retry"
            },
            "type": "string"
        },
        "cloudProviderRatelimit": {
            "defaultValue": "false",
            "metadata": {
                "description": "Enable cloudprovider rate limiting?"
            },
            "type": "string"
        },
        "cloudProviderRatelimitBucket": {
            "defaultValue": "0",
            "metadata": {
                "description": "If rate limiting enabled, bucket size"
            },
            "type": "string"
        },
        "cloudProviderRatelimitQPS": {
            "defaultValue": "0",
            "metadata": {
                "description": "If rate limiting enabled, target maximum QPS"
            },
            "type": "string"
        },
        "cniPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.0.tgz",
            "type": "string"
        },
        "containerRuntime": {
            "allowedValues": [
                "docker",
                "clear-containers"
            ],
            "defaultValue": "docker",
            "metadata": {
                "description": "The container runtime to use (docker|clear-containers)"
            },
            "type": "string"
        },
        "dockerBridgeCidr": {
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "Docker bridge network IP address and subnet"
            },
            "type": "string"
        },
        "dockerEngineDownloadRepo": {
            "defaultValue": "https://aptdocker.azureedge.net/repo",
            "metadata": {
                "description": "The docker engine download url for kubernetes."
            },
            "type": "string"
        },
        "dockerEngineVersion": {
            "allowedValues": [
                "17.05.*",
                "17.04.*",
                "17.03.*",
                "1.13.*",
                "1.12.*",
                "1.11.*"
            ],
            "defaultValue": "17.05.*",
            "metadata": {
                "description": "The docker engine version to install."
            },
            "type": "string"
        },
        "etcdClientCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQUtmOXY3cUpxRW5yNVEyY2lKZ0FGTHN3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXlNRFV3TWpNNVdoY05NakF3TlRBeE1EVXdNak01V2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa1kyeHBaVzUwTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBNVp1M0ZXUEowNXBRditLOFBycE5BYWJCZ1dTNDArWnRtUTRnTEw1QXg4QURHRlVCRXNDWlpDM3gKbnBoc25mNGFvRHFpME12L0hEQ1pLZ0J2WVRKcW9NUkcxZFZwcERxTllwMnhCYk0vWS9xV3p4cFBFZW9OZ3V1ago5Ky84TUg0Rkc0cnl0KzBRZXN6d3VzMlhDU2lKRW4vUC9aZ0wrM2x2eVVpcDNoSEZVK0RHSko2ZnZtaWJtdEpkCjBMdlNnYkZpS3cvNEZtMjFFUXI4aE4rajVEN3NQZUVsMHh2dVZOQzhTczgvbmZVZElYMFljUVRKRzJtYWNNWHQKNld4MWh1ek9MQlE0bUFyT2hXWE9EMGdUTVIxR1hPRjJ5RnRxd3R6OXVhNldKUlVNRlpWcy9wTjc5TXB0U0IxZwp5UkJleE9FOWVSL0VFR3pMTjhwOGRTbUFuSzNkSjMzbEllQnZRVnAyWHkwblNDcVE2ZUhLQzdiWXJ4VnVTUFdPCmV5YjhlbjBJT1R1NkJZdnlPWm0vcWVIVzl5QzhKNjFINzNvSDFzY0Q5bnhnbUtEOTc0QlNrdmxBU3F4QTZ6WEwKNDJiK25KcVBBck02VlN1N0hQNTZ4eEdvZXlNcXNGQnJoT2FvMmp2TlJxTnRvV2VOVW4xaUJjbTlqWm5aUGhMegpNa0lyNjNsb2pvUVJGZ05lK1BKWWVKODQwV3VPR0NtTFFmQ0pZYUlhQlNpc3VaVVRhMjEvbTA1ZTFVM1dFd09qCm5OME14eEdqNXl3OVRoWWowOGd1NWJZWnZWd2hTQmM0Sk1Zakx6OU52RllLQXBnb3FXOERSendlT3VCcGErZUQKc0pibXNWbXBQTjVvcllySnk1aDBZQmFWb2xCSGhuOStsY3RMUGhEdWNNQThOd0hMcjFrQ0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkI0QkFBZUhCQjRCQUJHSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQURmZWlKd2o0MDc3S2Z4UXV1Q1JBU1ZjNEwraXRjWG9xY05QQ3NwbApFZDRUQ0lqNnFGVkZncWNVUHVwOFJ2b1QyVWV0L0h2VTk1WWQ2azZ5RWFYQldzTjFhWEM0ZjROZnJkTEtEWGt0CmRqQ2MvRFN3NUw5L3ZURng2OG9BbW5TTDhjQUhVR01JU09sNVBNTlI2RmVxcHNMb3RYdmt6SklZRTllZ2VaZTkKOGt2R05xQzVYelBObWdGRGd0bXBSMFgyYzg3WTUxY2JBWFFVcnQzZ0tLUWFzZ2o4TFlGUWcyZ2d2dGs2T0tFWQovYjZkcVlVa284WmJ3WkhpZDIyYktoWXdkSklOTEhLT3lpVlFqM1UzN05DU2NUbEc0ZE5CZWYzUzhFa013c1FzCjBYaEhVUnFaQ0d4WWRJSWppdWJEeXBGUVNHZ1AvSmNiUkF4SHc4SEorQXIvNEg0YTJnVmNRYmN3RndjZDNvUkYKYXV4cGs5Sk9pY20wRWU2ODV2cEZWWnJxZGk0VnNOSEQxUHA1V1NjQkJId0o0UlpzTTVKR1hWcFZzYStjZGYvNApCUFh4czB3bjFTa2x2U1JrZCtrcUZyZ014b3VPNnpOUEJGa2hKRXY2VnhzSkRIbDY2VFNxUHZSOFljcFFXWDB5CktTNkRVN2JMKzdWQ1ZYL24wa3Q1Y2tEVVRaTTQ4VTE2UkxQUUo2Rk5CWExQNDF6VWpIeUdFVnJKUlpKdUZxdUkKWWp6ZEoxMjVYQWJBWTJjTyttWm1oVjJCWUg1YVkxRldMUzZyVmhSdURCK2VZWFB0TnJwM0pXa3RnZ0VPazloRgo0c1NxbDJmMkQ4VFdoZXdOb1JBYlFTc1BsTnRRTEtLRjBjV0FsS1dQSUFRZTkvQ3IyODArTFJwaEd2WFVqOVdQClkvY04KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdClientPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBNVp1M0ZXUEowNXBRditLOFBycE5BYWJCZ1dTNDArWnRtUTRnTEw1QXg4QURHRlVCCkVzQ1paQzN4bnBoc25mNGFvRHFpME12L0hEQ1pLZ0J2WVRKcW9NUkcxZFZwcERxTllwMnhCYk0vWS9xV3p4cFAKRWVvTmd1dWo5Ky84TUg0Rkc0cnl0KzBRZXN6d3VzMlhDU2lKRW4vUC9aZ0wrM2x2eVVpcDNoSEZVK0RHSko2Zgp2bWlibXRKZDBMdlNnYkZpS3cvNEZtMjFFUXI4aE4rajVEN3NQZUVsMHh2dVZOQzhTczgvbmZVZElYMFljUVRKCkcybWFjTVh0Nld4MWh1ek9MQlE0bUFyT2hXWE9EMGdUTVIxR1hPRjJ5RnRxd3R6OXVhNldKUlVNRlpWcy9wTjcKOU1wdFNCMWd5UkJleE9FOWVSL0VFR3pMTjhwOGRTbUFuSzNkSjMzbEllQnZRVnAyWHkwblNDcVE2ZUhLQzdiWQpyeFZ1U1BXT2V5YjhlbjBJT1R1NkJZdnlPWm0vcWVIVzl5QzhKNjFINzNvSDFzY0Q5bnhnbUtEOTc0QlNrdmxBClNxeEE2elhMNDJiK25KcVBBck02VlN1N0hQNTZ4eEdvZXlNcXNGQnJoT2FvMmp2TlJxTnRvV2VOVW4xaUJjbTkKalpuWlBoTHpNa0lyNjNsb2pvUVJGZ05lK1BKWWVKODQwV3VPR0NtTFFmQ0pZYUlhQlNpc3VaVVRhMjEvbTA1ZQoxVTNXRXdPam5OME14eEdqNXl3OVRoWWowOGd1NWJZWnZWd2hTQmM0Sk1Zakx6OU52RllLQXBnb3FXOERSendlCk91QnBhK2VEc0pibXNWbXBQTjVvcllySnk1aDBZQmFWb2xCSGhuOStsY3RMUGhEdWNNQThOd0hMcjFrQ0F3RUEKQVFLQ0FnQmZBUkEvTkh2MUp6dlVPYy9rTUpmZVlBNWZLTHJsU3NuOGM0RFNvcUlSUkp6RE82RG5EblFwcEd6KwpUMWxhQWlNb096clZKQ05abWE0MlY5bStJT3RIdkE4SE9YZXRzV0NBOW5paHdDb3hoeVZSYWpSZldEWGcvdmxvCmhJOFh6WHoxaVllbW5OdWR4Q0N6V28vdEJTMjZUdEpUdnM3dWJhL1lYRTJWQ2t0WXluK1I5V1JwbDhVU3lZcHgKN05WTVBvWTlCUzJFc2o0aVlDWmVJRjhpK1BvdEhIVFhKZzUyWDZ3WlZDbWhoU05aa1BaRkJWTGxHY3dDYjVOaQphek14OGRmWkcwRFRnRjAxaXdzNC9YeWJiTjZKWGUwVk4rWXozTmJMTnJiL2Z2YnlFMUwyL3pWaDgwUkdlNGxwCmlIRitDeWl4Ym5oa3gyOUtsV2pyM1pGT3d3M25HYVZpWHZPNlZZSlBYZFhDbjZXdXRYV0ZnU2owVkoycXAzaDYKa1NQc0M0K0ZxekJiZHl2VUVCSmVKQnFkckFDTDdMLy94Q2hUT0hlam1QS002OE1IQmN3eWZ1MjhUQkRjZ3VXdQp5MUxTZDJLeEVldGpzL1hNK1pxSXo0NWpaWjZ6SlI0TFRHc0l3Um0ycTFFbTY2MnQwYmMvSDlrc2J3Rm8rdFFMClBmWG1lREp2eTVscjZPQjZuMU55c2VHeno3dTBmbjdwc1BXcmcvbzZkMi9xcnRZUCtSTk8wRlB4Q2wwSUlVdUIKTm0vdktNdFRUdGJJd1Z3elJjZ2p3YzNpZEJsQkJEN0piR0I2TnRVRTV5V3VLRUMvWmZUSWd4ZTRsN0pNSWtTaQpSMlhoc05PRWtXTGd2UnFDSTYxR2tKUURINEhUMTFyekU4c0dWS3B6Q2kyZnJuNDdwUUtDQVFFQTc1UDRmR1diCjRCNDJlSGhYMHAzajM4bmgzaXJlUW9haWNqY3dLTDFVcDJwS2F3b1VHNHZSMlgvOTJ4aW5FZWxPWXZzYWhsdHMKS2pOYlJkSE9Gb3pWNE9rOEJEZmhBMForbGxLSktSUFZUekkyVThod2o5MllCc0ZIQUFpbXFkK3B0VHZCTXBHeQpxdk4yQ3lmQThxMG1ITmVhNjFJdkQ2S3hqVmpMTEtkalBwM1lVN1VtbUVDTWI5TnpxVlF2NGlOWEFOemtuckpDCmdEU0NxcS9peFNEaGJCcS8rL0tyYXJjKzhadUlOZzdNSElrN3JZWG1HVTZhWkw3QTJTRC9HZXhEZmlqSzJ6WkEKN0pETWVrRW9BUS9JTTBsa3Nwdm9IV3d6bE5xMUV5YjhMbnFlYVJZajdXVS9qa2pPV2lxQlBHWncwS1BuRmFwQQpuakVQT0RCYWN2MjBod0tDQVFFQTlWak1oN1p4cFowbTRlU2ZnQVdLNGUzSWMzWldtYzd1dHBlMG93SWtISmhoCk1NRVprMHlPQmlTRTFZWEdkeFZQcE5YL25NRFhuL05SbEo5TFp0S3dkei9NWXlMVnN5bkEvdUR0alhCTWFmZWoKWjRmMzk5bDRVcXVYSkFnVktSZ3d4Mm56eFVBUmdIN1BWRm1Ib2IyMTUxVWk2WEYwcjQrNzhJdXoranVzMlVXSQptWndxQVBtTndIOE5nRW5DNVVtc01JTlFVanZBN2FMTVo5Rk1UWFBxRy9LWk9QYXVnV1ovSHY4MkVDUExLWkgvCmJmZk4zbkd5R0lPSG8vSE5UREJFclFBVVc2V2FFcFpQQWl5RDNxaForeVExckFmeXVBTERZdm5BTjlYd2ZJN1EKajNDMVhOT01CMDVIclJUZm53c04zN3JrV0FQalo1TGFucVoyTVU1Vkh3S0NBUUJtanVxRm5oMnZRRi9ERElsVAo4U0Uya0w2dkU1elh6N2pFdWhsVXAxQVE1dkI2aC9MNW84NHVsSnNBYXJwQ2NhU0x2TUNyR1lIaFF1RGtyNTdRCmluT1lkMStvMHA3eGZ3RDdxdE5xa1VIMFNDTjNsRXVUV3FJVTZqSlJzbUplUUEvdk5HaE5GSS91bkpCQTBFREoKNGhONXIxWnpQRmhIRWpkOXNiQXdLbXZTeDFGdTdCSmNoTzFaaGFSeXJVWmVRUkNpbnUwRGZuMzNVZ05KdkVlUQphYlgyU0RFOVVySE0yaXNJMUxMbnFVZjVRMG9YeTBVb09qemZ1Y1RtYmppbVNUelBTZmtsQkVHZ3c0KzFHaVZjCjV2dWw4Tm81bDRJeTdqbmFsQkdGNUY5NktpV2NDTTFTZDlCUVFaeU1mcnVhTnFRK3ZKdFU2L0FEaUM3aXQ5aFEKZDRrTEFvSUJBUUR3NUZZMWJlblozUm9mTTFWejRuMUJaVEdxUkdlMUx0dHRCamtDMEFoYTF6YWVJd3FVZU5iOQpxditOa29LUnk2ZmVSWXRyQW1EMEdIaGlQNkZOL05IczFBUSsxaVlTZW8yVzg0dnFrbmRFbURPbFpIZ1FyMEtYCmtRaWVCUjJac3JtNklncUtBbVRzMEJXTFVUaDlrd0kyZDM0R3pUSHZhbVh5UVlqZHlaZmw0SUxGcC9JSjhQekEKSXo5RFZhajViY09XQW1ocnhXV2hMWFlhL1FJNURmV3ZxUnZPTlU2VG1PcDVxY1VRUmNTbE5VY2hWdXlZV3ZPdApZLzlhOWdCSHJTRFE1OElWVmR5WUlXTEQxS2RKaCt5SlREMHlncjlLOHRPYXEzT1Nud2sza3hXdHNORXhxamZUCnVJVmhxSndEMFZ1Mjd3NWlhTGJ2cTkzaFpibW9vYXVyQW9JQkFEWElEbmVqVGd6UFd1eGx1REZKT21ERnY2aloKSkJJNkZ4b0ZVM3E1S3l3Tml2cDA1Sm1ZZlpvWm9oallOMnl3NkpSUEhuSGZiUmd6YUlIK291d1duazQ4dzVBKwpQVGorZ0xsVXkvWE5NNHJQVkhicFJnc1l1RXVsS3dIRGxBYUtaanlBQUJzWDBMTnpjbFVrYnlzdVNrbVd1RW1GCjIvSG1kSDlHWWpoTm9pMDV1R0luWWUzcSsvWEwzek82ZkhyTXpXem5QUVVxK2l6V0dGSFNOcGtOMkdWVnAxbmsKb1VSZGc1UndNWFdXalBLczFiSmUwaTdJZGovcUJEQnlFK2JoSUYwUkE3dTB2RkxyYnBNVDcyeGM1RFg3Qm5KRAo4emx3N0NuQ0pPajJ2dXRHMCt4S05wTkovdzk1Nlg4cWJrQ3YyWi95b3g4a1FEZnhzcDk4WDBqbUszRT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdDiskSizeGB": {
            "defaultValue": "256",
            "metadata": {
                "description": "Size in GB to allocate for etcd volume"
            },
            "type": "string"
        },
        "etcdDownloadURLBase": {
            "defaultValue": "https://acs-mirror.azureedge.net/github-coreos",
            "metadata": {
                "description": "etcd image base URL"
            },
            "type": "string"
        },
        "etcdPeerCertificate0": {
            "metadata": {
                "description": "The base 64 server certificates used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEVENDQXZXZ0F3SUJBZ0lSQU4zTXlJNUR2UHlhSHI4OERubmZTTmt3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXlNRFV3TWpNNVdoY05NakF3TlRBeE1EVXdNak01V2pBVApNUkV3RHdZRFZRUURFd2hsZEdOa2NHVmxjakNDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DCmdnSUJBSndQQUR3ODI3VGpaeU9jOThJZW82cEFwQzNCUHpqVHNJKzlINVBqcVExWXhwdWlmbW1kTDVqVUczazIKZ0YyMEVtUlFNMjNQNlNSRFB4a3M5RXN2emlqdU01bHhGcm5nNlZyV21NQ1FNSmN5ZUZUVDdzLzZNYlhDRnNDVQpvVFN5cFRRU1ZUb3pOK2lqeXNER2RyRitkK2JvbmhwSGpObURiRHQ2VHNNbmgwK0F0M3I3MXN4WVQ2UVg2VU9LCkFyZ0djZFRBZDViOVlGVDlvOHBwcUxJbENzNjVraUJ2Y1MzbktPVmFvMTF4OWtRWEp1TWc0enRueThvUkVjRzEKR0VxOERPRVdnWDV6MzYxZWtTak9nSDI3WVcwRWJ0VmdFR2tnNFZaT2F5MFVwSExxMVRxazB5LzRiRS92NXp0YQpOTFd1YnBwUkU4VmRuL1RuZnVNa2xuWDd5RVlCWkkxSGJCbUhQQjROd1VWSG0xWTltVGJKTzFleGZvUWN5SFdDCndDcE5ZQVp2WmJnZG14Y0VqZWNla1FxcDhWbWs0OXI0TlNLNjNZKzl5d0pVa2JxU2VIbjNEM3hsVzYyTTFVTGkKZ1RMajhtR0tCNXk2eU9GWlZHejUzMkQ2R29MZGE5RmszT05hVXdTbWRiVGh5dGI1RFNGUjJOTVMrWWwzU0duOQpoOW9tYkMrTzM3K2p0YjUrSWJ2MUtLL3pGNzVJVmZiZFF5Q2pKSVVENUV2NVdLeWMxRExTQ1dCNStOYnJRNktVCnZiNmtjN3pFckJwbmd3cjZIeEtvL29sSEZOZzZWbk1LZWJjUHlJL0E5dXVjYlkvdGR1ekMwbEhwcW1BQ2FwS3kKanR0Sno0NmJBT1hsSVZiaHdGWlhXUXZ0SFZURXdoZGhpYUhUdGdMNXgyemtpRVN0QWdNQkFBR2pZakJnTUE0RwpBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEClZSMFRBUUgvQkFJd0FEQWhCZ05WSFJFRUdqQVlod1FlQVFBSGh3UWVBUUFSaHdRS0FBQUJod1IvQUFBQk1BMEcKQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUJzdHoxK2lkVWhjQlk1cWRlR0crS015NEVCTkczVzFtSVRjdG13T3RtRgpWd1RLdzBrRW1SMWpTQzlqS3Z6VTJwQTRNVlgvRVQ3NmF3dHduY1ZJczlHdjJxZ0taUExxeEtnOUNiNXJIS3R2CkZyMWVzS0NESllobkhocW5EV3FOdVJIc2tHZUxMeGlXU2hEY1Z1aE9CaDF3MjRJa1R1c05FOUpFWkUwa0R6cVAKWUhwbDFWcVBmUjFmSlNjVjIrTjgyTjBReW5sdVIwVE54RXgzZzFROENiZEsxS0lSMVBLVkdxb0FTb2ZTVkF0bQoxc2pxSC9SaFYvbm9JZjJaYTBmb3VXWnd4VWQxOG5PZ3E5dldOYUxSay95aURFWjNNU2JYZXBFZUhxa0ZXOWc2CkQ3SWMyaUYvNHVJb2xFNHp1Y1dYbTdSWnNsL2E1Mml6YTdBSTdNczJkaDg5WnJDVHNDUWZDNExEUHdNWGYxSk4KUmNaaGlvUjlvdm51Nm9iZzJoVDdjbmV4UTB2dWJEK3QveVMxV1VETTMzSGFRV1ZiMVFmVi9FWDNkTFlpcy9aQwpYRUF2VjhIN3ZnRFFUb2grODd1NDlYV1BKa1p4SWw3S1NnTTNqdmVMOUVDdFBrWEpBNG5oWEF0NEFPVm9sK2ltCnRBZUJZbTU1RDFQQXBWY2s0WGRUMTdNQ2hobWJybEwxb2tLNXk2MVorc3htcjZxbjBrYjl2cklnVWR4eGhGZUkKcW9vZXRidVhpeDhPdlowaG1ZaHRhVitGbEYxbWlWUHlBd2VCNVBSejFlb3h6NFZzY2cvUFNYWnVXY3FXcVl5MApHRjAyWlY1dVpoQWI1QjhDT3ZuN2llMW1NOGhDOGQwajRzdHFaMjFpS2dnRjM3NWdmSTRVZ05JZzk1MWprM0hTCmF3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdPeerPrivateKey0": {
            "metadata": {
                "description": "The base 64 server private keys used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBbkE4QVBEemJ0T05uSTV6M3doNmpxa0NrTGNFL09OT3dqNzBmaytPcERWakdtNkorCmFaMHZtTlFiZVRhQVhiUVNaRkF6YmMvcEpFTS9HU3owU3kvT0tPNHptWEVXdWVEcFd0YVl3SkF3bHpKNFZOUHUKei9veHRjSVd3SlNoTkxLbE5CSlZPak0zNktQS3dNWjJzWDUzNXVpZUdrZU0yWU5zTzNwT3d5ZUhUNEMzZXZ2Vwp6RmhQcEJmcFE0b0N1QVp4MU1CM2x2MWdWUDJqeW1tb3NpVUt6cm1TSUc5eExlY281VnFqWFhIMlJCY200eURqCk8yZkx5aEVSd2JVWVNyd000UmFCZm5QZnJWNlJLTTZBZmJ0aGJRUnUxV0FRYVNEaFZrNXJMUlNrY3VyVk9xVFQKTC9oc1QrL25PMW8wdGE1dW1sRVR4VjJmOU9kKzR5U1dkZnZJUmdGa2pVZHNHWWM4SGczQlJVZWJWajJaTnNrNwpWN0YraEJ6SWRZTEFLazFnQm05bHVCMmJGd1NONXg2UkNxbnhXYVRqMnZnMUlycmRqNzNMQWxTUnVwSjRlZmNQCmZHVmJyWXpWUXVLQk11UHlZWW9IbkxySTRWbFViUG5mWVBvYWd0MXIwV1RjNDFwVEJLWjF0T0hLMXZrTklWSFkKMHhMNWlYZElhZjJIMmlac0w0N2Z2Nk8xdm40aHUvVW9yL01YdmtoVjl0MURJS01raFFQa1MvbFlySnpVTXRJSgpZSG40MXV0RG9wUzl2cVJ6dk1Tc0dtZURDdm9mRXFqK2lVY1UyRHBXY3dwNXR3L0lqOEQyNjV4dGorMTI3TUxTClVlbXFZQUpxa3JLTzIwblBqcHNBNWVVaFZ1SEFWbGRaQyswZFZNVENGMkdKb2RPMkF2bkhiT1NJUkswQ0F3RUEKQVFLQ0FnQkNNL0xybXYyeGZRN1NBdEx3SE1OZGhGS2h2bXN0bGxBK2lnS05ZSFRrM3BaU2k5cUl2MC9qeTRkawpJb1RPTzRmWjJsUVc3NjU5M2JFMDR1YzN4aTMxR3lmMG5nOEFCN08yLzNhSnFpR1M0cXc5Z0RLOU0reEdxUEd4Ci9OdHVXYUxQdGo5RmsxalNiam1qRWc1a09ieHZ6cHJUbHlyZlUydGt4L3dGdWcwaTR2M3pSRWJaSlZXVHpUajkKbDl5VGFOaDlZckRZOHVBYzdnUy81NWJUQy9mTHZ0bUl2UDRNZFJYYVJsc3JWeDhidjU2Vmwrd04xWGlVWGkxawpPWWoybTFQellQTEtUQ25GaUdxWUh4SlBSR0NPT09Venk2N3FpakpOeExLZXl6VUFNek1GejhwdmZUbWxwNlkyCmZZd0N6dDdJeEVCWTUrRGxxaGNnRVBOclZjYWRrblpjQmdheEpBaW1aOUhCSEJYaS9VS1ZUdjJtN0Q1UVBXaSsKMHg1REtxMzZZQ240N1JVRldKNTB5eEI3OUVmMWlrRHhzM3FrdGh1MDZZZytDeGg5S0FLYWJwbHV1OVJiZDlSMgovME1UK1NoejhpaFlJQXJQMG92YTZZK2dINTNGR0FIWDRBWUg4WHRVMUE0Y1VLbFBxaU9iejU0akphUm1ZRFRlClR3end0Zlc2RWZSTWEzSHVxOExDUWp6QU1qcW4zRTZpUnBGaXZhSnBsRGMzRzBnb204aVVWa2QwbFZETW5PRHkKSy82YllJSGY4SGZoWERZdHZMT1lpTGRoRk1XY2VpRE1TQXd5ZzhjQk5lNE5iOWQveGdKNklMOGhINVlPdDkwbApHQVphN1B3Q2ZERjBaNEc1UUtDUHA1WHJ1Q1pCY1lGL1pOOWhMaCtrUE93TkYxd0dHUUtDQVFFQXc4ZDlIWEVCCjUydCtPOWhYbXBvVDQ5RkF4SWpnWVA3bWJqR0VCZFAwOGloY1lWOXVEdzN0YlM2VklmTlAvVjlrSlUvTXlMV0oKKzh4TCtVeWx1QUtpNlJSUVk2eC9ydWZra0gwQ1R4dG1zdnFKeVg4T3RKYkpBS0MyRW04NXNWN3ljSW5PZFFMYQo3L01lMnpXTzJ0a0FpL1g2Y2pkOTBiT015R0RFcjl6T1BXL0phRkRuT0p1UWYxUTc3Y2tPNnFRNzA0bVRmS1hqCndMRVN3NzRFWVpRT3I0R04yaVNWcG5zYVZ4bFVGcEhNc3lIRVNSa0tGZ01qU2pONkU0b1g1akNiMERoV1dCVHgKUUFnRkRJS0pVZmZFanFtRHV1U3Y3QzlwSkRUdWM2UzVxS1R4N21VUlNvbjFRUHRZT08yKytWVytMUlpXcXFFZQo0aDVmNDQ4SWhyYTE5d0tDQVFFQXpBKzhGM2RhTVBQeEtLcDRya2pzazcxd3RaTEtuRmVtSG5uT29MdFB2TmtrCjJkbFlKMXV4ZkdCYllpR20wSTVDVHkxQ0R6R1Z3WXk3OVAyVlB5WDlobDNKVXF5ZXg1L1M5eWJ0UHdQZVlsR2wKckd1b1ZrY3FDQjNuNEo2SEYwQUJUSFpRN2Y0WGNvb2ZYaW9RZmVXTkdWS3c2SDBleUZ2RjN5NFUrbmpLcDNVKwpnUWc0cmt4OXJ4WGJMYlRNZkZFRUJaM21wMUR0dEg0WkV5YnVNb0ZyQzFrcG5FYTlIaG1OK0pLeWFMcDBFKzQrCmcrL2MvZ1kvOGxwTklYMlBoaVAvdDgyQWNyNWwzVjJ0Q3NJdHdFdU5RZ1FXQUNuZlhTaWZ0TUdxNXN5amdUNDIKSWVhQWFtNjJRN0p4K045NWlWOWdUZkYzbmtLMldPRTVUT200RW9ZaGV3S0NBUUI2amVsTFFjK2dUMURoSTRlTApWd0kyYldvdTNVUWdVOUJwa0lPRnBtNUNISFBmM0g0bjNGOFJKc1RpVU01MDNIN3pRR1lBQ214Sy9GTmV4dFZDClFCdzg3YU41RWFXSUZzK2toeXluMm81S1liMVpMamxGWU5LSW14SCtyak9lVGNKVUlsL2tMWnBoOUg0UFdSS0kKK3FoMTlOQUhLYWVRV3VZNUZTSnF1RDAraGppOUhVL3d4cWtJbS9FNzQ4MTdvcjEwcVQxekhPRmFZVDVPM0NjZgo4aS9UTzdWUnBlOHNIUW1iRmxibUhmVFcrYjlHeHU3aVlxcDNxNHV5cVpKV1hYMWNOYmdQUVdUWDRXMVBySE5MCnBWOGNzdzZzTXJYUmtzZ3RpeGp0dVdNako4WHVwc1BSTmxVWmpYMW5mYVE3cnFueXpYWUpMLzBHTFY5M01yVnkKcHZOM0FvSUJBRlVJNFlxdDA4bStmZXBDVDVQaEU2VGxOb2lUcVJiSmQ1SVBsRWxxaE9uZld2bmxGbFVnWXErLwp2NVQvRFBLdnRYWWxGL2dZNDUwS05uRDdFeXlEZWtoNTRLRXhDZUdKK25HL3FQR3ZmUVpmbTdoa0RId1huNjVPCk9BaGtSMHNyQXQrSUZtVjJrdkxLR0JRM1Z6UC9hbkw1QUh1QldFaUo1Y1VCQVFEM1FRdlRVYjZYWEhkVnJMSS8KVzF5S2tRUGxCdFlJWE11d2I3M2RKam5TNlVQbXBtTE9Qd2ErZTZTRlphSUdENDZRMURwUjkzOG5mMkhqM05YegpSMTBEWThHMFVxV1hYMFZ4amlWWEdmcjN1L1Q4QnR0UnRKRlE0YUdDZ2pyaTBZTG9GK0tOdUNVY1Zyc0RjN1IyCk1nUlJxK1hROXVMRUV1TENUaFp2bEY4MnJkd2FSTzBDZ2dFQWVabDFDQUZqYWtuWldWR0NVZk9BZFAweERmNU4KK0JSeWFxZVlGVW9iOXQ0UHl1bzNYMnUzSytRaHJiMklVUkVSY1dPeGduTnBRV3MzdzRVZy8wYVpiNHVEZnJWZApCYVdkMWZTWWFBOHFOSkFxNHdoSngxM04reDU2ekkrNnJXWWE3SGxxMWhoTmdrNnpGaU0wdWozSUZlTU9uNlRhClF0SVRDWXB2SjYwSlUyY2ZBakhjZS9FNnYrZXVnTGM1VXVGWnlzWUQyV0FkelM4ZUZheHVLcXNpdWg5bW1CTWkKUnZPTDRqTHEzYlJzZHZQSVBTc3JScC9zRlVzdjF4VUN3ZzNGd2x4bTJZLytsbmg0dDNqay9IMWNJNlZWWGNnTApTYnJwSDl6MXp0RkVsRTJtREhIVkUwZFlYcHFrWXRpUkFTaGZTYmpNTzN1Q0tUb0d1bFFUN0YrY1NnPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdServerCertificate": {
            "metadata": {
                "description": "The base 64 server certificate used on the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZEekNDQXZlZ0F3SUJBZ0lSQU00U2RVUWxrRTZYd2k0OEJvVjZOdm93RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdIaGNOTVRnd05UQXlNRFV3TWpNNVdoY05NakF3TlRBeE1EVXdNak01V2pBVgpNUk13RVFZRFZRUURFd3BsZEdOa2MyVnlkbVZ5TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDCkNnS0NBZ0VBMG11eXBIdDZVMGpEU2Z1bm4yRXRJd3ZPMk84NUJsbDFzS1J2YWorNUNRRnJjOVJ4UlR0VEoySGIKVmF5dW9aMUQxSkNsMUZZYU1SNk1iTGRTaE9xSVR1VXR5dUVnSjRSdEp0eVZSd3oybHJoR1pVZ3ZKQnJjM0h3Mwp3ODFNd0lMYVlVUWFHME12SC9RaHg3cDRVTU5oZTlwQlMzczlOWm5MdFBwb3pFRGtVTzloQTlTM1ZCRklFUUJjClhUdCt1cVBvYnViM2VUSGdhVkh1MjRkSHRKb0Y3YVlDbWxWZU1PNUhxVFJJMjZLR1Z3R3BxWVBhcFc1UHgwMXYKc2MrMk9ZVU1KQ0pBdE5pdTdGUGtwSTA4cmdxTmI0YXRaZHF5Ukd0MGNabDh4UHRuUlM0eC9SR1liV0drN0ZwMwpaZVNNOFp6YzRZUWtUalByOTV2aXNYTUUyVjZ2KzhWQTQ4VE9rZ296aHFodXN1ektJMXVvZjMrWDIxdHNpKzhRCjIvRXBmZnRPVmxFSTJzR1Z2cHhFU0lTNEV1V01lR0ZjOFFZTXpFY2hBa1RtOXBvMmp3L2R0MFdpNk5SWEdpRkwKZUdueGttZHJBc1laVmJXbHUzM2I1RmhzMFZab1FZM2l3NW01azFhaGN2aC9qejQrdWdyaFp1SGxWWnpFU0c5eApQSlRNVUFVZEtQVi8zV01oUnpaLzQxZjc2enU2N05FcXprYStFcHFOVnVQZE16a09TRWRLYThDUUZ1a1RvRVNDCjhDOUJYelBGSUZCUFJZeDV6QkVkcG5SL0JlTElSc1RxaFF2ZlhWbXVzSFNRTVFaSmovWG9iVzVPSzg2bVZZUk0Kd0VpWHNqUnE4ZkNSM0NlUTJvaDJIZjBFOUU0ZWZMcjc3RFpuRnhSanhXbnZvSm0xMnc4Q0F3RUFBYU5pTUdBdwpEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNCkJnTlZIUk1CQWY4RUFqQUFNQ0VHQTFVZEVRUWFNQmlIQkI0QkFBZUhCQjRCQUJHSEJBb0FBQUdIQkg4QUFBRXcKRFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUJ6UytlR3l3Z2JsWGt3LzJIZGlTU2NOM1dYV3UrVkVZSzk3TUVvRgpVQnNaZXFiVHVYMmx4UGFTQ2hwWFJmZ0NKUXUrMXdVY29jTVUyeFpkb1lqUkNySXVOZlRicDJ3ejFkdlhOVVpZCm5LQkN2Ny9YaGxOOHpyUzJqYk9ndDJRRFNqS1Y3TWZaNDJRbzRta3ZRUlZGcER6aHZKNGZVcXBUZ1R3Z0ZpT2oKd2lYdGp4SjFDYXBxcDB3YUxuMXo4c2lIbVdDdk82WHZLT2VDK0QxL0pkUitxVFpVTUhsbFRmK1dEOXZiYzhyQgpPdlhIeHp0SE5scHFUZGEzeGZLaXgvVGljZmVuSHR6aHlQQnVlbXJUZ2lnOE1iRUxnN0xhYUt1dDNzaGtUZ0lQCjhmbmdPOGdUclp0K0RDdjBqektCdldMb2p6N1lGMGRUa1ZsZmVMajE0S2JYVVhGZ0NNNWpaT3ovTUowdENXOG8KWldnbUdGUnpndEltU2kwejVPNUY1dlNvNXJTcEVNcjRLNDFZUEErU0l1bHkrZ0poWmZ2NUlBWTl2MTZLV3JVVwpxam53Y1F5aHZ0Y3Bic2tHcGZ2YlJTcjYweTdoQk0zQ3paNytOK0lObFVXTnNpWEJxS2NjT25FZzJXK0JrSng0Ck9XdFVJU3Y2RnBzcGNtNzJjaFJWb3ZIYmd5WWx3T3phSkRmYVV4d3J0eW5QSXdqcGFQL290aXZLV3AxY0o5cDUKQWx3SUZ5Z0RqeVRkNlkzTlg2akFDRWV6TGhxMUhQRmRPYTF6ZzdWRGJIWUFKRnAzSk1kMUMrakFzZ2psM2FPNgp3T1ZmYVM0ajRrSzZsT0VKTzY0WG9GK1IzMmpVMW1mKzdJckF0QzVUYWoyTzIwN0IvVUZ1WEhCeEs5UkRoTE5nCnFkaSsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "etcdServerPrivateKey": {
            "metadata": {
                "description": "The base 64 server private key used on the master."
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBMG11eXBIdDZVMGpEU2Z1bm4yRXRJd3ZPMk84NUJsbDFzS1J2YWorNUNRRnJjOVJ4ClJUdFRKMkhiVmF5dW9aMUQxSkNsMUZZYU1SNk1iTGRTaE9xSVR1VXR5dUVnSjRSdEp0eVZSd3oybHJoR1pVZ3YKSkJyYzNIdzN3ODFNd0lMYVlVUWFHME12SC9RaHg3cDRVTU5oZTlwQlMzczlOWm5MdFBwb3pFRGtVTzloQTlTMwpWQkZJRVFCY1hUdCt1cVBvYnViM2VUSGdhVkh1MjRkSHRKb0Y3YVlDbWxWZU1PNUhxVFJJMjZLR1Z3R3BxWVBhCnBXNVB4MDF2c2MrMk9ZVU1KQ0pBdE5pdTdGUGtwSTA4cmdxTmI0YXRaZHF5Ukd0MGNabDh4UHRuUlM0eC9SR1kKYldHazdGcDNaZVNNOFp6YzRZUWtUalByOTV2aXNYTUUyVjZ2KzhWQTQ4VE9rZ296aHFodXN1ektJMXVvZjMrWAoyMXRzaSs4UTIvRXBmZnRPVmxFSTJzR1Z2cHhFU0lTNEV1V01lR0ZjOFFZTXpFY2hBa1RtOXBvMmp3L2R0MFdpCjZOUlhHaUZMZUdueGttZHJBc1laVmJXbHUzM2I1RmhzMFZab1FZM2l3NW01azFhaGN2aC9qejQrdWdyaFp1SGwKVlp6RVNHOXhQSlRNVUFVZEtQVi8zV01oUnpaLzQxZjc2enU2N05FcXprYStFcHFOVnVQZE16a09TRWRLYThDUQpGdWtUb0VTQzhDOUJYelBGSUZCUFJZeDV6QkVkcG5SL0JlTElSc1RxaFF2ZlhWbXVzSFNRTVFaSmovWG9iVzVPCks4Nm1WWVJNd0VpWHNqUnE4ZkNSM0NlUTJvaDJIZjBFOUU0ZWZMcjc3RFpuRnhSanhXbnZvSm0xMnc4Q0F3RUEKQVFLQ0FnQWZPV1lIN0Y3Smp3bVRwK2xHeUVmSFpKQXNOc3R5ZXNIeEZXV0hFYSttZTNSemVybllPU1pzdUtPdwpnZkJrQVE4NHNzSTQwUklQNmVXU21GMkJaY0FXWFFHL2trcVFNcUZ6MjlXMjltQjlHeGt2SEZnS2RvWUJuZGswCmovbHNzNzR1SXNudzg3WkJlcHVzcEtvSDZnWkVONjNxd24zaHYxR3dLRngydXNabWtDOElQMzk0MVJ1cGtqRWkKa0pxTW5aZjNKUVRpRWhtbjUwV1hnK3FMRFRRR0FOVndDMnp2dTl3Y2FxckpGTVAwazBXVzV2OEIvMjJOT0p0egpla3dqR3ZBalNJWHJrQi9jNTlJTTdQeHRJeG03eS9OZEl1ZkRLV0xkSEphY01HWXhxTm80SUcxTEJldFFPMWh1CllVemM2WmNKUysrTFB6OHJ2aEVVbmVuQlM4QzNTYTFKQW5mdXlkcSttNGJHNTZpV1ZSK0xRUWFIZkJPNDZMQ3gKWWNUUU9vMjZQN2RWOTdXMHlVMVhkaUMwbXBLQ1JUdklnd0d4bEpRTjllMklMMjBuYzdWNDQvMk9hdU1nUTVpTwpvNGtwUWxNdHJGQWMxODRuR1NIM2FTTWJyMUNiUkxKN2J4RzZ0dDJHYW0vejVvbU9QU2NUTVcra0tpaG1QelNnCnI3ZHEwWGswWUZPdUNnLzRMcm5HdGNYMkk2SnVObW9ndHk4NGFjVURqSGxlYm5lSmhDT1pLWWhOaDFuL05sdzQKbEMweXNnN2c2Ym9SZ09sdlZhOC96TVRIMG5oSWNMWWMvRVl3bmQrZmswVVBCZHdVUktmU1FMWEdJUHNtYkcxZgpCMFlLaFFaSmkydzRreFN3djBXLzV4UDkySlgyNlhscExTeXV0c2tQSlhTaTI5Nll5UUtDQVFFQThZb2NvcmJWCkpweTk4MW5SVWFadi94TlowaVNCSitLSXZDL3dyNWs1cVl6bXpOaDhXYkJrTU13WGFBdVJ0ajZHaTlqMGt5RTgKeVlrT0crcHdEQ25NQ1JEZEcyS3JqTDZYVHM5L2FBM0VNdjJpcTJHZ1ZYVmp2YjVKQ2ZuN1k1eUQxaG41UE90MwppOUJacnNHUEJwbDBXdStjbTRmQVRlZnlNM0dpMjVkcDJOd3daOCtFTDcrU2lTTExHay9leEVQYXFPSVFnOVQ5CklOS2NZRGFkdnRGTnBPSVorSzk4TXJ4Qzh5cTFKYWhPTUhIcm94ZUVuVC9TdmhqdnF1dmNKSFdTYzljdmMxL3YKZDlMMnRpOUx3OFQ0S0ZmYzVpaGdFeEw0emswbjF0R3p5aGNFNkJjc09rRHZaZHpmV0I0T0c5K0lKUEtMR0ZIMApTWVA4L1VVVlBvbk1Fd0tDQVFFQTN3U20rTXJDamVRQmxnL1hrSzBJWG9IcnVUL1piMlRzSjRzZ29QdUpiNi9oCi9NTnNKVTRWUFlmcDEwRFl6MHhYMGRRczZyQkRmSDloSFg4SlhBYUd1TnRyZkxaRDJWWS84TUx2amYydjhpSFQKYXAzR2ZRbzZjY1lrODVDV0lNMXBGQnZkZ3dYcnd3VEQ1UEF4RDhkNURZdEdsdGVVSjdQQzFMVHNJbkpuYlJiSApFNjBURzEvQVdNSjdvQ0hTL0dMSGV3TGZ5anJ2ZllqK2pIaXRiOE1aakJUeGx2dExrTHlrNGcvazVTdm5rb25OClpGcU1QQXFPM2dVRVk4cVY3WmtZeTVLS0dnaDViOUVhN3pGU0R3YVR1dEhackFiRG9hT2xZRVJRc2Q3TDN5aU8KTWhwLzdqbit4aFZVdkFSaVRGMDl1b29XRFhuVDZlcC9vQlVmSUJBY2xRS0NBUUVBbFEzdzYreStEdXp0UDQ1dQo0TjgvLy8zMkVQdGNCTHdFTzNXdUp2NzhtWWdOS2Q1eXBucDI2YklZdzZsWUMwbjhoN0trQTJPZ2VwSXNkY2V2Cnk2SERldGpBU2RVVEhuRERPT3hOcUczT1pOVW1uSEpMbWxFdDh2ckpZZkcxVTl4VGN6MW1GRlVPMmVZQ1loaXEKWlowdk02cm9Ud1p3QXVPZkVHWVE1VWhFRm9LVEVJejcrdWRTeTNRQU9FV1BxRGhqYUpMUk5EbXMxNk9Bd3RNUgpkNTc4TmtNZFdkMFpYTW5XMnU3QkNQTWJCVVJYOExaanJSS2t2NUR0M2VGZFlkWjRRU3BLNnYwSjd6enQ2TEc1CkpKK1pzSFBBS3Z4QmhhUFFqS2NLYmNQTkdtb29LZjJhMm53V0FCdFViTEZuYllYOUl5ZlY5SFVtdG5OUUhRK1QKczVzZnB3S0NBUUJaOHlWcFdWWnBKbHBoYlJoVDJRWjBIOUMwa2dVZ0FjT2lHMkpZcTd0K0dhRjdjbEt2SlRRNQo4aFNsNWhqTVc0MWNLMGpHaTd0Y2ZuL3NCcTMrdVA4amxoUmZZNkF3QzdLVVovdDQrS1k3Y2RzMHVGZ3pYS20vCjg5dzVoTXFZaG1Eb1pHak9qTmZQZTUrTE9qbC9sTVBGYTdSWDZMRnY1ZmdpRktyZEplbURQVm1rSFAyRTMvVFQKbC9XRzI3MmVZRFQyNzJ6Vnd6bVBGMjhidHh5MDVDcnNyaEhYQkpvdzBYVnJYRi9FOHhWZXJFZjBQdlVxemxOYgpSd2pET3hXSGxHVkV6bUQzS1EzWnhLd3BaMm9pZDFPa1dUbURRZU1yMGJaRkFxak5aUUF6ak1iMWZHeTI2QnRUClI0MDZuRVlOYU5vWjM5SVBNMkQraXI5WkVNdlNBYzJWQW9JQkFRRGZQRW5Jc0hGRHF1SmRHYW13QmNGK05xNnkKTm9VS3l5U1E3YWlPR0pFbTNBajRZc1ExaCtidEJ4VDQ4OFllMWN2R1NxdEkwRk9kUks0MGR3Rmp6VmNJdzBFeAorWlZGYldLRWJxUVlPWWx1dUtvSnlJTVNnaEZvQUtuTnIxVmI4YUdSVEs4VERVQ1QrWVRrakRXSktVaEZUSnV5CmYwZ1lpczhJYkpGYktSSmMvcjlLWEpqQmNtVnczZFlWNU54bjZOalU2KzZYbkZaN21KQUFCelNVc1l1RnlNeDMKTTJUWDJDTmVFOWRiMXlHNnNFN2VnakJoRHVxclpJN2MzUkFONk5neElXZ1UyengrMnJRY2haWDNPMG9xdEludgpHWDhCbHNacm9UUlhKUW9zTkRaYktkZlpLakVnL2NUMDFtT2JMRkMwK2ZzUnM1WExWSkJkUWFWZURIRlQKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "etcdVersion": {
            "defaultValue": "3.2.16",
            "metadata": {
                "description": "etcd version"
            },
            "type": "string"
        },
        "firstConsecutiveStaticIP": {
            "defaultValue": "30.1.0.7",
            "metadata": {
                "description": "Sets the static IP of the first master"
            },
            "type": "string"
        },
        "fqdnEndpointSuffix": {
            "defaultValue": "cloudapp.azure.com",
            "metadata": {
                "description": "Endpoint of FQDN."
            },
            "type": "string"
        },
        "gcHighThreshold": {
            "defaultValue": 85,
            "metadata": {
                "description": "High Threshold for Image Garbage collection on each node"
            },
            "type": "int"
        },
        "gcLowThreshold": {
            "defaultValue": 80,
            "metadata": {
                "description": "Low Threshold for Image Garbage collection on each node."
            },
            "type": "int"
        },
        "generatorCode": {
            "defaultValue": "acsengine",
            "metadata": {
                "description": "The generator code used to identify the generator"
            },
            "type": "string"
        },
        "kubeClusterCidr": {
            "defaultValue": "10.244.0.0/16",
            "metadata": {
                "description": "Kubernetes cluster subnet"
            },
            "type": "string"
        },
        "kubeConfigCertificate": {
            "metadata": {
                "description": "The base 64 certificate used by cli to communicate with the master"
            },
            "type": "string",
            "defaultValue": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU5akNDQXQ2Z0F3SUJBZ0lRTGt1ZEpVN0pTUUFMNzhQcVFTUWRwekFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB4T0RBMU1ESXdOVEF5TXpsYUZ3MHlNREExTURFd05UQXlNemxhTUNveApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1ROHdEUVlEVlFRREV3WmpiR2xsYm5Rd2dnSWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFEWTFROG9Md3FhQUpwdWEybUxsemQ5b1FjcXVwNkkKRktMNnRMN0lxRjE3RDVuaFo3SDJGSlpyc1Vzc0dUeElWKzRiYUNoS2gyZWRMaWVlb0UvVDN3Z0xaYmJEeFYrcwpvR2FmNE80eVdPcjFPK0ZtNG1tK2d5Zk5JTkRoa3FzZjZPaitJR2pWdkhPRjNqak55Y3pnS21CWW95UURwSVZJCnJ0eUpkWUdRTVlQa3VvNWIrODhPa3hwNDB5c2FOR0VMYjIyR1NNVTd6eEFvQ1pTeThBT3lhNmVtT3RxNFZGOWoKTkdiRndKbEtRcTBYTHlYb0MzM3hOYnpma0FrVHNBZWQxb2tmbkRqNEdlVWJ3WnFSK3ZYRTc1cHRkYjNZN1VtZQpNMFhoL2diZWVHYlJBdDNrNTNxQUowNGl4SDBwRElXR3BEdjdJNVgxSHlnQ3hObDhvWkdEbHBxKzVvbEYwdGdUCmp6ZWhoaHV2MFpJYzhOZkowb05Nc0FpVFdiWjdweENoUnNIY2tJWGRyMThJa3hRTkxJU0Mxa2NtNFRoSERqZ2oKUlBGUXJPYWhVUlJxS09BTytFNVVNWnlteFhPNHVYMjB0NEVnQSs2dVpsM0c1cnJzeS9hVGFNc2dVQU5BeDJqdgp5dlFGdHkxR3BkS25TR2tXckdyME5uMnVxV3pCbGNwaDVVRlNCdDQ2RDNsSUhCcDZxUVNCbXhZZTROa0dQbWM4CmFQOWZRM1BmTlJmcTBBaHdvOGlmZmpWTjV6bmNBbWFWQkUxcklzeFpoVTdKYzd6RUFOOVRsSU9URHVMeHFOMmoKYzA4VWZNRWtKU3ZpRXVjSjVpbkhlMGJmUGFyUUFCWFI0Sko3S2h4YkorVWFidGhqTHlqWUdlSVhRcFZPcVlxQQo2b2N1SWpBcHRHelNzd0lEQVFBQm96VXdNekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJCkt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBcWdmR0N0OFUKb0VDb1piOXp3RTBTTGYrTnBGNVdZUWZ4bERPMGJjTk1KMzlwUU0rT1puc0J1YTZTZDhiV1RvUzdBSjZZamhsVgptQzNnZ0Y4djVmL2lMc1NmYzdQcnQ0SExNQ3BoWGd5RUhkS2N6TW91TWZERndGSjVXWlZONW5wMXVGYWRWSzlVCjZ6VXB0aHFoajVVMDdEVFlpNlF6TjNTck16dVlWM0NrbDdKWnk5dEErdWNWZmxJSWJYWDdFd0U5Z3pQUjczc1IKalpweHprM2diQytSOVExRkdXZXQvbGdlRDJLOUlsZDJoY1FGaHBjbFdaU2NrcHpjSEorS1VKTmRWSXZTcURKMgpyaEtQemF3V2I4QjIzY2pYUHkrM3NZeHhjVjM4dFZUQ2ZZRkJUWWdmR0ZGV0IzdFl6R3k5TTNvNzVRZmZjSjkwCkZ2SjBzZ1hqNzk1QkVkck14NTVVcUhscmhwSW5VcDhyTVBrZnRJVkRGbjVaMFdUZXgyQnE4OVdMMUV5N0p3RWMKbXBTYzUzazFhOUVKZm1CZFVRcHhuYWdVNGp5NzIzUUlIYlZObTVtNTBSVUxUQzloMzdxTDUxR2Z4YTFpZ3hMVQpPZm5ZUk5NTG5mMytWWWkyRVA5TERIcHV3cnlweTBSZ1AxeFJ1T25jckFrRUJCbGRoYlVYYU5VVDB1WjcrbDRsCkdrRkF4b1h6QWVucy9ZNnFCZzZaUVYwbU1FenZzUEQwNVJFVmNtNm5IN3E5aFppT0s3RkttU1Z3TVFNenM4amIKWEUyWVJBYTFMYyt1UngxVUtvUG1JUGZhYTdwKzVQblFvbUxDV005cXd5SXF0ZDE5KzBTZFJWcE9ESFpNV0FYOAprNlZKSlJUSCs0aElLL0JydkJIMUREdVpWNmRwaUltVnFOaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
        },
        "kubeConfigPrivateKey": {
            "metadata": {
                "description": "The base 64 private key used by cli to communicate with the master"
            },
            "type": "securestring",
            "defaultValue": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBMk5VUEtDOEttZ0NhYm10cGk1YzNmYUVIS3JxZWlCU2krclMreUtoZGV3K1o0V2V4CjloU1dhN0ZMTEJrOFNGZnVHMmdvU29kbm5TNG5ucUJQMDk4SUMyVzJ3OFZmcktCbW4rRHVNbGpxOVR2aFp1SnAKdm9NbnpTRFE0WktySCtqby9pQm8xYnh6aGQ0NHpjbk00Q3BnV0tNa0E2U0ZTSzdjaVhXQmtER0Q1THFPVy92UApEcE1hZU5NckdqUmhDMjl0aGtqRk84OFFLQW1Vc3ZBRHNtdW5wanJhdUZSZll6Um14Y0NaU2tLdEZ5OGw2QXQ5CjhUVzgzNUFKRTdBSG5kYUpINXc0K0JubEc4R2FrZnIxeE8rYWJYVzkyTzFKbmpORjRmNEczbmhtMFFMZDVPZDYKZ0NkT0lzUjlLUXlGaHFRNyt5T1Y5UjhvQXNUWmZLR1JnNWFhdnVhSlJkTFlFNDgzb1lZYnI5R1NIUERYeWRLRApUTEFJazFtMmU2Y1FvVWJCM0pDRjNhOWZDSk1VRFN5RWd0WkhKdUU0Unc0NEkwVHhVS3ptb1ZFVWFpamdEdmhPClZER2Nwc1Z6dUxsOXRMZUJJQVB1cm1aZHh1YTY3TXYyazJqTElGQURRTWRvNzhyMEJiY3RScVhTcDBocEZxeHEKOURaOXJxbHN3WlhLWWVWQlVnYmVPZzk1U0J3YWVxa0VnWnNXSHVEWkJqNW5QR2ovWDBOejN6VVg2dEFJY0tQSQpuMzQxVGVjNTNBSm1sUVJOYXlMTVdZVk95WE84eEFEZlU1U0RrdzdpOGFqZG8zTlBGSHpCSkNVcjRoTG5DZVlwCngzdEczejJxMEFBVjBlQ1NleW9jV3lmbEdtN1lZeThvMkJuaUYwS1ZUcW1LZ09xSExpSXdLYlJzMHJNQ0F3RUEKQVFLQ0FnQXhiRTdxSDk3UXYzWnoyTFBVQjRHMGR2SEZRWWhGQ0Q4bDJmRHFsOFhHK1FWZ0pWeWc5SXhjdTZxZwp3SmZHL1pQZVYxMW5yM2xra0ZLamkzTG1uaDJkUzIvZks2dmxFeUtSS3BuZ2kvZnlNZFhzdDRyV3k5cFVuVGcvClVra0RHdm1RZ3g2aUtUUkR2U1ZCY3MvcUFINjVkV1lPRm4veTB6aWRkRlUxNHJObmZVWlpuUW5URHFDb0RhbnoKYlNENWxFcG9vMG1obWs3YWNXU2RiS3ZMRFZMSFJ2NzNxUE9kRHlLbHpJS2tOSkp6aUdHaGhJME9YK3RQSWV1UAp1ejNoTWpkTEp6YXRCbW44YTZLcHg0UWhnV08zczNDMGMxR21aNVYwTDR5dFJOQmFyOGFZR0ZNSnh1dStiUDhDClRrSlpNRElqeWpheUNvbjZKNWhUR2hpcTM3Y2hoTTZLUXQydkxnYzZMTkw2WTdvMDlGRzhMMWY4UngybURPdFIKTUZHdy9SUFBQeDJlYmFpeTF5eGVhM0diQ1FnZDIvSHI4Z0JxUVoydGN5N3lnbnI3VU5wcGNiSUd6TndNMkM3MworSjQ3NFhvQW1nQ3U3TXQ4ZUlueFYyMTBJK3Vyc3kyaWFWKzlNdDRPQkxNeUpjc1Y1czBUd3FzVzRrdXlnTFZ3CmRORXRzdWtxTnM4VndmMHlOQmcvcnJndDZGMTc5MlRMUDVTVlYwRXNuOWZsRm5jdGM1U05yODc4MUQwc2NMRUcKSlZwOUhwOURiU01iUmF0dWNoTXQzcGxlcE9uR1BRdEx6dlNpQ2IwMXM5OUo0TnEweExGOENyY0VZY3hacmRuRQp5U3lJQnAyZUNJWXhkdDlpUFhRZUlWakhTblVvaHRnbUh1T3hOUEVQRVJ0ai82KytNUUtDQVFFQTdPWHVKN1h6CkNNRXRBRW5sSTlwM3BFNklOUE42Z0ZxOHZpS3VFRlZoZDlrU2I5ejlHcVRyVmlDUmlvNEhUSDNUN0w1TG9kcG4KSUdkMjVLamJ3dTFzejFNUGxDR2xrQVI4M0pRNVp4QUdPbHo0WHQwQTBPWVYwYkRLRXJCa293ZTkwbVArMG5GaApvdDlJbWdkbHc2ejZ3WVVnUVQ2c21rMEtxM0c3ajFMM2xXUlJxRzJQY0ZHQ0tpRWRFUVZZSzBUay9jaWhIc256CmJPc3NJZ2cxQVJqVDVJeWYvNGp3NHFKemtZVkJjWXgvaHJ0Z3NqZ2FZajV1V0xPaHVzOTdlK2ZGdHRWZlh3R0gKVVNjMmlIQWN0a1IxdkVBSFR0Q3oyVk95WjUzd01rbjFXS0VSdTZnN05lSllzMnFQWllSKzBaSS9YTE1WenZQbgpPendTMG8xVjA2ZFNad0tDQVFFQTZsRHRVc1gxOWVzRlhqWk1xK3pDb1IxejZhWStUaFVOL0lTVlIveVcyb1BQClVrOHYrV2hjR2NPa1dzWHc0b24zOUN2NVhqMFp5QkRPc2xVdjBVNUZ0UWtSYXduaWNKblFZUnpxWHJJRWRKdlgKZ245eDY0Wm9oWVhubkRJQWk5ZDU5Rnl6M3FiQ1ladDFaY3BIOXpTRkxtQXFZa2Y3U2t3TUFvRi9xYkMyMkxWbApBRElqb05wTzlGMlc2MUpXS0FXR0t3ZE5GeDM0MFhkY0FORHVlUVdScFVuU0FhTDNQK3dYNVI4TUxsV3I1NHJPCjFDT0xISUZiekxCLzZyS2hDNjRFUmRPaHo0OGNlRVIyUVFIS0hOKzN3UGdYbVM0L2wrM1dVcFN4OWtsc3JBcHIKNVpieXlYTHJkdm5IZmZ0Q1haYkdsc3kzRWlhNW5rRVFYOS9qQWxURjFRS0NBUUFsbDlkVE5leDdWeXhzLzB6OQpnNDI0NVQxNEthc204ejlBYlFCeVZ4cEFpcElDYm04NzZ5L3RXdjI5bnd4SmR5NUtRMmg5SnN0MnVQU0ZGTWJMCkNDSmNSRElVcjhJMk9JQVlBTzJiRFUvdnN4RTIvSnRFaXo2cktBTHBORlRFQ2xaMUxLa2pmQnFpWGd5SFpPVWgKU0RJQ3c3MTZuUmVHNVBMc2dmL2hucWpyYkNBSk9sbW8yVVp1cVJLVHdPVmMrSEhlVkJnOWFvN1dtZnRHNjBaKwpCaEthRWpiUnRrbURyWVBwYzl3T3lOeno1SWhUdjlOd0E3Zy9HMEp2QXIzMXk3SDBjYWZReTgxTmM0dVQyemF6Ck5lbjVGYkFUTWN0WWtZK2VJZEljS09CbVVDa2dQbkltK3VSWWxIQnRDN21VU0VFRjFPV0JFZk4vMHVpcHdRUDkKc20vQkFvSUJBUUNhM21vOWIwSW1DL1E4Vkw5UVV1aEEvT3FEMzdFR2dydi96dEdzQnJMZU1vaHc2bzNXMXJjcApBRG85Rk44bG0vTWFtNFh5VjRnV3g2VVdFVi9OZzJKblNWc04yRGFtSGNPd3JCL3IvdFViRFhYZmRzU2cydkZ5CmJ4S3FGaEp1V3pqcjNlbTBtNXVXVDkzRUxYSnJYWGM1TTY1UHp5dXo2NWQwZ0lzVWFRd3hKNU5lRWNXaXB5ZlEKTTV0d1piYzBOSko5RmhKSjJURi9vTmhhWWIxOGw4V3Y3WjYwSGpZMU5hS0ZlWVBmakJoV3JWUU91bjlUazl4TQo2Y3RpSURaNU5jYjFMKytlOUFQcEtiYlBPSk9SaWZ3MXVzUStKbWM1ejZUOFovTkh5VGZlYmZUcWhsNXA3MTdhCkFEVnVld2RlUEMxOXRraTU0b2FFcHBSZ0NlWk13Q01SQW9JQkFRQ1F4ZHRnbWJETHJ6U3ZvaW83bTZERkxmR20KQ2wvNWVEOEFWSDVMejlxWEdKTDhybzhEUHpXMkxQMVAzUlNmd2MrR3cvczFvZ3F2TlFzOGYwbjlSWFdiUDVKSgordVJUUG9QeWpQOTF1czNBVDgwWkMxeElPd3pRaHMzRVpDSjVLQ1FudExrcm9XRlFQNE04cGQxR080Q2t0WncxCm5WUXM3VStQbjdXbFJyNW9yaDEwYkxCUmR3R3R0WG1CVE9lNzY0R3g3Yk50SDY1emp6VWtwRnZxY0hzRWZPN1EKUWJ4Vi9CS0xwaVRTUmtYd1RYZksrTlFYVFlNNVprSGtKUVhqZmZIUGNOcU1WSjMzbVRjd3NGcmVLOC95M2RZUApDM295a2RkS1dsOXZxM1kzNGxtM2hIL3FNMFg0U0tKQlFhZjdYc1FnSW1nNDRpcG9qckt3bnA1emVVUDEKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K"
        },
        "kubeDNSServiceIP": {
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "Kubernetes DNS IP"
            },
            "type": "string"
        },
        "kubeServiceCidr": {
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Kubernetes service address space"
            },
            "type": "string"
        },
        "kubernetesACIConnectorCPULimit": {
            "defaultValue": "50m",
            "metadata": {
                "description": "ACI Connector CPU Limit"
            },
            "type": "string"
        },
        "kubernetesACIConnectorCPURequests": {
            "defaultValue": "50m",
            "metadata": {
                "description": "ACI Connector CPU Requests"
            },
            "type": "string"
        },
        "kubernetesACIConnectorClientId": {
            "defaultValue": "",
            "metadata": {
                "description": "Client id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorClientKey": {
            "defaultValue": "",
            "metadata": {
                "description": "Client key for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "ACI Connector Memory Limit"
            },
            "type": "string"
        },
        "kubernetesACIConnectorMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "ACI Connector Memory Requests"
            },
            "type": "string"
        },
        "kubernetesACIConnectorNodeName": {
            "defaultValue": "aci-connector",
            "metadata": {
                "description": "Node name for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorOS": {
            "defaultValue": "Linux",
            "metadata": {
                "description": "OS for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorRegion": {
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Region for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorSpec": {
            "defaultValue": "microsoft/virtual-kubelet:latest",
            "metadata": {
                "description": "The container spec for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorSubscriptionId": {
            "defaultValue": "",
            "metadata": {
                "description": "Subscription id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorTaint": {
            "defaultValue": "azure.com/aci",
            "metadata": {
                "description": "Taint for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesACIConnectorTenantId": {
            "defaultValue": "",
            "metadata": {
                "description": "Tenant id for ACI Connector."
            },
            "type": "string"
        },
        "kubernetesAddonManagerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/kube-addon-manager-amd64:v8.6",
            "metadata": {
                "description": "The container spec for hyperkube."
            },
            "type": "string"
        },
        "kubernetesAddonResizerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/addon-resizer:1.7",
            "metadata": {
                "description": "The container spec for addon-resizer."
            },
            "type": "string"
        },
        "kubernetesCcmImageSpec": {
            "defaultValue": "",
            "metadata": {
                "description": "The container spec for cloud-controller-manager."
            },
            "type": "string"
        },
        "kubernetesDNSMasqSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-dnsmasq-nanny-amd64:1.14.8",
            "metadata": {
                "description": "The container spec for kube-dnsmasq-amd64."
            },
            "type": "string"
        },
        "kubernetesDashboardCPULimit": {
            "defaultValue": "300m",
            "metadata": {
                "description": "Dashboard CPU Limit."
            },
            "type": "string"
        },
        "kubernetesDashboardCPURequests": {
            "defaultValue": "300m",
            "metadata": {
                "description": "Dashboard CPU Requests."
            },
            "type": "string"
        },
        "kubernetesDashboardMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Dashboard Memory Limit."
            },
            "type": "string"
        },
        "kubernetesDashboardMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Dashboard Memory Requests."
            },
            "type": "string"
        },
        "kubernetesDashboardSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/kubernetes-dashboard-amd64:v1.8.3",
            "metadata": {
                "description": "The container spec for kubernetes-dashboard-amd64."
            },
            "type": "string"
        },
        "kubernetesExecHealthzSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/exechealthz-amd64:1.2",
            "metadata": {
                "description": "The container spec for exechealthz-amd64."
            },
            "type": "string"
        },
        "kubernetesHeapsterSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/heapster-amd64:v1.5.1",
            "metadata": {
                "description": "The container spec for heapster."
            },
            "type": "string"
        },
        "kubernetesHyperkubeSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/hyperkube-amd64:v1.10.1",
            "metadata": {
                "description": "The container spec for hyperkube."
            },
            "type": "string"
        },
        "kubernetesKubeDNSSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/k8s-dns-kube-dns-amd64:1.14.8",
            "metadata": {
                "description": "The container spec for kubedns-amd64."
            },
            "type": "string"
        },
        "kubernetesKubeletClusterDomain": {
            "metadata": {
                "description": "--cluster-domain Kubelet config"
            },
            "type": "string",
            "defaultValue": "cluster.local"
        },
        "kubernetesMetricsServerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/metrics-server-amd64:v0.2.1",
            "metadata": {
                "description": "The container spec for Metrics Server."
            },
            "type": "string"
        },
        "kubernetesNonMasqueradeCidr": {
            "metadata": {
                "description": "kubernetesNonMasqueradeCidr cluster subnet"
            },
            "type": "string",
            "defaultValue": "10.244.0.0/16"
        },
        "kubernetesPodInfraContainerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/pause-amd64:3.1",
            "metadata": {
                "description": "The container spec for pod infra."
            },
            "type": "string"
        },
        "kubernetesReschedulerCPULimit": {
            "defaultValue": "10m",
            "metadata": {
                "description": "Rescheduler CPU Limit."
            },
            "type": "string"
        },
        "kubernetesReschedulerCPURequests": {
            "defaultValue": "10m",
            "metadata": {
                "description": "Rescheduler CPU Requests."
            },
            "type": "string"
        },
        "kubernetesReschedulerMemoryLimit": {
            "defaultValue": "100Mi",
            "metadata": {
                "description": "Rescheduler Memory Limit."
            },
            "type": "string"
        },
        "kubernetesReschedulerMemoryRequests": {
            "defaultValue": "100Mi",
            "metadata": {
                "description": "Rescheduler Memory Requests."
            },
            "type": "string"
        },
        "kubernetesReschedulerSpec": {
            "defaultValue": "k8s-gcrio.azureedge.net/rescheduler:v0.3.1",
            "metadata": {
                "description": "The container spec for rescheduler."
            },
            "type": "string"
        },
        "kubernetesTillerCPULimit": {
            "defaultValue": "50m",
            "metadata": {
                "description": "Helm Tiller CPU Limit."
            },
            "type": "string"
        },
        "kubernetesTillerCPURequests": {
            "defaultValue": "50m",
            "metadata": {
                "description": "Helm Tiller CPU Requests."
            },
            "type": "string"
        },
        "kubernetesTillerMaxHistory": {
            "defaultValue": "0",
            "metadata": {
                "description": "Helm Tiller Max History to Store. '0' for no limit."
            },
            "type": "string"
        },
        "kubernetesTillerMemoryLimit": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Helm Tiller Memory Limit."
            },
            "type": "string"
        },
        "kubernetesTillerMemoryRequests": {
            "defaultValue": "150Mi",
            "metadata": {
                "description": "Helm Tiller Memory Requests."
            },
            "type": "string"
        },
        "kubernetesTillerSpec": {
            "defaultValue": "gcrio.azureedge.net/kubernetes-helm/tiller:v2.8.1",
            "metadata": {
                "description": "The container spec for Helm Tiller."
            },
            "type": "string"
        },
        "linuxAdminUsername": {
            "metadata": {
                "description": "User name for the Linux Virtual Machines (SSH or Password)."
            },
            "type": "string",
            "defaultValue": "azureuser"
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Sets the location for all resources in the cluster"
            },
            "type": "string"
        },
        "masterEndpointDNSNamePrefix": {
            "metadata": {
                "description": "Sets the Domain name label for the master IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
            },
            "type": "string",
            "defaultValue": "tddevelopment"
        },
        "masterOffset": {
            "allowedValues": [
                0,
                1,
                2,
                3,
                4
            ],
            "defaultValue": 0,
            "metadata": {
                "description": "The offset into the master pool where to start creating master VMs.  This value can be from 0 to 4, but must be less than masterCount."
            },
            "type": "int"
        },
        "masterVMSize": {
            "allowedValues": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A10",
                "Standard_A11",
                "Standard_A1_v2",
                "Standard_A2",
                "Standard_A2_v2",
                "Standard_A2m_v2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A4_v2",
                "Standard_A4m_v2",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A8_v2",
                "Standard_A8m_v2",
                "Standard_A9",
                "Standard_B1ms",
                "Standard_B1s",
                "Standard_B2ms",
                "Standard_B2s",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_D1",
                "Standard_D11",
                "Standard_D11_v2",
                "Standard_D11_v2_Promo",
                "Standard_D12",
                "Standard_D12_v2",
                "Standard_D12_v2_Promo",
                "Standard_D13",
                "Standard_D13_v2",
                "Standard_D13_v2_Promo",
                "Standard_D14",
                "Standard_D14_v2",
                "Standard_D14_v2_Promo",
                "Standard_D15_v2",
                "Standard_D16_v3",
                "Standard_D16s_v3",
                "Standard_D1_v2",
                "Standard_D2",
                "Standard_D2_v2",
                "Standard_D2_v2_Promo",
                "Standard_D2_v3",
                "Standard_D2s_v3",
                "Standard_D3",
                "Standard_D32_v3",
                "Standard_D32s_v3",
                "Standard_D3_v2",
                "Standard_D3_v2_Promo",
                "Standard_D4",
                "Standard_D4_v2",
                "Standard_D4_v2_Promo",
                "Standard_D4_v3",
                "Standard_D4s_v3",
                "Standard_D5_v2",
                "Standard_D5_v2_Promo",
                "Standard_D64_v3",
                "Standard_D64s_v3",
                "Standard_D8_v3",
                "Standard_D8s_v3",
                "Standard_DS1",
                "Standard_DS11",
                "Standard_DS11_v2",
                "Standard_DS11_v2_Promo",
                "Standard_DS12",
                "Standard_DS12_v2",
                "Standard_DS12_v2_Promo",
                "Standard_DS13",
                "Standard_DS13-2_v2",
                "Standard_DS13-4_v2",
                "Standard_DS13_v2",
                "Standard_DS13_v2_Promo",
                "Standard_DS14",
                "Standard_DS14-4_v2",
                "Standard_DS14-8_v2",
                "Standard_DS14_v2",
                "Standard_DS14_v2_Promo",
                "Standard_DS15_v2",
                "Standard_DS1_v2",
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS2_v2_Promo",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS3_v2_Promo",
                "Standard_DS4",
                "Standard_DS4_v2",
                "Standard_DS4_v2_Promo",
                "Standard_DS5_v2",
                "Standard_DS5_v2_Promo",
                "Standard_E16_v3",
                "Standard_E16s_v3",
                "Standard_E2_v3",
                "Standard_E2s_v3",
                "Standard_E32-16s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32_v3",
                "Standard_E32s_v3",
                "Standard_E4_v3",
                "Standard_E4s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E64_v3",
                "Standard_E64s_v3",
                "Standard_E8_v3",
                "Standard_E8s_v3",
                "Standard_F1",
                "Standard_F16",
                "Standard_F16s",
                "Standard_F16s_v2",
                "Standard_F1s",
                "Standard_F2",
                "Standard_F2s",
                "Standard_F2s_v2",
                "Standard_F32s_v2",
                "Standard_F4",
                "Standard_F4s",
                "Standard_F4s_v2",
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                "Standard_F8",
                "Standard_F8s",
                "Standard_F8s_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS4-4",
                "Standard_GS4-8",
                "Standard_GS5",
                "Standard_GS5-16",
                "Standard_GS5-8",
                "Standard_H16",
                "Standard_H16m",
                "Standard_H16mr",
                "Standard_H16r",
                "Standard_H8",
                "Standard_H8m",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_M128-32ms",
                "Standard_M128-64ms",
                "Standard_M128ms",
                "Standard_M128s",
                "Standard_M64-16ms",
                "Standard_M64-32ms",
                "Standard_M64ms",
                "Standard_M64s",
                "Standard_NC12",
                "Standard_NC12s_v2",
                "Standard_NC12s_v3",
                "Standard_NC24",
                "Standard_NC24r",
                "Standard_NC24rs_v2",
                "Standard_NC24rs_v3",
                "Standard_NC24s_v2",
                "Standard_NC24s_v3",
                "Standard_NC6",
                "Standard_NC6s_v2",
                "Standard_NC6s_v3",
                "Standard_ND12s",
                "Standard_ND24rs",
                "Standard_ND24s",
                "Standard_ND6s",
                "Standard_NV12",
                "Standard_NV24",
                "Standard_NV6"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine."
            },
            "type": "string",
            "defaultValue": "Standard_D2_v2"
        },
        "masterVnetSubnetID": {
            "metadata": {
                "description": "Sets the vnet subnet of the master."
            },
            "type": "string",
            "defaultValue": "/subscriptions/e39b9baa-50b5-4665-8297-2fa801ed1fa4/resourceGroups/td-poc-vnet-devlabs-rsg/providers/Microsoft.Network/virtualNetworks/td-poc-vnet-devlabs/subnets/Master"
        },
        "maxPods": {
            "defaultValue": 30,
            "metadata": {
                "description": "This param has been deprecated."
            },
            "type": "int"
        },
        "nameSuffix": {
            "defaultValue": "ffd256a",
            "metadata": {
                "description": "A string hash of the master DNS name to uniquely identify the cluster."
            },
            "type": "string"
        },
        "networkPolicy": {
            "allowedValues": [
                "none",
                "azure",
                "calico",
                "cilium"
            ],
            "defaultValue": "none",
            "metadata": {
                "description": "The network policy enforcement to use (none|azure|calico|cilium)"
            },
            "type": "string"
        },
        "orchestratorName": {
            "defaultValue": "k8s",
            "maxLength": 3,
            "metadata": {
                "description": "The orchestrator name used to identify the orchestrator.  This must be no more than 3 digits in length, otherwise it will exceed Windows Naming"
            },
            "minLength": 3,
            "type": "string"
        },
        "osImageName": {
            "defaultValue": "",
            "metadata": {
                "description": "Name of a Linux OS image. Needs to be used in conjuction with osImageResourceGroup."
            },
            "type": "string"
        },
        "osImageOffer": {
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Linux OS image type."
            },
            "type": "string"
        },
        "osImagePublisher": {
            "defaultValue": "Canonical",
            "metadata": {
                "description": "OS image publisher."
            },
            "type": "string"
        },
        "osImageResourceGroup": {
            "defaultValue": "",
            "metadata": {
                "description": "Resource group of a Linux OS image. Needs to be used in conjuction with osImageName."
            },
            "type": "string"
        },
        "osImageSKU": {
            "defaultValue": "16.04-LTS",
            "metadata": {
                "description": "OS image SKU."
            },
            "type": "string"
        },
        "osImageVersion": {
            "defaultValue": "16.04.201804050",
            "metadata": {
                "description": "OS image version."
            },
            "type": "string"
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring",
            "defaultValue": "2ddba07b-95b9-4d45-b224-f03afd5eefbd"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring",
            "defaultValue": "tdadmin2018"
        },
        "sshRSAPublicKey": {
            "metadata": {
                "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
            },
            "type": "string",
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8ujxcfRR4df4clP8up2LSQIB0w8CaQVLEFsiSnhgfXtLTR+QbrXhVpMvayhXpCCTJfqOSF0pGGEd+aEO1febNhq9eC0U/uL6VcD1h6AFRrnAeVe/T95AuFqbRJ8PVqegzLdan0kY/IbCbSt1tilBFFNKqxSADFufhrOj1Tt5qP/me/X6QFyypQeQXeNPIuDdCiQPppaKC7ZbmBUQDqbCsm2zINt1L1PE0LhoDLJuAE6EDwDLxnhEXBijumQzVSWpXvy2nqGrOjtaPZW6A1WH6dGEBjtj3HgWMQwuihwbq7nBILDAeOlJkUWD6SVyEz314K4KIHLu0otBlM4H1W8vR jvarughese@architech.ca"
        },
        "targetEnvironment": {
            "defaultValue": "AzurePublicCloud",
            "metadata": {
                "description": "The azure deploy environment. Currently support: AzurePublicCloud, AzureChinaCloud"
            },
            "type": "string"
        },
        "vnetCidr": {
            "defaultValue": "",
            "metadata": {
                "description": "Cluster vnet cidr"
            },
            "type": "string"
        },
        "vnetCniLinuxPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-linux-amd64-v1.0.2.tgz",
            "type": "string"
        },
        "vnetCniWindowsPluginsURL": {
            "defaultValue": "https://acs-mirror.azureedge.net/cni/azure-vnet-cni-windows-amd64-v1.0.2.zip",
            "type": "string"
        }
    },
    "variables": {
        "agentpriAccountName": "[concat(variables('storageAccountBaseName'), 'agnt0')]",
        "agentpriAvailabilitySet": "[concat('agentpri-availabilitySet-', variables('nameSuffix'))]",
        "agentpriCount": "[parameters('agentpriCount')]",
        "agentpriIndex": 0,
        "agentpriOffset": "[parameters('agentpriOffset')]",
        "agentpriStorageAccountOffset": "[mul(variables('maxStorageAccountsPerAgent'),variables('agentpriIndex'))]",
        "agentpriStorageAccountsCount": "[add(div(variables('agentpriCount'), variables('maxVMsPerStorageAccount')), mod(add(mod(variables('agentpriCount'), variables('maxVMsPerStorageAccount')),2), add(mod(variables('agentpriCount'), variables('maxVMsPerStorageAccount')),1)))]",
        "agentpriSubnetName": "[parameters('agentpriVnetSubnetID')]",
        "agentpriVMNamePrefix": "[concat(variables('orchestratorName'), '-agentpri-', variables('nameSuffix'), '-')]",
        "agentpriVMSize": "[parameters('agentpriVMSize')]",
        "agentpriVnetParts": "[split(parameters('agentpriVnetSubnetID'),'/subnets/')]",
        "agentpriVnetSubnetID": "[parameters('agentpriVnetSubnetID')]",
        "agentpriosImageName": "[parameters('agentpriosImageName')]",
        "agentpriosImageOffer": "[parameters('agentpriosImageOffer')]",
        "agentpriosImagePublisher": "[parameters('agentpriosImagePublisher')]",
        "agentpriosImageResourceGroup": "[parameters('agentpriosImageResourceGroup')]",
        "agentpriosImageSKU": "[parameters('agentpriosImageSKU')]",
        "agentpriosImageVersion": "[parameters('agentpriosImageVersion')]",
        "allocateNodeCidrs": true,
        "apiServerCertificate": "[parameters('apiServerCertificate')]",
        "apiServerPrivateKey": "[parameters('apiServerPrivateKey')]",
        "apiVersionDefault": "2016-03-30",
        "apiVersionLinkDefault": "2015-01-01",
        "apiVersionStorage": "2015-06-15",
        "apiVersionStorageManagedDisks": "2016-04-30-preview",
        "caCertificate": "[parameters('caCertificate')]",
        "caPrivateKey": "[parameters('caPrivateKey')]",
        "clientCertificate": "[parameters('clientCertificate')]",
        "clientPrivateKey": "[parameters('clientPrivateKey')]",
        "cloudProviderBackoff": "[parameters('cloudProviderBackoff')]",
        "cloudProviderBackoffDuration": "[parameters('cloudProviderBackoffDuration')]",
        "cloudProviderBackoffExponent": "[parameters('cloudProviderBackoffExponent')]",
        "cloudProviderBackoffJitter": "[parameters('cloudProviderBackoffJitter')]",
        "cloudProviderBackoffRetries": "[parameters('cloudProviderBackoffRetries')]",
        "cloudProviderRatelimit": "[parameters('cloudProviderRatelimit')]",
        "cloudProviderRatelimitBucket": "[parameters('cloudProviderRatelimitBucket')]",
        "cloudProviderRatelimitQPS": "[parameters('cloudProviderRatelimitQPS')]",
        "cniPluginsURL": "[parameters('cniPluginsURL')]",
        "containerRuntime": "[parameters('containerRuntime')]",
        "contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "dataStorageAccountPrefixSeed": 97,
        "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]",
        "dockerEngineDownloadRepo": "[parameters('dockerEngineDownloadRepo')]",
        "dockerEngineVersion": "[parameters('dockerEngineVersion')]",
        "etcdCaFilepath": "/etc/kubernetes/certs/ca.crt",
        "etcdClientCertFilepath": "/etc/kubernetes/certs/etcdclient.crt",
        "etcdClientCertificate": "[parameters('etcdClientCertificate')]",
        "etcdClientKeyFilepath": "/etc/kubernetes/certs/etcdclient.key",
        "etcdClientPrivateKey": "[parameters('etcdClientPrivateKey')]",
        "etcdDiskSizeGB": "[parameters('etcdDiskSizeGB')]",
        "etcdDownloadURLBase": "[parameters('etcdDownloadURLBase')]",
        "etcdPeerCertFilepath": [
            "/etc/kubernetes/certs/etcdpeer0.crt",
            "/etc/kubernetes/certs/etcdpeer1.crt",
            "/etc/kubernetes/certs/etcdpeer2.crt",
            "/etc/kubernetes/certs/etcdpeer3.crt",
            "/etc/kubernetes/certs/etcdpeer4.crt"
        ],
        "etcdPeerCertificates": [
            "[parameters('etcdPeerCertificate0')]"
        ],
        "etcdPeerKeyFilepath": [
            "/etc/kubernetes/certs/etcdpeer0.key",
            "/etc/kubernetes/certs/etcdpeer1.key",
            "/etc/kubernetes/certs/etcdpeer2.key",
            "/etc/kubernetes/certs/etcdpeer3.key",
            "/etc/kubernetes/certs/etcdpeer4.key"
        ],
        "etcdPeerPrivateKeys": [
            "[parameters('etcdPeerPrivateKey0')]"
        ],
        "etcdServerCertFilepath": "/etc/kubernetes/certs/etcdserver.crt",
        "etcdServerCertificate": "[parameters('etcdServerCertificate')]",
        "etcdServerKeyFilepath": "/etc/kubernetes/certs/etcdserver.key",
        "etcdServerPrivateKey": "[parameters('etcdServerPrivateKey')]",
        "etcdVersion": "[parameters('etcdVersion')]",
        "fqdnEndpointSuffix": "[parameters('fqdnEndpointSuffix')]",
        "gcHighThreshold": "[parameters('gcHighThreshold')]",
        "gcLowThreshold": "[parameters('gcLowThreshold')]",
        "generateProxyCertsScript": "H4sIAAAAAAAA/5RW/2+jxhP9nb9izrbOiXQEcC7ffPLnI4tQXZQ0STGVGrUVWsPYbA27ZHedxL3L/14tNgQc4179k5md9+btm2FE94M1pcyaEpkYhuRLESFYPFcW+Xsp0Io4U4QyFNLKBX+iknIWrtOONOLev/vtIXTH4bX3MOr0vtWfhyNLZbnGvazMKKXIlBmRowWuXjsl0A9qKD9ogURCvUFurrzbYKteFdtB0Cy4znQn/ju0O/F3oSMp3qEbqqvYTnSh3Avcy9D3fvnVmwRfvfGl51ewsWbadz4crRkjFEpaAh+XKFWCJEbx5pA5oymWhTa6vLXKrVCTrmk0CrWDaON0M7KHZoGrkuX6fBJWE+H6QfjT1Y13Pw6+asLWw+HIQhVZi+UUBUOF0mpUKcfhDX/tPbQw10/20m6GpKapXe2PSt3oNPAl50KBNtANbkLv9vL+7uo2mJSuNoLDUaJULoeW5QzOjuwj+8gZDo7PLl472zzuuJBRZ9mE2lRV1m0xlS7VqcpYGxeqKG68X9vqvI1NDX1l8AdYG0r98e1lQdY7yBYKs/zQMLowR4aCKATBuQJ3bPAcmZSpPhCSgMmXCnr1lQQD+/N5lSbwEUyGz2C+nNgXYMZkJcE5H5yCHuItZIPMD8CUy+lf0Lfc21HRbbeQ7Y77dWGaXN9sr7JqebWpq4t5S97B4U78ui4ynwucE8WFdTeSK6kwG2ZEKhSyX5VZX70oVtz/7NgGk7JdzO64YYA73uGSRBVKFJSkYA92avQDw3gWVGFY9DxUPIypXBwcwjcDAKCYAaWtUtDbtxnhf9BrXSItVNVaaILre2IvUk/wVt3tol3wMeNPCM8JVShzEiHkJI4pmwNRMMU5ZUw/8Bk4UkFKGRZAiTGYFPqOtP6QltXfc7s2AXvvFCUZj+HUtluzXnd2JnymKgkFKrGqmjTjAihQBg4M4Bg+wwmcwhmcwwU4NjgOOIMvEPMiV/920FZnv0Pv/2DiI9gAf8LHjzAVSBbw/TvIFDGHkyIz5gy1wC5MUx4tYMkUTYGkadEroBIEknhlFDqjLA7pLJwRmi4FgmPbcKKFlW2N0qV+DcwESaoSows/kwWuiRa4kp+g7BekSIp/tWZOMSJLuUl/5qyvgEQR5goIPJEUVFK2WYK2Dgj0zT4cJKs8QXb4waCzSki2+JcZ70DvICIKah9Jr4edL6ASZI1JrZjeRvwdtloer4edfeBiylvQawHrga21Z//cGF24mmnNRcV1wYhnGWEx6CZh/GltW4aEySJR7xaSFj0FfKFSSQNTif+18Iwa/wQAAP//gHPm/+MKAAA=",
        "generatorCode": "[parameters('generatorCode')]",
        "kubeClusterCidr": "[parameters('kubeClusterCidr')]",
        "kubeConfigCertificate": "[parameters('kubeConfigCertificate')]",
        "kubeConfigPrivateKey": "[parameters('kubeConfigPrivateKey')]",
        "kubeDNSServiceIP": "[parameters('kubeDNSServiceIP')]",
        "kubeServiceCidr": "[parameters('kubeServiceCidr')]",
        "kubeconfigServer": "[concat('https://', variables('masterFqdnPrefix'), '.', variables('location'), '.', variables('fqdnEndpointSuffix'))]",
        "kubernetesACIConnectorCPULimit": "[parameters('kubernetesACIConnectorCPULimit')]",
        "kubernetesACIConnectorCPURequests": "[parameters('kubernetesACIConnectorCPURequests')]",
        "kubernetesACIConnectorClientId": "[parameters('kubernetesACIConnectorClientId')]",
        "kubernetesACIConnectorClientKey": "[parameters('kubernetesACIConnectorClientKey')]",
        "kubernetesACIConnectorMemoryLimit": "[parameters('kubernetesACIConnectorMemoryLimit')]",
        "kubernetesACIConnectorMemoryRequests": "[parameters('kubernetesACIConnectorMemoryRequests')]",
        "kubernetesACIConnectorNodeName": "[parameters('kubernetesACIConnectorNodeName')]",
        "kubernetesACIConnectorOS": "[parameters('kubernetesACIConnectorOS')]",
        "kubernetesACIConnectorRegion": "[parameters('kubernetesACIConnectorRegion')]",
        "kubernetesACIConnectorResourceGroup": "[parameters('kubernetesACIConnectorResourceGroup')]",
        "kubernetesACIConnectorSpec": "[parameters('kubernetesACIConnectorSpec')]",
        "kubernetesACIConnectorSubscriptionId": "[parameters('kubernetesACIConnectorSubscriptionId')]",
        "kubernetesACIConnectorTaint": "[parameters('kubernetesACIConnectorTaint')]",
        "kubernetesACIConnectorTenantId": "[parameters('kubernetesACIConnectorTenantId')]",
        "kubernetesAPIServerIP": "[parameters('firstConsecutiveStaticIP')]",
        "kubernetesAddonManagerSpec": "[parameters('kubernetesAddonManagerSpec')]",
        "kubernetesAddonResizerSpec": "[parameters('kubernetesAddonResizerSpec')]",
        "kubernetesCcmImageSpec": "[parameters('kubernetesCcmImageSpec')]",
        "kubernetesDNSMasqSpec": "[parameters('kubernetesDNSMasqSpec')]",
        "kubernetesDashboardCPULimit": "[parameters('kubernetesDashboardCPULimit')]",
        "kubernetesDashboardCPURequests": "[parameters('kubernetesDashboardCPURequests')]",
        "kubernetesDashboardMemoryLimit": "[parameters('kubernetesDashboardMemoryLimit')]",
        "kubernetesDashboardMemoryRequests": "[parameters('kubernetesDashboardMemoryRequests')]",
        "kubernetesDashboardSpec": "[parameters('kubernetesDashboardSpec')]",
        "kubernetesExecHealthzSpec": "[parameters('kubernetesExecHealthzSpec')]",
        "kubernetesHeapsterSpec": "[parameters('kubernetesHeapsterSpec')]",
        "kubernetesHyperkubeSpec": "[parameters('kubernetesHyperkubeSpec')]",
        "kubernetesKubeDNSSpec": "[parameters('kubernetesKubeDNSSpec')]",
        "kubernetesKubeletClusterDomain": "[parameters('kubernetesKubeletClusterDomain')]",
        "kubernetesMetricsServerSpec": "[parameters('kubernetesMetricsServerSpec')]",
        "kubernetesNonMasqueradeCidr": "[parameters('kubernetesNonMasqueradeCidr')]",
        "kubernetesPodInfraContainerSpec": "[parameters('kubernetesPodInfraContainerSpec')]",
        "kubernetesReschedulerCPULimit": "[parameters('kubernetesReschedulerCPULimit')]",
        "kubernetesReschedulerCPURequests": "[parameters('kubernetesReschedulerCPURequests')]",
        "kubernetesReschedulerMemoryLimit": "[parameters('kubernetesReschedulerMemoryLimit')]",
        "kubernetesReschedulerMemoryRequests": "[parameters('kubernetesReschedulerMemoryRequests')]",
        "kubernetesReschedulerSpec": "[parameters('kubernetesReschedulerSpec')]",
        "kubernetesTillerCPULimit": "[parameters('kubernetesTillerCPULimit')]",
        "kubernetesTillerCPURequests": "[parameters('kubernetesTillerCPURequests')]",
        "kubernetesTillerMaxHistory": "[parameters('kubernetesTillerMaxHistory')]",
        "kubernetesTillerMemoryLimit": "[parameters('kubernetesTillerMemoryLimit')]",
        "kubernetesTillerMemoryRequests": "[parameters('kubernetesTillerMemoryRequests')]",
        "kubernetesTillerSpec": "[parameters('kubernetesTillerSpec')]",
        "labelResourceGroup": "[if(or(or(endsWith(variables('truncatedResourceGroup'), '-'), endsWith(variables('truncatedResourceGroup'), '_')), endsWith(variables('truncatedResourceGroup'), '.')), concat(take(variables('truncatedResourceGroup'), 62), 'z'), variables('truncatedResourceGroup'))]",
        "location": "[variables('locations')[mod(add(2,length(parameters('location'))),add(1,length(parameters('location'))))]]",
        "locations": [
            "[resourceGroup().location]",
            "[parameters('location')]"
        ],
        "masterAvailabilitySet": "[concat('master-availabilityset-', variables('nameSuffix'))]",
        "masterCount": 1,
        "masterEtcdClientPort": 2379,
        "masterEtcdClientURLs": [
            "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdClientPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdClientPort'))]"
        ],
        "masterEtcdClusterStates": [
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0])]",
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2])]",
            "[concat(variables('masterVMNames')[0], '=', variables('masterEtcdPeerURLs')[0], ',', variables('masterVMNames')[1], '=', variables('masterEtcdPeerURLs')[1], ',', variables('masterVMNames')[2], '=', variables('masterEtcdPeerURLs')[2], ',', variables('masterVMNames')[3], '=', variables('masterEtcdPeerURLs')[3], ',', variables('masterVMNames')[4], '=', variables('masterEtcdPeerURLs')[4])]"
        ],
        "masterEtcdPeerURLs": [
            "[concat('https://', variables('masterPrivateIpAddrs')[0], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[1], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[2], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[3], ':', variables('masterEtcdServerPort'))]",
            "[concat('https://', variables('masterPrivateIpAddrs')[4], ':', variables('masterEtcdServerPort'))]"
        ],
        "masterEtcdServerPort": 2380,
        "masterFirstAddrComment": "these MasterFirstAddrComment are used to place multiple masters consecutively in the address space",
        "masterFirstAddrOctet4": "[variables('masterFirstAddrOctets')[3]]",
        "masterFirstAddrOctets": "[split(parameters('firstConsecutiveStaticIP'),'.')]",
        "masterFirstAddrPrefix": "[concat(variables('masterFirstAddrOctets')[0],'.',variables('masterFirstAddrOctets')[1],'.',variables('masterFirstAddrOctets')[2],'.')]",
        "masterFqdnPrefix": "[tolower(parameters('masterEndpointDNSNamePrefix'))]",
        "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
        "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
        "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
        "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
        "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
        "masterOffset": "[parameters('masterOffset')]",
        "masterPrivateIp": "[parameters('firstConsecutiveStaticIP')]",
        "masterPrivateIpAddrs": [
            "[concat(variables('masterFirstAddrPrefix'), add(0, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(1, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(2, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(3, int(variables('masterFirstAddrOctet4'))))]",
            "[concat(variables('masterFirstAddrPrefix'), add(4, int(variables('masterFirstAddrOctet4'))))]"
        ],
        "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterFqdnPrefix'), '-', variables('nameSuffix'))]",
        "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
        "masterVMNames": [
            "[concat(variables('masterVMNamePrefix'), '0')]",
            "[concat(variables('masterVMNamePrefix'), '1')]",
            "[concat(variables('masterVMNamePrefix'), '2')]",
            "[concat(variables('masterVMNamePrefix'), '3')]",
            "[concat(variables('masterVMNamePrefix'), '4')]"
        ],
        "masterVMSize": "[parameters('masterVMSize')]",
        "maxPods": "[parameters('maxPods')]",
        "maxStorageAccountsPerAgent": "[div(variables('maxVMsPerPool'),variables('maxVMsPerStorageAccount'))]",
        "maxVMsPerPool": 100,
        "maxVMsPerStorageAccount": 20,
        "mountetcdScript": "H4sIAAAAAAAA/3RSUW8TPRB896+YL8nb14uTgioVKUWVACmCNhWEJ4Qqn713Z+LYx3ndpgX+O/IlTQ8J7uXkHe/M7HjH/8nSelmq2IgxrkLybH0NG2GCJzTUEayPTMogVCDWBiVplSLlc5lqNMxtfCVlmeo4dSp53bTKTD2x1C4kU1hvWf5fplrOz85PZ+cvxBgrrwncUM9gIyq7I3OCjlqnnhBy4R73lpv+2HMhc0E3ytcUn27n6tFFbblJ5VSHrbx8TB1JpWNBvraeZJuck2dn86mIxCh24s3y0/uFNHQno9Hi5vLjerlerq4Xkx8Z+TUXV6vP1+ub1fJ6vZB3qpPOljJnYGzciGToTpktIjE7EtuNsR2KFpPnLrHNieIn6o7+BGyFL5i8RkHfMcNXwQ15AQCkm4BRFsi5KNeRMg/oeciM9ld2ljETlRVjVNY5ZE+yiqxK0QuNnmaaj4bYUdPT3zQnxwCw/wZ+DxWVOOS/oUolx/HEh0pZd0Bnh//pCBcXQ+HeqW5Ib2ArtKpjyzb4PEjkKFzEs/a/XY4HnSZQhA+8p+hhGfMmx7qPrig83WOOSX7IAbzdVHFKO345UETxoV/s233nOxRv4dTjw61lVTq6zTu3mJ/0pW8hdV65Qy0Ptn/hQVS/AwAA//8o5bmvUwMAAA==",
        "nameSuffix": "[parameters('nameSuffix')]",
        "networkPolicy": "[parameters('networkPolicy')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        "nsgName": "[concat(variables('masterVMNamePrefix'), 'nsg')]",
        "orchestratorName": "[parameters('orchestratorName')]",
        "orchestratorNameVersionTag": "Kubernetes:1.10.1",
        "osImageName": "[parameters('osImageName')]",
        "osImageOffer": "[parameters('osImageOffer')]",
        "osImagePublisher": "[parameters('osImagePublisher')]",
        "osImageResourceGroup": "[parameters('osImageResourceGroup')]",
        "osImageSKU": "[parameters('osImageSKU')]",
        "osImageVersion": "[parameters('osImageVersion')]",
        "primaryAvailabilitySetName": "[concat('agentpri-availabilitySet-',variables('nameSuffix'))]",
        "provisionScript": "H4sIAAAAAAAA/9x87X/iNvL46/ivmDp89uG6xpDsQ5see8cS75YmgRRI7nrdHhW2AB1GciU5Cc3mf/99JPkJsAlp++L3+d6L3saaGc2MRjOj0YjDr9wJoe4EibllHcJoTgQIn5NIAo+pAEYB32C+grN4gjnFEgu4vrAOwbsjEnwWYAEcRxwLTCXIOYYpC0N2S+jsxDqEL4BTOKDxcoI5fIElRpTQGXzRAEcN+AIjssQslnCLiFRDU8YhYP4CcyBUSBSGIBlMCSVinuAdwxcYYn5DfAw+i8MAKJMwwYApmoQ4gMkKxEpIvPRlmOC8rsIREnFZjvOmgj0/ZHHgEEq0pvxloDj02TIKscQJ7tsKXARTEqZATaUAT/oBBEgiCAjXXE1ZTIMUpFlBCCs0yZQIyPexEGSS0T2uUuziGwF+GAuJeYI7xyiU89UXyxJYgnNnCRZzH4PLIumi32OOXZ9RiQjFXLgRZzdEEEbHBqyubKc/bNVe+EiCi6Xv/s3hOMRIYPgCM44j+G/3tAVfQHJwAnjePW3Zz+ELoNsFPL+POFG2w+IowvxFrfHy4flL6+rDVW90Ne4Px732hdeyzd+2NfjeO8+/qr9sq9MfeP1h/tX8bVtnVx+8zui85caCuyHzUaiNfRFPsC9D67TfOfMGZlR9NwZndPD1neWNOqfjS88bjDveYNSqvcD+nEHtfv1792O30x55wwf4An4swQme//wcnCkc5R9+0R+a+YdX+kPtxYva/UV7OPIG427v1Pv3w9fNly9fFiY+834qm/dy0L1ujzw1/FfOm6y9Rabw889Q6w+h1YLaunLhl1++U9ucWgAAmjO7M0d0powrwFMUhxISBcOEUFBql4RRWyNkK6IMK12HKbEsTEXM8SCmHbZcIhp0ko0UvHhp3RfmKtpxvu2MYzBTKIjxlPGx3mLfNhrQrLBjg19P96zGVrLDV0pLe+FAURs5l0/2F3ZOQPnLN/rPKbEeUs2catvsGl+4j3KqvGeZko7f7tCSIZTQeZqyylGfoLPdQmTqOmoU9aWo/RogiX999eucCUnREv/6yrh4E9rev9f8Lo2pa/5vEFdr63I8YUw6HP8WE46DNV4H3od+fzTwfrzqDrzTluQxtnAocNngFKkBZdlmN30Fzu9gZ9uu1z/1HuyyzYTvsB9rBSyR9tBUxc7M5QKLMNcbStiWRosF5igIwLkCW4UDO/u6ZAE4Edi1F3OMAnB8OD4CN8A3bswRDdgSvsAECfz29Uu7iBshIW4DcOLiRxKkf+XMlmh5gmeEfsJSSaBiWgdzKTJ9K8z2ZXfoDa7X3dj4sj36vmXr2LHIMg3XV9guiojA/Abz+gKvDDeSxf5c6bOa2oOB9OdKDQ1l4fuBs1sKnDF5ov7zKI5G6rT3lsVHJUKU4Jdyvwtui+1yYA2tI8kTF0GtfeUq7CJYKsleCEokNe2JznIex8pl65x3vd7oSbL5IcFUVslWQbBatscQtpbrEaxcts0M4FHJIoz5RryvErOUdrWQu8HLl68KZ8swC8nVvobpc7nDMDcJbsj1+vXeCOWLV421ZZhPkS0xzArZKghWy/YYwk7D3CnbZkr8hwyzQsxS2tVC7gYvF7EKRyMlR4I8TFeEhQc7i6ngOAHWB9/3e0WelO66364mWB0MUkoV7rKa5B5eeY32trt6hPZur7hGOz3/PEJxlwsq00NhgffTQ4UVlelhf9q7N+G2HhTgPoqoIJge7HYlbpgGO9O25SIgXKWTpak+PHuW7Njyk4De9HWOUbDKU2Yjp1iQKNon330Fck4EEAGIApphKjWsrbNsdbA89/YP+cVwn7maKiIPtrUe/XYCbrmXHdBWwS1cfTjvdp6QDGtXWZYIrxMqMG885G7IXenvFrjV/s/VwBv/MOz3KpjWllD/n2C0yOs61pZ6y8a3+doCSgs36f4p0Xv1JtqxSCUeP9PEXg5/W81Iwt//Dl7/YwK7JYs51tu6aGCf2LX7UXvwyRuNvd51d9DvXXi90YP9ygBJTBGV3cA+UbRGXq/dG427p9m4iCfm3EsYTaGGVx+GnUH3ctTt94qwCAUdvTUyQG9w3e14Si+9TveyfZ46rzKkIfY5lo8gDr3OwMu559hUET9xFkcGdeAN+1eDjjf+NOhfXWaQWSlJA533O23FfVFMimUPLXEmYq8wj8B+zIlc6XlyqJ43+ld/cKa4uhp0Rz9tzHmzRvK6Oxhdtc/HCdIa1GBbjg3wcYVcnMUSj9AkxPlMg/7VyBuP2h/OvQwu4mSJ+Kp9g0iIJiQkcjUscnc56F60Bz+N29ft7nn7Q/dciTMsqEBb06VyrQHmH5C/YNOpfQK1+855/+r0ctC/7p56g/GHdues//Hjww6sAZacYFGNPB54o0HXG+4i4t1FjGIqd1Dx/n3Z7ylb30HmNOapWVSROb0aGFvZQeYHIiXmO4j80B2NvEEpiQGSOCRLUibKoD3yzrsX3XIZFOa5wvzxcrgLefzjZbkuMwIfYn+BdzIw/nDVOfMyPmKBLxBFMxx0A0wlkSvvTmIqUlVeDb3xRbvX/uSdjrunXm+kzMn798jrDQuqjAXWVUnq4wssUYAkyrC7veGo3et44wtv1D5tj9oPmSUb5q9RHBYM+OxiOM7Yvm5fnY90zbmwAQzaGV6lSItvRMnoNeaJGLZtPVhe/2N2s2FNY+orcwFTWP1IQhwhOX/xEu7TomZtvZi3Ua7kWMacphXH7WqqKabWmhsl0lrzCYXPWnOjxPm2OJ/1UBBDYHkWT3CIZT+SArQcBwIH4BCwxeF/08DWvxwNW/W/Ha79XbtvPhza5s4mqd7r6B1iuTaJz+iUzNoqmHd63UxXnV533On3PnY/jU+7g5Ym41PiUizrwXraWFuHLRzFnEEhsJeDqeTg3Zs3paPq04duzzCgkk/FwITQkukTMFOG1CFXfR19+s94dHHZcuUyMvnK2KekLme/W8ly85W/DMYzLMcS8QkKQ3irl3iLBtTur3veSH+6PL/61O0Nx1eD8wdzokUcnLvfp2V4Tmebw06/N2p3e94gCR/d3qdtfrMcm2J5y/iC0Nm+3D9CX/mR3WI8RmBDKKi7IWPRBPkLqLsR43KJop12UNSGMQJnkNtBcXR5s/bNbTYck3kqww2J2DIst0BUbdjN4S0CGt4VE0JdPJEqWAtwJFAkwXE0wPZ+UfuSYrm2Xf6Aqf7fNoQJJ8EMQ91Vh1FH39L+BUaxvRg9o5dLFhJ/VfT2P/9czAMv++fdjkrrW2BrC9i4pdHTrnlDc5YNd1KijGpCUEopsZPCJVbGe3L11Qkx4p3sPD2IqSRLbHz9IbSDADQE5CDAccQEkYyvYIFX1oEJNu0gUDHmEeh6vW5bB37MQ3DE8BwcR5sPvEn/5QQ4RCtoNrIPS3TnKJ7guAH2XMpInLhuwG5pyFBQZ5GKtgLXGZ+52VwEC3fOlvjEV+zk5QLzt5N/cI7du6tJTGU8br6tN167A9NdoM/v8AVQJJ0FXoG+B7MqVFKQcX9tGE1o6OcBnoCS7AmCuZuSuY+KBu5zeG8iMoqkaw4Voq5cTD1wfd/hZvH1Fy1rcitcIoaBTKVN4MolTohqcZU6Z1hCHAVIYnj2DNIv6U2s41DmJH84HPtsucQ0EOCs4LN1cJBzucagnOOkvSYAkbThIBqAYCp11T0xom4daB+g12Acc9LKrImj2/qMyHk8iQXWStWFcbbc1LIbcXa3co/rjfrR8Z8y5Np9ysaDUr2mW09YrxOqbE+lWs/F4T9DMsF32A8I/+ehaTgxHw6z5UxET/5/i95fz6dW6yabSrlCIokNpzeI78GhpqTX0tPdVWbZJOJy25Q0CmRCGdvTaMryMsRSM1zDNcaY9WOZmds0GOp5U+Ysle2upcA2OPkGSw2xxfGSSazUZz7oO34spFYii2Wr+WZZhuhgGkSMUNmKKbk7cV3dJ5CBBYV/aj3Zpf47gzE+uzPQ2YaJmqfja2+gzlQtu1lv1hsO9+sNO90HBbDT/r965/32qYrB+bYQknE0w/UZY7MQo4gIsyc4yYUJ0n6szc+1+3JWHuohofGdg5bB29d1iXh99nt6250Dl2cgQQL/SN5h17Yp2etfiwLb1kGWcZSjOh1wrQO+VKetUggrtcZhrJvlpnEYrtIlwgGs6yYxPyzjKF++7zbPXsVBs7ZJU5SO7DFXZl5C1zrI8j1TM83H7S3zMHlpaxPQNdlDXbJlmAYpW8QTjlGEObRAN6HYusRYSjFDYmw5Fj7jGFrQsOH94xg/R2E8I1TUfU7qBdliKnksJA7GKtlSIXKc7KNf9qKbAI/lKlLMPCesSD2NUjdNY57Pn0QT0xmhmmrW8pcHqv1IVYmdnJ3/v5XVND/q0wuPqf8IrYetKsmmjafJboY8Hlz1Rt0Lz4ZWC+zNJKeQQx8cHMIFWmBQZOEWg48oUCwk3BAuYxSS33U1zzpQk+jeUec3uFnegYrqvutHMaFTllErC0nr+y0PRetzp7dJAaMY0FTfPWVnJ0gWGhDHuYdQJHbFs/KJjSM5qI5kGYZ1cDAl1sHGGaACLzvDZC6WTMdTREIlXFN52ONCM3OA8JJRFQYYMqWZfMx0TKclq/w7EU7aTJ2MJX+2av8whxXGgQChcN+s179tNB6+g4Blhxtd+6qlFByKobFVAtvFyPb4NkNZkWydMXMkS+4Z18tttSZIxhZQIyCwz1TWapqgy/rG7TUCyrMusi9JMU5zGGIcgeFImZNVKb45OW8XAWvNx5vYN0qCx8WSYAY05thsgqYuQzYbqab2shKVGMYCak2T4Udohjk4ocoPb5ByI7PkbrfWdAxsPWSzbbNRE+SLZDTxD3Dwb0/RQdKUvyH267JjcrFJNtsXVfst6fN+2EQ/uxjuwO3Msb+AxVLo8UNgNFwl/oZMAYHpHFUORbGfNpCm8n/1SFE51166fulMpZIm6e6jopbVcvGd5MiX368izNX4i5e73IiykLeNtBM3isMQat//dOkNzq4+eCov2zn/PJ3ESWYtkeUHFnOKwpSNKlLJ2cT5nwEPCi0EQ5MBtyLMBRHqVKjj29qRJkXTBb0irh6/QHdXArean/ZHTGowfwDzI+O3iAcjNlyJkM1alD2GW2IA34g/c2Ox+EZ8b958tMwWpSzAou1LcoOLXwYYBSlI6S1H0tC/HQ3ebkaDFBSO3useZKpMKXmG4qiQvuZqtcuwa//Q1bOGnTiN9H9bISRXbvFxCxHpy5ZXmz7f3kIvqKSxNbju+WFv758TfSwAbPCtfEjCe5KblPFu4kCjuLLGPC5ZMEzuu03Bs8SEPOkHmQ1h6QddMYgpJXSWLPju9TTFCsdHPubJq5+ybmefSwVVDbPe4wiOLuTt06cLTl4DeduA9DjcPHpXb9Qb9ebJ0fG7b92bI3eJ/DmhWHy3kZmsB6RSu1pXS6MkndAPt/Q5EEThVPmIwf2hTKLIy2PmpNlSRlR4FvaIHTWb1fFGkTtFEp2SPLwuWUxl+r5Lb2kR+M3sg84XyEQvWkDEIpdka1tX8U90XVKLe0vkPH8fh+TJ9gR2mb9bSwIN6S1EuEWi8OQOyVyaOoz4Ss0vWSIvCkMIsErrRT2fUUArebRTsnHW940Gj4OUnoPg2bOn6vK7P+srX7wACS2o3ZMH+BvU7sUDvHxZ4VG39aW5xYFZhpTZ1OJltYstrEuJ6efmXxPZx2wPTImuPhWsI7OGzeWrsg1j5Y0S895yl2ky8gdC62X/NG8mMndA44/dc2+7N26JKJliIYUbscBJ+5OcSHNQX6FlkvGnj5RqVaS3TlVZrPU5RhLvRC7b9LecSJ1jmipWtuU1WV0k0FeYc7bEbq19etHtXQ29gVtXwm0AatFra4hJ3Wrj1nMNxLgF3S9YW6dVuBvMZz7J/1lGaE/wAnndcNBolBPL7ow3UJODQUCEPsWGbKZfRRq3K3RrHLBYRrG56dvqKbccx7FQRJLulRO4aVpJSiBOLCdND04MG5hLMiU+kthBsZwzbTtqT5zAZ7vWaRebgT+nfcD8BvOTIuNJm7MFQNESa9SkIf/jj6e9z7alr1nupGHA/DthIOFmGwWS92ebQw4KloRqgKrJYs4xlU460TbEgtDgBIxZWmoSzVgZucJsmpmEaaLpF5SXqayglG3VJYgLvCpFOPN++mxbNrwvtadD4Ello8wmRGYNzp3ahX+itnYI3am+ZfPzS09zTFGxtAT1FgPFWD9FNZ5QYSs6PKbgm6e4CjV9uxnAeIKnjOOxQk1Ov/m1YnrJF+AI0wBTn2ChqJn3r+uT65BaKMZhjtPEF0EQLWYQMn9Rtw4qnwYnNc+SZnYFvMwBs0b2/D1m+rp5/Zn5mipz5m6RrsCanvOAYUGfS8gvSAMV6pXYSxIEIQY2zdIWmf+egnVQdsA+asAbeKPvV5eIL2DOwmBtPvM6ukJOr1D20KfkTNJdr4bXBitpl3RNrE9RAvDnbNdIs7MmvFdJuEqinb0U67IdHOwE3mOSrKZbRbhQ9J0StcrVLzPWK/BlC12gVklmo+yzQWZjdOez5WfPsgFTpPGoz1e6v/xfRM69O4k5ReHZUpS+ca6U8exiuM4VZAfas4vh4zpKqmJlCkqGHiGQlKLKCCRD+xE4ZRRv4Jf5r6e6r/3fkm8kcAVFpv2u66WbzTHz0xiFocIBcONrcZG+EU9wsSYyLokkM727dZSYxLPsJD+JZ6Ieopj68wgFdYqlG+tOGfdr0xXjajfpfj2JZ27z7bu3b4/f5FZ2FARNHzffOY1332LndePYdybHb44c1Pz2qInxUeMdxvAeXLES7iQW7s1S/Tfg5AZz4c5vxrEkoRvTCaHJfUnSU9s8Jp//8hk+06QLl/t10wNXWZPdDBkx3RE00qaf/JdpilUKW69V1QnnUJf8oAlLQmOJVcBOi9OUBfgVCAZyjszP/vixkGyZ/nYQTjvJtSsv/GiE6aRKauVpkfxVUjxXEVM//yI0m/W5BZD9RBE4PthiHstA9wZyaMIze2eExDTY/M2HP/eSLXuZlv8URiQAxXfT21u12DlSBulE+pYEnln/LwAA///VJYvXbkkAAA==",
        "provisionScriptParametersCommon": "[concat('TENANT_ID=',variables('tenantID'),' HYPERKUBE_URL=',variables('kubernetesHyperkubeSpec'),' APISERVER_PUBLIC_KEY=',variables('apiserverCertificate'),' SUBSCRIPTION_ID=',variables('subscriptionId'),' RESOURCE_GROUP=',variables('resourceGroup'),' LOCATION=',variables('location'),' SUBNET=',variables('subnetName'),' NETWORK_SECURITY_GROUP=',variables('nsgName'),' VIRTUAL_NETWORK=',variables('virtualNetworkName'),' VIRTUAL_NETWORK_RESOURCE_GROUP=',variables('virtualNetworkResourceGroupName'),' ROUTE_TABLE=',variables('routeTableName'),' PRIMARY_AVAILABILITY_SET=',variables('primaryAvailabilitySetName'),' SERVICE_PRINCIPAL_CLIENT_ID=',variables('servicePrincipalClientId'),' SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecret'),variables('singleQuote'),' KUBELET_PRIVATE_KEY=',variables('clientPrivateKey'),' TARGET_ENVIRONMENT=',variables('targetEnvironment'),' NETWORK_POLICY=',variables('networkPolicy'),' FQDNSuffix=',variables('fqdnEndpointSuffix'),' VNET_CNI_PLUGINS_URL=',variables('vnetCniLinuxPluginsURL'),' CNI_PLUGINS_URL=',variables('cniPluginsURL'),' CLOUDPROVIDER_BACKOFF=',variables('cloudProviderBackoff'),' CLOUDPROVIDER_BACKOFF_RETRIES=',variables('cloudProviderBackoffRetries'),' CLOUDPROVIDER_BACKOFF_EXPONENT=',variables('cloudProviderBackoffExponent'),' CLOUDPROVIDER_BACKOFF_DURATION=',variables('cloudProviderBackoffDuration'),' CLOUDPROVIDER_BACKOFF_JITTER=',variables('cloudProviderBackoffJitter'),' CLOUDPROVIDER_RATELIMIT=',variables('cloudProviderRatelimit'),' CLOUDPROVIDER_RATELIMIT_QPS=',variables('cloudProviderRatelimitQPS'),' CLOUDPROVIDER_RATELIMIT_BUCKET=',variables('cloudProviderRatelimitBucket'),' USE_MANAGED_IDENTITY_EXTENSION=',variables('useManagedIdentityExtension'),' USE_INSTANCE_METADATA=',variables('useInstanceMetadata'),' CONTAINER_RUNTIME=',variables('containerRuntime'),' KUBECONFIG_SERVER=',variables('kubeconfigServer'))]",
        "provisionScriptParametersMaster": "[concat('MASTER_NODE=true APISERVER_PRIVATE_KEY=',variables('apiServerPrivateKey'),' CA_CERTIFICATE=',variables('caCertificate'),' CA_PRIVATE_KEY=',variables('caPrivateKey'),' MASTER_FQDN=',variables('masterFqdnPrefix'),' KUBECONFIG_CERTIFICATE=',variables('kubeConfigCertificate'),' KUBECONFIG_KEY=',variables('kubeConfigPrivateKey'),' ETCD_SERVER_CERTIFICATE=',variables('etcdServerCertificate'),' ETCD_CLIENT_CERTIFICATE=',variables('etcdClientCertificate'),' ETCD_SERVER_PRIVATE_KEY=',variables('etcdServerPrivateKey'),' ETCD_CLIENT_PRIVATE_KEY=',variables('etcdClientPrivateKey'),' ETCD_PEER_CERTIFICATES=',string(variables('etcdPeerCertificates')),' ETCD_PEER_PRIVATE_KEYS=',string(variables('etcdPeerPrivateKeys')),' ADMINUSER=',variables('username'))]",
        "provisionSource": "H4sIAAAAAAAA/8xTTXPTMBC951c8gibTMmMaF05oAr30xo0DhzTjUexVrEGWXGkNLU3+O2M7yaQhuOHW29qrfR+rp7dvrpbGXcVyNArE4TGviszoTCtjm0AXl3hC+99QnIlU4pcyPBPXEmwq8g3PxAeJWBrNmEyOCgntAwyMg7iIdI8UYot1KVH4HQbEvni62UjMIb4goXtMgUWLtgykfmC9RrRENUQrogVwJEF56XH7QHnDVOBuLG7uxhCmw44Sm1OuMuezyIrj67d3oH9FnLEKS2XtgO7+QKe7CXYmPr4sUwUk/FtDbIeHJA5tc4+LFOkUeRMsEh2/fYXoSn/AcNJq+5VpHzJt7ED02m6tuOxMvmDOaMyRaIjdEBYSXJLrLbVgJ8RgM1I1dxtv6kJxL+YvqnQ67VlUzcmKGP1hXH+epFhjFahG8oDx/Pvt4tP7d+PdYh396+7T07E+wj+Md3yMTFXONgsUWQU+J9OIP3OnKjorHscp3jOiUFR5lwSyXhXdu9i3tmIgtkzPu88G//dF/AkAAP//Ky0c8bIEAAA=",
        "readerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "registerWithTaints": "node-role.kubernetes.io/master=true:NoSchedule",
        "resourceGroup": "[resourceGroup().name]",
        "routeTableID": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]",
        "routeTableName": "[concat(variables('masterVMNamePrefix'),'routetable')]",
        "scope": "[resourceGroup().id]",
        "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
        "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
        "singleQuote": "'",
        "sshKeyPath": "[concat('/home/',variables('username'),'/.ssh/authorized_keys')]",
        "sshNatPorts": [
            22,
            2201,
            2202,
            2203,
            2204
        ],
        "sshPublicKeyData": "[parameters('sshRSAPublicKey')]",
        "storageAccountBaseName": "[uniqueString(concat(variables('masterFqdnPrefix'),variables('location')))]",
        "storageAccountPrefixes": [
            "0",
            "6",
            "c",
            "i",
            "o",
            "u",
            "1",
            "7",
            "d",
            "j",
            "p",
            "v",
            "2",
            "8",
            "e",
            "k",
            "q",
            "w",
            "3",
            "9",
            "f",
            "l",
            "r",
            "x",
            "4",
            "a",
            "g",
            "m",
            "s",
            "y",
            "5",
            "b",
            "h",
            "n",
            "t",
            "z"
        ],
        "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
        "subnetName": "[split(parameters('masterVnetSubnetID'), '/')[variables('subnetNameResourceSegmentIndex')]]",
        "subnetNameResourceSegmentIndex": 10,
        "subscriptionId": "[subscription().subscriptionId]",
        "targetEnvironment": "[parameters('targetEnvironment')]",
        "tenantId": "[subscription().tenantId]",
        "truncatedResourceGroup": "[take(replace(replace(resourceGroup().name, '(', '-'), ')', '-'), 63)]",
        "useInstanceMetadata": "true",
        "useManagedIdentityExtension": "false",
        "username": "[parameters('linuxAdminUsername')]",
        "virtualNetworkName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetNameResourceSegmentIndex')]]",
        "virtualNetworkResourceGroupName": "[split(parameters('masterVnetSubnetID'), '/')[variables('vnetResourceGroupNameResourceSegmentIndex')]]",
        "vmSizesMap": {
            "Standard_A0": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A10": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A1_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A2m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A4m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A6": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A7": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A8m_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_A9": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_B1ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B1s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B2ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B2s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B4ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_B8ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D11_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D12_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D13_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D14_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D15_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D16_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D1_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D2s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D32_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D3_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D3_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D4s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D5_v2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D5_v2_Promo": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D64_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D64s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_D8_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_D8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS11_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS12_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13-2_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13-4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS13_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14-4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14-8_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS14_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS15_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS1_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS2_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS3_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS4_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS5_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_DS5_v2_Promo": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E16_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E2_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E2s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32-16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32-8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E32_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E4_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E4s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64-16s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64-32s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E64_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E64s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_E8_v3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_E8s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F16": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F16s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F16s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F1s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F2s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F2s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F32s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F4s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F4s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F64s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F72s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_F8s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_F8s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_G1": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G2": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G3": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G4": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_G5": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_GS1": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4-4": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS4-8": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5-16": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_GS5-8": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_H16": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16m": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16mr": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H16r": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H8": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_H8m": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_L16s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L32s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L4s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_L8s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128-32ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128-64ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M128s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64-16ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64-32ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64ms": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_M64s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC12s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC12s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC24r": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC24rs_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24rs_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC24s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC6": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NC6s_v2": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NC6s_v3": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND12s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND24rs": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND24s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_ND6s": {
                "storageAccountType": "Premium_LRS"
            },
            "Standard_NV12": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NV24": {
                "storageAccountType": "Standard_LRS"
            },
            "Standard_NV6": {
                "storageAccountType": "Standard_LRS"
            }
        },
        "vmsPerStorageAccount": 20,
        "vnetCidr": "[parameters('vnetCidr')]",
        "vnetCniLinuxPluginsURL": "[parameters('vnetCniLinuxPluginsURL')]",
        "vnetCniWindowsPluginsURL": "[parameters('vnetCniWindowsPluginsURL')]",
        "vnetNameResourceSegmentIndex": 8,
        "vnetResourceGroupNameResourceSegmentIndex": 4,
        "vnetSubnetID": "[parameters('masterVnetSubnetID')]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpriCount'), variables('agentpriOffset'))]",
                "name": "loop"
            },
            "dependsOn": [
                "[variables('nsgID')]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpriVMNamePrefix'), 'nic-', copyIndex(variables('agentpriOffset')))]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "primary": true,
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agentpriVnetSubnetID')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersionStorage')]",
            "copy": {
                "count": "[variables('agentpriStorageAccountsCount')]",
                "name": "loop"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('storageAccountPrefixes')[mod(add(copyIndex(),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(copyIndex(),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpriAccountName'))]",
            "properties": {
                "accountType": "[variables('vmSizesMap')[variables('agentpriVMSize')].storageAccountType]"
            },
            "type": "Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('agentpriAvailabilitySet')]",
            "properties": {},
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpriCount'), variables('agentpriOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpriAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('agentpriVMNamePrefix'), 'nic-', copyIndex(variables('agentpriOffset')))]",
                "[concat('Microsoft.Compute/availabilitySets/', variables('agentpriAvailabilitySet'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('agentpriAvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('agentpriVMSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agentpriVMNamePrefix'), 'nic-', copyIndex(variables('agentpriOffset'))))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[variables('username')]",
                    "computername": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]",
                    "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: https://',variables('kubernetesAPIServerIP'),':443\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=Accelerators=true --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=kubenet --node-status-update-frequency=10s --non-masquerade-cidr=10.244.0.0/16 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_REGISTER_SCHEDULABLE=true\n    KUBELET_NODE_LABELS=kubernetes.io/role=agent,agentpool=agentpri,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n\nruncmd:\n- echo `date`,`hostname`, startruncmd>>/opt/m\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent\n- echo `date`,`hostname`, preaptupdate>>/opt/m\n- apt_get_update\n- echo `date`,`hostname`, postaptupdate>>/opt/m\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates nfs-common iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- echo `date`,`hostname`, aptinstall>>/opt/m\n- systemctl enable rpcbind\n- systemctl enable rpc-statd\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpcbind\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart rpc-statd\n- echo `date`,`hostname`, predockerinstall>>/opt/m\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- echo `date`,`hostname`, postdockerinstall>>/opt/m\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n\n- echo `date`,`hostname`, PRE-APT-SYSTEMD-DAILY>>/opt/m\n- /usr/lib/apt/apt.systemd.daily\n- echo `date`,`hostname`, POST-APT-SYSTEMD-DAILY>>/opt/m\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- mkdir -p /opt/azure/containers && touch /opt/azure/containers/runcmd.complete\n- echo `date`,`hostname`, endruncmd>>/opt/m\n\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[parameters('sshRSAPublicKey')]",
                                    "path": "[variables('sshKeyPath')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[variables('agentpriosImageOffer')]",
                        "publisher": "[variables('agentpriosImagePublisher')]",
                        "sku": "[variables('agentpriosImageSKU')]",
                        "version": "[variables('agentpriosImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "name": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/',variables('storageAccountPrefixes')[mod(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('storageAccountPrefixes')[div(add(div(copyIndex(variables('agentpriOffset')),variables('maxVMsPerStorageAccount')),variables('agentpriStorageAccountOffset')),variables('storageAccountPrefixesCount'))],variables('agentpriAccountName')),variables('apiVersionStorage')).primaryEndpoints.blob,'osdisk/', variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')), '-osdisk.vhd')]"
                        }
                    }
                }
            },
            "tags": {
                "creationSource": "[concat(variables('generatorCode'), '-', variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]",
                "orchestrator": "[variables('orchestratorNameVersionTag')]",
                "poolName": "agentpri",
                "resourceNameSuffix": "[variables('nameSuffix')]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('agentpriCount'), variables('agentpriOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('agentpriVMNamePrefix'), copyIndex(variables('agentpriOffset')),'/cse', '-agent-', copyIndex(variables('agentpriOffset')))]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' /usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        },
        {
            "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
            "location": "[variables('location')]",
            "name": "[variables('masterAvailabilitySet')]",
            "properties": {
                "managed": true,
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 3
            },
            "type": "Microsoft.Compute/availabilitySets"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('nsgName')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow_ssh",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow SSH traffic to master",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22-22",
                            "direction": "Inbound",
                            "priority": 101,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        }
                    },
                    {
                        "name": "allow_kube_tls",
                        "properties": {
                            "access": "Allow",
                            "description": "Allow kube-apiserver (tls) traffic to master",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443-443",
                            "direction": "Inbound",
                            "priority": 100,
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/networkSecurityGroups"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('routeTableName')]",
            "type": "Microsoft.Network/routeTables"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "location": "[variables('location')]",
            "name": "[variables('masterPublicIPAddressName')]",
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[variables('masterFqdnPrefix')]"
                },
                "publicIPAllocationMethod": "Dynamic"
            },
            "type": "Microsoft.Network/publicIPAddresses"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "location": "[variables('location')]",
            "name": "[variables('masterLbName')]",
            "properties": {
                "backendAddressPools": [
                    {
                        "name": "[variables('masterLbBackendPoolName')]"
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('masterLbIPConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRuleHTTPS",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                            },
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "frontendIPConfiguration": {
                                "id": "[variables('masterLbIPConfigID')]"
                            },
                            "frontendPort": 443,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "Default",
                            "probe": {
                                "id": "[concat(variables('masterLbID'),'/probes/tcpHTTPSProbe')]"
                            },
                            "protocol": "tcp"
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpHTTPSProbe",
                        "properties": {
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2",
                            "port": 443,
                            "protocol": "tcp"
                        }
                    }
                ]
            },
            "type": "Microsoft.Network/loadBalancers"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "masterLbLoopNode"
            },
            "dependsOn": [
                "[variables('masterLbID')]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
            "properties": {
                "backendPort": 22,
                "enableFloatingIP": false,
                "frontendIPConfiguration": {
                    "id": "[variables('masterLbIPConfigID')]"
                },
                "frontendPort": "[variables('sshNatPorts')[copyIndex(variables('masterOffset'))]]",
                "protocol": "tcp"
            },
            "type": "Microsoft.Network/loadBalancers/inboundNatRules"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "nicLoopNode"
            },
            "dependsOn": [
                "[variables('nsgID')]",
                "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex(variables('masterOffset')))]"
                                }
                            ],
                            "primary": true,
                            "privateIPAddress": "[variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))]]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('vnetSubnetID')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgID')]"
                }
            },
            "type": "Microsoft.Network/networkInterfaces"
        },
        {
            "apiVersion": "[variables('apiVersionStorageManagedDisks')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex(variables('masterOffset')))]",
                "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('masterVMSize')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'),'nic-', copyIndex(variables('masterOffset'))))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[variables('username')]",
                    "computername": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                    "customData": "[base64(concat('#cloud-config\n\n\npackages:\n - jq\n - traceroute\n\n\nwrite_files:\n- path: \"/opt/azure/containers/provision_source.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionSource'),'\n\n\n- path: \"/etc/systemd/system/docker.service.d/clear_mount_propagation_flags.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    MountFlags=shared\n\n\n- path: \"/etc/systemd/system/docker.service.d/exec_start.conf\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Service]\n    ExecStart=\n\n    ExecStart=/usr/bin/docker daemon -H fd:// --storage-driver=overlay2 --bip=',variables('dockerBridgeCidr'),'\n\n- path: \"/etc/docker/daemon.json\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    {\n      \"live-restore\": true,\n      \"log-driver\": \"json-file\",\n      \"log-opts\":  {\n         \"max-size\": \"50m\",\n         \"max-file\": \"5\"\n      }\n    }\n\n- path: \"/etc/kubernetes/certs/ca.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('caCertificate'),'\n\n- path: \"/etc/kubernetes/certs/client.crt\"\n  permissions: \"0644\"\n  encoding: \"base64\"\n  owner: \"root\"\n  content: |\n    ',variables('clientCertificate'),'\n\n\n- path: \"/etc/kubernetes/generate-proxy-certs.sh\"\n  permissions: \"0744\"\n  encoding: \"gzip\"\n  owner: \"root\"\n  content: !!binary |\n    ',variables('generateProxyCertsScript'),'\n\n\n- path: \"/var/lib/kubelet/kubeconfig\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    apiVersion: v1\n    kind: Config\n    clusters:\n    - name: localcluster\n      cluster:\n        certificate-authority: /etc/kubernetes/certs/ca.crt\n        server: ',concat('https://', variables('masterPrivateIpAddrs')[copyIndex(variables('masterOffset'))], ':443'),'\n    users:\n    - name: client\n      user:\n        client-certificate: /etc/kubernetes/certs/client.crt\n        client-key: /etc/kubernetes/certs/client.key\n    contexts:\n    - context:\n        cluster: localcluster\n        user: client\n      name: localclustercontext\n    current-context: localclustercontext\n\n\n\n\n\n- path: /etc/kubernetes/manifests/kube-scheduler.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SRQW+jMBCF7/wKy+dFaK/WKpe9tIe0kSL1EvUwmClYsceWPRDx7yunQJomKdzwe+/z+A0E84YxGU9KyOGvLI6GGiXkzjeycMjQAIMqhCBwqIQ89jWWSXfY9BajnIQUQF/UMTG6LFmo0aacFoINRiW0J47elsEC4flcexc8IbES1+wiBdQ52/nEL8gnH49KcOxzLnPAEMaJXj6eL3/GQZvVf1mOhIzpaQwY8+8+oN7MRu2dg1zAQVbd7JB/hLwg3ycrxDYpcfiG3M+e/54+TLuZnYO3vcOt74mnca9GRtblBSIXgxAuR3bAnRKyQtbVPdvCGSCW1tRnlkV+CBogVtbU1Y1vJrlk1rIngBaJqy0QtNg8N0hseCz3yGyovXpFRGheyY7L8r76+Lm5+zXk5Z8vX4Dhlz7WunhMu1vKbSHrgPVmPgMAAP//6fKK/HMDAAA=\n\n- path: /etc/kubernetes/manifests/kube-controller-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySsY6jMBCGe57Ccn0IXWud0qS5K3IXKdI10RaDmSVW7LFlD0S8/coJsJsNWZYO+OYb/t9AMP8xJuNJCdn/lMXZUKOE3PtGFg4ZGmBQhRAEDpWQ567GUnvi6K3FWDogaDHKkUgB9IylITG6/MpCjTZljRBsMCoxKspggfD6XHsXPCGxEk+WFCmgzpKTT/wX+eLjWQmOXRZkHAxhHNeU3/jifBkHbcZ+ZS4SMqbfQ8CYbw8B9WYCtXcOcjdHWZ0mQv4QcsH9Ms5AbJMSxw/u7QzvbuzW06tpN9NE723ncOc74jHIXRhkXb7L5AwI4fLIHvikhKyQdbWEzZ4eYmlNfXVZ5KeiHmJlTV09cJPJJbM2ewFokbi6BW7+NEhseCgPyGyovUsREZp/ZIf5WG99fD7T5Rryb3FdPgvDF32sdfHctljKYyHrgvVm3gIAAP//7hHuXJ8DAAA=\n\n- path: /etc/kubernetes/manifests/audit-policy.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7RVwY7jNgy95ysI51Cg2HiwtyK3aQsUBabbRbrTHoo5KBJjC1FIV6ST8d8Xkhw7mWSAHqY3JabI954eSdP5PzGKZ1qD6Z3Xev+D1J4fjp+3qOYzLOFb6wW8QMR/eh/R1Yu9J7eGrxy8HRZL+JnpO4UGCaNRLGkAj0gqsOMIJoR8GUUFPMGmnDdo0R/RgahpsF7wwesf6SjrBcAKqjdx1SL2oXxcwhM30LED2xpqUMDonFY6JkEIeMSQM+XT+m3AAgAgonAfbUmbYpvIfbeGqsq/U6nNGAJVx04qcIySCB+M2nYmpgyGBpB+e84JvEsY5dOU6tR62yYtLZN4USSFk9cWtEXY/Pj4E3RZ1Hq8MaODv0v1l8VEP//xELipPo1nUaO9VEmM31CNM2puVTh/+W/0bxDcKziCKj4I3MDpWprtkAlWMojiYb3vt7jqIr8OFTABkuvYJ7NwBMF49BblEvEXpvJYvWDMQG4TveSAI8ZtDsgAxj/f5whLsBwRHr/+Wv68R3qCl1if4d1SNr22SOqtUXRXrrAY1XgCYlpN1njePEFntJX6Xaa/JESXdK9KjOSI6ezP583TRLF6MJ3/PhH8ywdnTXTFrp6aego5lsavZkulVxqhw5bdkBxsmXa+OZhu6jVPkJUvsOo7LfYRuk91ZaQ6TqI0BIApDGC6LnjMGk83E7jstQuEFZA5oHTGYj1lQsBDpwOIRk9NAmUNwRaT9C6lFAxoNb/adN3NhUqm6UuGfFnzolHvyipoI+pZ0/9LxFLlamykaczaYrwWLecy5ABfFSn5Ig/VPJhG6BnehyGdA+aKKXRcR0mjHADSch8cfPn9W3oeTzb0Lm2hzOgRbPL1Ku+Y5Azl0o4XLMdWHNlcT8b63dGY1KJmFXuiZJApTfB7LAMuWa81CrtUrCeHEXRy6MmHAMQ65pq3I10uyDvrsBjrehmOHXuzEP8NAAD//+gVlJa+BwAA\n\n- path: /etc/kubernetes/manifests/kube-apiserver.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4ySwc6bMBCE7zyF5XMR6tWqfqnqpf8hbaRIvUQ9LGZLLOy1ZS9EvH1lCqRJoQk3mJnPy6whmB8Yk/GkhBw+yqIz1Cghj76RhUOGBhhUIQSBQyVk19dYQjAJ44BRzkIKoFc1jYnRZclCjTbltBBsMCqhPXH0tgwWCKfv2rvgCYmVuGcXKaDO2YtP/A356mOnBMc+5zIHDGGc6eX+fPkxDtqsfspyJGRMX8eAMb+eAuq3xai9c5ALOMvqsjjkByFvyJ+zFWKblDj/hfx8fD9Nni+efpn2bXEO3vYOD74nnse9GxlZlzeIXA1CuBw5Al+UkBWyrrZsK2eAWFpTTyyLvAsaIFbW1NU/vpXkknmavgK0SFwdgKDF5r1BYsNjeUJmQ+3df0SE5jvZcV3fw3nJ6273QB+mEf+U+Lju7e7yjZniKzP8p8RnBe7TNptccC6ZlwGvlbnZ1z58Ku53AAAA//+XfMNr4AMAAA==\n\n- path: /etc/kubernetes/manifests/kube-addon-manager.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4yRsW7zMAyEdz8Fkd3w/w9ZhKJAxw5pAwTozkiEIySiXJFy4LcvZMdOWjRtR5LH43cSdv6NkvjIBvr/1dGzM7CNrgqk6FDRVACMgQwc855qdC5yHZCxpXQZSYd2nssgSqEC6G9cpSNbfA5R9IX0HNPRgKZMFYCNrOiZkhRF/dMtAB+wJQMPZZyYlOSpaDaTZNeRfRx1iSTmZGn0nBrvmUSXGsB22cA6LHWgENNgYP1v48dmH0850CZmntdmuJFLLpuhCLaoBwOrhtQ2V7ZmEq4WBnSvfBqW6FfHIP47ux5Tc/L75ozYEmsz5XTPjli9DvWOVD239y9MGT697A18+Y7x1GW9+y3FV9x7Bn/n/ggAAP//ovMbJ38CAAA=\n\n\n\n- path: /etc/kubernetes/addons/kube-heapster-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xWW2tjNxB+P79C+F1ep92AK+pCmk3bh2Y3JFAoLISxNOujWrfq4rX31xfpHNvnYgcTNlC9WGdGo2/mm4sMTv6FPkhrGNlcVWtpBCNP6DeS4w3nNplYaYwgIAKrCDGgkZEawYWIvhUEBxwZWacl0rALEXVFiIIlqpBtSNF4gxHDVNp3XKVsTEMDw8gk+oSTchKEsEaDgRX6ad9MW4GMPCK3hkuFFaW06rrvl8CnkGJtvfwGUVozXc+L5eZqiRH20d028I9W4YnQGv/ZPkL6VcaaGjBm93Yx3ZmQPN5tZYih8klhYBUl4OTv3iZX8CjBbUSTIw3lE5zLG4/BJs+xPSTQKbvTaGJWbtAvW8UKY/lVMjSbrxB5XXbJCYhYtq4IR9CTyRgJNy0IPZZA+2lFu3NWXObGd0jlr9IIaVb/y4xahY/4JYPsiX0hxIqQcZ1eEEtIy3+Qx1I6J9v48uYdpmM4GHokv47B/snGsT/6jl3iaXDIM7SzPrYllreMzGcFJoJfYXxoRfMfKkICKuTR+tbjeaDgXAcrB99E++HQTD02jo14qMazfIxuf8s6e2EYD/jc0+bRKckhMHI1YkbnzvyzE8zpcCJqpyBia9QhIi/Vsz9HCCFgjI2lCzqHA69RJIV+CsrVMCCAexklB0WdFawZUYTsAyu5twp9/05K1rhj5LY1vcn0hk9G7Q6Y1mUb6xk5kFru7bXSx2F15sWtiSAN+g6a1LBCRn4+er6v8SeH/JcDKrdagxHH0CmZvNvfP+lKKW2m8KJDRkhag989g5Ps8+Tz5GgwaqNm9Ub5UfhvwhB7MkK4S7lzdE+oUVu/Y+Tq/exedjRKavnqC06xVRL0iEF+u4gxZ8VzGYYDyrhLi/lMD6S4jR6Kbja9HiobDxfFwZN27YH3I3WsPYbaKrG4HmiOj/PiTG4PNXTugLNKUYdeWrH4cZbX0LkQpc4FvMCtswZNlKDOFcThFXxdWVyfyepPF1bFRfZoNt0kb0Al/M1b3b/vi0Ql2jd2JH+AWLPDaJpmDjrHGkru/35++PTh+ePN/d33Rysj+SXIp4eb2z1u/vv01JvEeeV3ZjAAbWBESZO21X8BAAD//0SxZ2rFCwAA\n\n- path: /etc/kubernetes/addons/kube-dns-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xYS2/jNhC++1cQ7ll+ZJHdQFgHCOKgG2yTGnXa+4QcS4QpkuHDjffXF5RkWZRsx14URX0T5/VxHt9IBs3/QmO5kinZTAdrLllKlmg2nOIdpcpLNyjQAQMH6YAQCQWmZO1fMWHS1gdWA92d2q11WAwIEfCKwgYbUkqMRId2xNWYCm8dmsRWYVIydMbjsNQExpQsQEKGZhSbFYphSv5AqiTlAgdJkgxOwY9wR2hubAJaR9e4BGOsWWXku3/F+fPyggxZjTTgqSM9LlLydV15qS/wuLgdEKKVcSXwpHa9AxwEKbn+VD0Y5RRVIiV/zhexcuKoPmXwch8MLAqkTpljKepmG7S24830FR3s8j5HLdS2wE7L/FwjHC7Spin21aSX62R/eCLfBrXgFGxKrnrXLsDR/LcW3mM4ekgcFlqAw9pP6/plV0upHDiuZOOXEEtzZF6gGYHQOXS6nRruOAWRaMVSMhzWZiICdxzeJak+cB1Cdukq4a9WXHK33YfVit1Jx+96gtBYuEJjkM294TJbVrfkMnvMpGqOH96R+pCQtmlC/kae5S4l08mkdV7Fq2O9oCnSSFhnZRmVsv0ry/rwrg1aG9dgH3mN23SXzZ6YEKXRQHBOHuUB8QaExwN+S8/dylQ/p7QSKtt+LwNHxcqVdaGLBztNEYK3kdd47+smuQusaX+XYjvoA35459Y1bauEL7DlpzNCVMkVzxov1eMT6PbVegy3jxlAgkhJaK5B48IBl2haQcFkrWQlZJgkTBXA5ezrPhOBUgW6+6pz56X8djTsmEmbBF6bTSeT608d4WZ21Tmp7pMwbmbjzp33mryADGs23kMJvKyR3jZqgm9QorULo16xnZ8VcOENvuQGba4ES8l1S5o7p39FF/eKBpenZDjOEYTLfyQhNJN22BmCwN83k5t4NgKPhIJ8e3lZtARhWDiIOQrYLsPSZDYln9um1lOK1rZwTltSxwtU3jWm+zvs698uf7OnduluCr8ocZcF6nVRyL9QFETEIPEuu9iho/qE02rfVT+DwPjBIp4sU2N2pEDTny7Qp8lZJTBolTc0phzBC+46JFRgocw2JdMvkyfekhh882i72lT7Mq/FQR+Ri4pInsILYlT103xCSBEsFmUeuxN4gh56kyxU5pR1DI2JBZWr+ckBD3oGrQPj5tIWYN9m8TYsuSJ+XHeZBGiOieU/MFDPpCOVKgRQYtM5D+sXzWx69WU0GU1G018O0VatNOYyAcbMCIyG8Zkm+vM56kJlyQooF9xtZ8kp5ps/L5/AvsXM10xaSN3ZBHB4WC+f++ND/+G4H2vaj5uS9Pbex02b0ILNpBVKrb1ur3iGK/DCjeyGjj5aeKSpJLkdM9yMpReiU05vxKxZHXVZuu36r0JJy6Y6E1Bvl5Uq5dIOu6xz/uY5ulMdGd4cv1Wu/7t93Esq+d/t4xrq2ePYwX1sP164Z64vWDOHt0zLA5N2oQSn2/BtWfZpLbDRHxTPh95HpWLY/yIIn6udDy1lUyK49O+DfwIAAP//KA420AwRAAA=\n\n- path: /etc/kubernetes/addons/kube-proxy-daemonset.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/5RUy27bMBC8+ysI3RklVyEuULgBemkawEDva2psE+ZDWS5d++8LSrUtOYmb8kTMLoczswSps7/AycbQKBwEoWxTvX9YQehhtrOhbdQ3go9hCZl5CLUk1MyUcrSCS2Wn1C6vwAGCdGdjbVxOAtYJvLcGjaqEM6q+00TfxYAgTX9IdxwPx74iFtyoEFvMlArkcdVRoNSROeHpmAR+ljqYIkLgO0eCQdBYaFljsbdlvJGi1OmKvhQdmKSkdIK02uE4tGuODnfTNDyVMM7csSvnIzfq6TWTO+N7cnkaVVlYr2GkUc9xabZos8PsZCAI2QAeyTDRewrtxaVWVb09duCiqBrBU7taVVqXFhPD2m7m9Z64dnZVF8xB6kutmh46TdrYluePpW0xIAvb8per5jVIMkNvSJDmT4cObD2CkFuwFWvIvcT2awhR+nzn0ySsp03J5/GS7veTtWUHM7rtncczLEaKmQ1GD6GArxlJJphSpsuNeri/92c0wWS2clzEIDjIuL1ju7cOG7SNKqovQ40ue/yIOYz5tfIFeSHZNqqqIaZOydUGLKka0Q4+UnK6L+ltTDIRTu3P4I5Xd77DfonsLT3E6Ev9v+k/81TGExlq/7qmOH2G/I68m+BDnqMnXxp7KeNp/JWWE9dpS4zaUJ+gXVtDkxBuJHyb+zO2PzB9m/ijcd0YVvl4lnAw5Vc5Hygf+NVPFFOjnA35MPsTAAD//zcsf+33BQAA\n\n- path: /etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8xUT08bPxC976cY5b4J6HcB61ckChIXiqKk7X3inSZubI9rz6ZsP33lJVl2IYRQFak+WfP3zfMbYzBfKSbDXsHmtFgbXymYU9wYTZdac+2lcCRYoaAqACwuyKZ8A1ifpRJDULCuFxQ9CaWywrRaMMbqIaJzjA1PtK2TUCzTQ3kFI4k1jdpIrCr2Dj0uKY6HaY4rUjAjzV4bSwWAR0cvds3OFFBvI8rUJCFXlGVZ9IeNC9RjrGXF0fxCMezH67O23+Z0QYI7Lq4eQM/Y0kfjK+OXAz4OQvkHyIpsaUbfMgYM5iZyHQ7MXgA8m7obcocIK2d8kerFd9KSVFHCXtX8nWd6qsmXxXg0e6+9xJ/AToF0xhE4SguobK8Kzk7anoJxSTJtTecn59mYyJIWjsfJQ5pACu64olzkGU10L+TzNT2R7zUFy42jQ2v8Pkv6vkRHCtZoTApOn3HpUPTqtjfhEfSSCxaFtgV6TOVjB7WO2eUdzHw0e0HjKXYVSsC47NUroSxXhKElfsVJPqxEgppMdsZxjwK1lVQ+xuGSFPz/iON6B2MeSF8MA6e1tVO2RjcKLu1PbFLnt2ZDnlKaRl7QIzCADOSGpG8CCCgrBaPJaGjtq7tr7I0YtNdksZlndVRJwX/9CDGOuJZ9zoMCeWw6YLJje7oPTogsrNkq+Hw17eyREtdRU+qPGelHTUnScHQd6v18X02/zLYZF4MMR45jsz/pU+vbl2eNM2/pfZvj39p4kJQG3/fda9R7rmg+WLt88tfz5GfgpMAaX98XvwMAAP//QbpZm2wIAAA=\n\n- path: /etc/kubernetes/addons/azure-storage-classes.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8yQsWorMRBFe33F4F77cPdQmzaYEEPaMJbGzrCr0TIaGZKvD7veBOwYV8Gklu6dew6O/EJauUiAakXxQF3/v3Zc/h3XOzJcu54lBdieHh8GrNVlMkxoGByAYKYAifbYBnMAKFIMjYvU6Rm+auOU7KbKrm87UiGj+Q5Xv6T9/CfAyrTRygEMuKNhqTkPxaFVI/WV9MiRvjOjliNPOKThIoIfTcknrr0bUTGTkc7dEeMbyyGXRAE2Rch5791vmWmSUfBAyY9KmVv+6eg+mAsExliamL2PFODpNOn18Xl7RxHVUBJq+ksmtsummyqucN60c8XCPGrPA90Ffj50Ad+3zbzkjPgzAAD//wD1SX0IBAAA\n\n- path: /etc/kubernetes/addons/kube-tiller-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RUXWvbShB9169Y/C4Hc3PhslwCbmKSQJwaOy3tUxivpvY2+9WdWWP31xcpsaKvhuQhhepJu3uOzjkzo4WgP2Mk7Z0Uu0n2oF0hxQrjTiucKuWT48wiQwEMMhPCgUUpWBuD8WlJARRK8ZDWmNOBGG0mhIE1GioZojqJDhlprP2JMokYY06PIlKMOCYcVUgoCu8sONhgHLdp1hclduYoRZztNTGNsjzPs2aCuAY1hsRbH/VPYO3d+OG/ir6brJHhGPD80cPSG/ygXaHd5qWQfyZL9AaX+K2UgaAvo0/hhUCZEL0otfOjLSisdhml9XdUTDLLxWB/X9vVbrW789KqYbNoEIIUWzS2WnXE3rOmbbG8wGD84fcBKaAqHQcfubKe982WZ1Kcnk7+Oa3WDHGDvKh2axihQcU+viI+HwLWXbxe9IqMe0ZXvlJnhi+qMBY7P+jfXHdGGwwwPrpvpiqfZrJ+usGExw9X762hv+1ChVDeMWiHsdbIBbrds+BxGu6ub25my/vb6Xy2WkzPZzVAiB2Y1LsLB9lX16u7j8uv9/Pplz5/9P9zke8qj3PYX2liHw9noxqvLWxQih54FVCd1Sijd+iQaBH9GmVDbMscLpGbW0IE4K0UJ0dS+6ye/X8b+9pp1mAu0MBhhcq7gqSYNACsLfrEA2e9hh1VqFn1ujGLzr/3wkciQqHfnLpmvW/siORTVEhNExF/JCSmtjEV0kCDzxeflk/wsxbcovXxMMCYVwdDJKOtfrXqTQl+k2SL4XyBq9bdWD7lrda5VTxJYbRL++xXAAAA//9fQ5xvoQgAAA==\n\n- path: /etc/kubernetes/addons/azure-cloud-provider-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/7yQMW/jMAyFd/0KIouXUw7ZDtrubuieAl2CDLT8mqqRJYOkDDS/vrANZClQdCi6SiTf+z7vveMpPUE01RJIeo57bvZSJd3YUi376x/dp/p7PvQwPrhrKkOg/7mpQY41w40wHtg4OKLCIwLpmxrGwLcm8DHXNvhJ6pwGiCPK3CPrMk10bT2kwLBmxO2qV8icIgLtTBp2TlqGBueJp/QgtU0a6NR1Z0ck0NokYn1RRIHp+jFDeg1LBp26C6z71UUBG7qz+wbqf6kMqVx+Ar5mHPG8rHx0T3cln1B8qZq2/hXRVs1bzuNW5G+MtRW7H5kWa2oo5uea2wjfp7LBLQM68VJ+YfNbnnsPAAD//990ZYZlAgAA\n\n- path: /etc/kubernetes/addons/kube-metrics-server-deployment.yaml\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9RWS08bSRC+z69o+cKpDWg5oNbuSiyLokgQWRhxjdo9xVBxv1RdY3B+fTQPP8aPEU6AkLm43dNVX331VVWPjngPlDB4JWan2RR9rsQYaIYGLowJpefMAetcs1aZEF47UMIBE5okE9AMqN1OURtQYlpOQKZ5YnCZEFZPwKbKUtRvyANDGmI4NrZMDFT7wMpwwFTCoD6p8zx4p70ugIZdMxdyUOLKp5Lg6hkTp0xKma3zoIk2Q13yYyD8rhmDH07Pa+Mlw8sG/DZY2EGviV5tsXwPMlRaSCqTQkf8RKGMNZ4Ug8oZQQolGWj3YshTvfAhh3a1EKL6OwOatEcL4PrXYmoWT5rN4w4YeGbwVR7TDsAcog1zB55f6P6XlPkPfY6++GgCBQu38FCBLHLXQywTYrvi+mmkcvINDNdFsLMfD+3CQ1SYAOuFFP0adNFl5U8S6Pz3z4OfVKgjzbINpI64RhE8o6nNF2Q/jFwv6pxuEKqtwFq8HCwUmsOf20gbNN5cmc0L89VuysMSuS1Sgz246YAPDlAzRTBVKAksGA7UVsJ5kjrGHaxiIF5eSsRKnJ39VZtEChxMsErcXY7qHdZUAI+WpzaTurqANur7/+Xl83pfJHsJvV3Z706tq+7L67XQ+oJjcNFqhtZ0LRnVsych1WM7AP38F3HW607ffNkPYIJnjR5oCSL74hECnS5Aib9XaWuLdlyfG0cw/3YPj0prR8GimStxYZ/0PC3fm+Cc9vmKnxTHe3ClkLL5tPlnTbFUOqdp/lVHVEdHW6WpIxIUmJh6xvDF6PP+cdAeHbZRrWbbewzcVeU1nrLeatnbQEUzqbcozFZjscmHEOgTmJJgPMV4dz2+B8KHuRIVgYWjEWEg5PkNenSlU+L05GTlbPG22f4RAAD//789LNetDAAA\n\n\n\n- path: \"/etc/systemd/system/hyperkube-extract.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=kubectl and kubelet extraction\n    Requires=docker.service\n    After=docker.service\n\n    ConditionPathExists=!/usr/local/bin/kubectl\n\n\n    [Service]\n    TimeoutStartSec=0\n    Restart=on-failure\n    RestartSec=5s\n    ExecStartPre=/bin/mkdir -p /tmp/hyperkubedir\n    ExecStartPre=/usr/bin/docker pull ',variables('kubernetesHyperkubeSpec'),'\n    ExecStartPre=/usr/bin/docker run --rm -v /tmp/hyperkubedir:/opt/hyperkubedir ',variables('kubernetesHyperkubeSpec'),' /bin/bash -c \"cp /hyperkube /opt/hyperkubedir/\"\n\n    ExecStartPre=/bin/cp /tmp/hyperkubedir/hyperkube /usr/local/bin/kubelet\n    ExecStartPre=/bin/mv /tmp/hyperkubedir/hyperkube /usr/local/bin/kubectl\n    ExecStart=/bin/chmod a+x /usr/local/bin/kubelet /usr/local/bin/kubectl\n\n\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/etc/default/kubelet\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n\n    KUBELET_OPTS=\n\n    KUBELET_CONFIG=--address=0.0.0.0 --allow-privileged=true --anonymous-auth=false --authorization-mode=Webhook --azure-container-registry-config=/etc/kubernetes/azure.json --cadvisor-port=0 --cgroups-per-qos=true --client-ca-file=/etc/kubernetes/certs/ca.crt --cloud-config=/etc/kubernetes/azure.json --cloud-provider=azure --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --enforce-node-allocatable=pods --event-qps=0 --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates= --image-gc-high-threshold=85 --image-gc-low-threshold=80 --keep-terminated-pod-volumes=false --kubeconfig=/var/lib/kubelet/kubeconfig --max-pods=110 --network-plugin=kubenet --node-status-update-frequency=10s --non-masquerade-cidr=10.244.0.0/16 --pod-infra-container-image=k8s-gcrio.azureedge.net/pause-amd64:3.1 --pod-manifest-path=/etc/kubernetes/manifests \n    KUBELET_IMAGE=',variables('kubernetesHyperkubeSpec'),'\n    KUBELET_NODE_LABELS=kubernetes.io/role=master,kubernetes.azure.com/cluster=',variables('labelResourceGroup'),'\n\n  \n    KUBELET_REGISTER_NODE=--register-node=true\n    KUBELET_REGISTER_WITH_TAINTS=--register-with-taints=',variables('registerWithTaints'),'\n  \n\n\n- path: /etc/systemd/system/kubelet.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4xTT0/jOhC/51OMWg7vHdy8luotC8qBP4GtQICaIA6lqhxnaKw6TtYzbmEXvvsqLbAtlNXmlPH8/nk0Ht1YzePgBEk5XbOubHTuMzTIwXFlc92cXEsu4gdNTFHoyYWmUtKEmbbh7AXahiF+99phHgSjBN1cKxwHQySWjiNpFvKRgtjOtatsiZZPtcEoRFZhjvfSG35TSrxSSBQ/aE5Ysqeo298N4gdUSaN17TBaOmeSCgirmkP5wzsMVWVZaouOXqU6VGzhlbNcOxA1hHPpQqOzN+e/wSqrP8siFLT0PYxg55+y8pbhCaYOa7hrvXe6a8ETLBQI8y8Ig/AfjOEAuEALK9slXYhM2/xDzI8HB3CvW9vSv8iUcoaCCunwo1rQhrTQBJpAQi0da2lgUbmZdJW3OXAF3PR9TexQltDshrPI2HDI437QBiiYa9oPw6nmwmcdVZVL/RVu/XdJobDf/dr9v70sVFU2+yB2u71+b+/LbvfdRai5CT2SYgNiARa5o+t5v8Oqnjhkp5F60d4mSaxYmLHMDBIIBiubSRhNvBWq6z9DP1l7uAvg5RMCbSMhCN0c3UbHVjkKIzM0FLV2fp7fHMUXcTq5vDqJJxeHR/FF8tzaIMyj3mZdGV+iqI2faity7VZPZ22wK8QKQGvcnVez46vL08HZ7/rqOk3WcW+phvHZIEnj4TLe87bG7SD9NkkPB5dp8hwEo4EllsaMg1tpGfOjx6j0hrXwhK7D0k2RfwUAAP//r6JgkWQEAAA=\n\n- path: /etc/systemd/system/kms.service\n  permissions: \"0644\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/4SQsW4yMRCEez/FvYDxX/46yUWipEgLRCkIhTEDrM5nX3bXEHj66I6kOUVKY3lGn2alb/OaSbfmCRKZBqWSfbhVRteLWeKjEkP8vsQOvBDwmSLMw0HBPkMvhTtbcqKMhQY+Qo3ZrO7U1qyvA7xQPySYJUQDqw/pEq5i1tSjVF2N3QrR/zPPn4hT9K4Kux1ld7/acM3Nu2kaazPUn4rodzyXVHt4VwZtx2dWQ6Pr6g6coZB2ln+BRZKLYBUXgx0/dKAYFLKIrO3fyGzyHNgl2rlLCEdkbefFhDNpuJ1c91/spN12vbRpXBxVvmTRkNLWvIWs2D9efV+Tkq0C/hH+FQAA//884M3mwQEAAA==\n\n\n\n- path: \"/opt/azure/containers/kubelet.sh\"\n  permissions: \"0755\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -e\n\n\n\n    sed -i \"s|<kubernetesAddonManagerSpec>|',variables('kubernetesAddonManagerSpec'),'|g\" \"/etc/kubernetes/manifests/kube-addon-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesHyperkubeSpec>|',variables('kubernetesHyperkubeSpec'),'|g; s|<kubeClusterCidr>|',variables('kubeClusterCidr'),'|g\" \"/etc/kubernetes/addons/kube-proxy-daemonset.yaml\"\n    sed -i \"s|<kubernetesKubeDNSSpec>|',variables('kubernetesKubeDNSSpec'),'|g; s|<kubernetesDNSMasqSpec>|',variables('kubernetesDNSMasqSpec'),'|g; s|<kubernetesExecHealthzSpec>|',variables('kubernetesExecHealthzSpec'),'|g; s|<kubernetesKubeletClusterDomain>|',variables('kubernetesKubeletClusterDomain'),'|g; s|<kubeDNSServiceIP>|',variables('kubeDNSServiceIP'),'|g\" \"/etc/kubernetes/addons/kube-dns-deployment.yaml\"\n    sed -i \"s|<kubernetesHeapsterSpec>|',variables('kubernetesHeapsterSpec'),'|g; s|<kubernetesAddonResizerSpec>|',variables('kubernetesAddonResizerSpec'),'|g\" \"/etc/kubernetes/addons/kube-heapster-deployment.yaml\"\n\n\n    sed -i \"s|<kubernetesDashboardSpec>|',variables('kubernetesDashboardSpec'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPURequests>|',variables('kubernetesDashboardCPURequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryRequests>|',variables('kubernetesDashboardMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardCPULimit>|',variables('kubernetesDashboardCPULimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n    sed -i \"s|<kubernetesDashboardMemoryLimit>|',variables('kubernetesDashboardMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kubernetes-dashboard-deployment.yaml\"\n\n\n\n    sed -i \"s|<kubernetesTillerSpec>|',variables('kubernetesTillerSpec'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPURequests>|',variables('kubernetesTillerCPURequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryRequests>|',variables('kubernetesTillerMemoryRequests'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerCPULimit>|',variables('kubernetesTillerCPULimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMemoryLimit>|',variables('kubernetesTillerMemoryLimit'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n    sed -i \"s|<kubernetesTillerMaxHistory>|',variables('kubernetesTillerMaxHistory'),'|g\" \"/etc/kubernetes/addons/kube-tiller-deployment.yaml\"\n\n\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesMetricsServerSpec>|',variables('kubernetesMetricsServerSpec'),'|g\" \"/etc/kubernetes/addons/kube-metrics-server-deployment.yaml\"\n\n\n\n\n\n\n\n    sed -i \"s|<kubernetesControllerManagerConfig>|\\\"--allocate-node-cidrs=true\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--cluster-cidr=10.244.0.0/16\\\", \\\"--cluster-name=tddevelopment\\\", \\\"--cluster-signing-cert-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cluster-signing-key-file=/etc/kubernetes/certs/ca.key\\\", \\\"--feature-gates=ServiceNodeExclusion=true\\\", \\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--node-monitor-grace-period=40s\\\", \\\"--pod-eviction-timeout=5m0s\\\", \\\"--profiling=false\\\", \\\"--root-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--route-reconciliation-period=10s\\\", \\\"--service-account-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--terminated-pod-gc-threshold=5000\\\", \\\"--use-service-account-credentials=true\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-controller-manager.yaml\"\n    sed -i \"s|<kubernetesAPIServerConfig>|\\\"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DenyEscalatingExec,AlwaysPullImages\\\", \\\"--advertise-address=<kubernetesAPIServerIP>\\\", \\\"--allow-privileged=true\\\", \\\"--anonymous-auth=false\\\", \\\"--audit-log-maxage=30\\\", \\\"--audit-log-maxbackup=10\\\", \\\"--audit-log-maxsize=100\\\", \\\"--audit-log-path=/var/log/audit.log\\\", \\\"--audit-policy-file=/etc/kubernetes/manifests/audit-policy.yaml\\\", \\\"--authorization-mode=Node,RBAC\\\", \\\"--bind-address=0.0.0.0\\\", \\\"--client-ca-file=/etc/kubernetes/certs/ca.crt\\\", \\\"--cloud-config=/etc/kubernetes/azure.json\\\", \\\"--cloud-provider=azure\\\", \\\"--etcd-cafile=/etc/kubernetes/certs/ca.crt\\\", \\\"--etcd-certfile=/etc/kubernetes/certs/etcdclient.crt\\\", \\\"--etcd-keyfile=/etc/kubernetes/certs/etcdclient.key\\\", \\\"--etcd-servers=https://127.0.0.1:2379\\\", \\\"--insecure-port=8080\\\", \\\"--kubelet-client-certificate=/etc/kubernetes/certs/client.crt\\\", \\\"--kubelet-client-key=/etc/kubernetes/certs/client.key\\\", \\\"--profiling=false\\\", \\\"--proxy-client-cert-file=/etc/kubernetes/certs/proxy.crt\\\", \\\"--proxy-client-key-file=/etc/kubernetes/certs/proxy.key\\\", \\\"--repair-malformed-updates=false\\\", \\\"--requestheader-allowed-names=\\\", \\\"--requestheader-client-ca-file=/etc/kubernetes/certs/proxy-ca.crt\\\", \\\"--requestheader-extra-headers-prefix=X-Remote-Extra-\\\", \\\"--requestheader-group-headers=X-Remote-Group\\\", \\\"--requestheader-username-headers=X-Remote-User\\\", \\\"--secure-port=443\\\", \\\"--service-account-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--service-account-lookup=true\\\", \\\"--service-cluster-ip-range=10.0.0.0/16\\\", \\\"--storage-backend=etcd3\\\", \\\"--tls-cert-file=/etc/kubernetes/certs/apiserver.crt\\\", \\\"--tls-private-key-file=/etc/kubernetes/certs/apiserver.key\\\", \\\"--v=4\\\"|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n    sed -i \"s|<kubernetesSchedulerConfig>|\\\"--kubeconfig=/var/lib/kubelet/kubeconfig\\\", \\\"--leader-elect=true\\\", \\\"--profiling=false\\\", \\\"--v=2\\\"|g\" \"/etc/kubernetes/manifests/kube-scheduler.yaml\"\n    sed -i \"s|<kubernetesAPIServerIP>|',variables('kubernetesAPIServerIP'),'|g\" \"/etc/kubernetes/manifests/kube-apiserver.yaml\"\n\n    sed -i \"s|apparmor_parser|d|g\" \"/etc/systemd/system/kubelet.service\"\n\n\n\n- path: \"/opt/azure/containers/provision.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('provisionScript'),'\n\n- path: \"/opt/azure/containers/mountetcd.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    ',variables('mountetcdScript'),'\n\n- path: \"/etc/systemd/system/etcd.service\"\n  permissions: \"0644\"\n  owner: \"root\"\n  content: |\n    [Unit]\n    Description=etcd - highly-available key value store\n    Documentation=https://github.com/coreos/etcd\n    Documentation=man:etcd\n    After=network.target\n    Wants=network-online.target\n    [Service]\n    Environment=DAEMON_ARGS=\n    Environment=ETCD_NAME=%H\n    Environment=ETCD_DATA_DIR=\n    EnvironmentFile=-/etc/default/%p\n    Type=notify\n    User=etcd\n    PermissionsStartOnly=true\n    ExecStart=/usr/bin/etcd $DAEMON_ARGS\n    Restart=always\n    [Install]\n    WantedBy=multi-user.target\n\n- path: \"/opt/azure/containers/setup-etcd.sh\"\n  permissions: \"0744\"\n  owner: \"root\"\n  content: |\n    #!/bin/bash\n    set -x\n    source /opt/azure/containers/provision_source.sh\n    ETCD_VER=v',variables('etcdVersion'),'\n    DOWNLOAD_URL=',variables('etcdDownloadURLBase'),'\n    retrycmd_get_tarball 60 1 /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz ${DOWNLOAD_URL}/etcd-${ETCD_VER}-linux-amd64.tar.gz\n    tar xzvf /tmp/etcd-${ETCD_VER}-linux-amd64.tar.gz -C /usr/bin/ --strip-components=1\n    systemctl daemon-reload\n    systemctl enable etcd.service\n    sudo sed -i \"1iETCDCTL_ENDPOINTS=https://127.0.0.1:2379\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CA_FILE=',variables('etcdCaFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_KEY_FILE=',variables('etcdClientKeyFilepath'),'\" /etc/environment\n    sudo sed -i \"1iETCDCTL_CERT_FILE=',variables('etcdClientCertFilepath'),'\" /etc/environment\n\n\nruncmd:\n# the first arg is the number of retries, the second arg is the wait duration between two retries and the rest of the args are the cmd to run\n- set -x\n- . /opt/azure/containers/provision_source.sh\n- wait_for_file 1800 1 /opt/azure/containers/certs.ready\n- /opt/azure/containers/setup-etcd.sh > /opt/azure/containers/setup-etcd.log 2>&1\n- retrycmd_if_failure 20 5 5 apt-mark hold walinuxagent \n- /bin/echo DAEMON_ARGS=--name \"',variables('masterVMNames')[copyIndex(variables('masterOffset'))],'\" --peer-client-cert-auth --peer-trusted-ca-file=',variables('etcdCaFilepath'),' --peer-cert-file=',variables('etcdPeerCertFilepath')[copyIndex(variables('masterOffset'))],' --peer-key-file=',variables('etcdPeerKeyFilepath')[copyIndex(variables('masterOffset'))],' --initial-advertise-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --listen-peer-urls \"',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\" --client-cert-auth --trusted-ca-file=',variables('etcdCaFilepath'),' --cert-file=',variables('etcdServerCertFilepath'),' --key-file=',variables('etcdServerKeyFilepath'),' --advertise-client-urls \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\" --listen-client-urls \"',concat(variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))], ',https://127.0.0.1:', variables('masterEtcdClientPort')),'\" --initial-cluster-token \"k8s-etcd-cluster\" --initial-cluster ',variables('masterEtcdClusterStates')[div(variables('masterCount'), 2)],' --data-dir \"/var/lib/etcddisk\" --initial-cluster-state \"new\" | tee -a /etc/default/etcd\n- /opt/azure/containers/mountetcd.sh\n- /bin/chown -R etcd:etcd /var/lib/etcddisk\n- systemctl stop etcd\n- systemctl daemon-reload\n- retrycmd_if_failure 100 1 10 systemctl daemon-reload && systemctl restart etcd\n- MEMBER=\"$(sudo etcdctl member list | grep -E ',variables('masterVMNames')[copyIndex(variables('masterOffset'))],' | cut -d',variables('singleQuote'),':',variables('singleQuote'),' -f 1)\"\n- sudo etcdctl member update ${MEMBER} ',variables('masterEtcdPeerURLs')[copyIndex(variables('masterOffset'))],'\n- retrycmd_if_failure 5 5 10 curl --cacert /etc/kubernetes/certs/ca.crt --cert /etc/kubernetes/certs/etcdclient.crt --key /etc/kubernetes/certs/etcdclient.key --retry 5 --retry-delay 10 --retry-max-time 10 --max-time 60 \"',variables('masterEtcdClientURLs')[copyIndex(variables('masterOffset'))],'\"/v2/machines\n- apt_get_update\n- retrycmd_if_failure 5 10 120 apt-get install -y apt-transport-https ca-certificates iptables iproute2 socat util-linux mount ebtables ethtool init-system-helpers\n- retrycmd_if_failure_no_stats 180 1 5 curl -fsSL https://aptdocker.azureedge.net/gpg > /tmp/aptdocker.gpg\n- cat /tmp/aptdocker.gpg | apt-key add -\n- echo \"deb ',variables('dockerEngineDownloadRepo'),' ubuntu-xenial main\" | sudo tee /etc/apt/sources.list.d/docker.list\n- \"echo \\\"Package: docker-engine\\nPin: version ',variables('dockerEngineVersion'),'\\nPin-Priority: 550\\n\\\" > /etc/apt/preferences.d/docker.pref\"\n- apt_get_update\n- retrycmd_if_failure 20 10 120 apt-get install -y ebtables docker-engine\n- echo \"ExecStartPost=/sbin/iptables -P FORWARD ACCEPT\" >> /etc/systemd/system/docker.service.d/exec_start.conf\n- touch /opt/azure/containers/dockerinstall.complete\n- mkdir -p /etc/kubernetes/manifests\n- usermod -aG docker ',variables('username'),'\n- /usr/lib/apt/apt.systemd.daily\n\n- bash /etc/kubernetes/generate-proxy-certs.sh\n\n- retrycmd_if_failure 20 5 5 apt-mark unhold walinuxagent\n- apt-mark unhold walinuxagent\n- touch /opt/azure/containers/runcmd.complete\n\n'))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "keyData": "[variables('sshPublicKeyData')]",
                                    "path": "[variables('sshKeyPath')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "dataDisks": [
                        {
                            "createOption": "Empty",
                            "diskSizeGB": "[variables('etcdDiskSizeGB')]",
                            "lun": 0,
                            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'-etcddisk')]"
                        }
                    ],
                    "imageReference": {
                        "offer": "[variables('osImageOffer')]",
                        "publisher": "[variables('osImagePublisher')]",
                        "sku": "[variables('osImageSku')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                }
            },
            "tags": {
                "creationSource": "[concat(variables('generatorCode'), '-', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]",
                "orchestrator": "[variables('orchestratorNameVersionTag')]",
                "poolName": "master",
                "resourceNameSuffix": "[variables('nameSuffix')]"
            },
            "type": "Microsoft.Compute/virtualMachines"
        },
        {
            "apiVersion": "[variables('apiVersionDefault')]",
            "copy": {
                "count": "[sub(variables('masterCount'), variables('masterOffset'))]",
                "name": "vmLoopNode"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')))]"
            ],
            "location": "[variables('location')]",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(variables('masterOffset')),'/cse', '-master-', copyIndex(variables('masterOffset')))]",
            "properties": {
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "commandToExecute": "[concat(variables('provisionScriptParametersCommon'),' ',variables('provisionScriptParametersMaster'), ' MASTER_INDEX=',copyIndex(variables('masterOffset')),' /usr/bin/nohup /bin/bash -c \"stat /opt/azure/containers/provision.complete > /dev/null 2>&1 || /bin/bash /opt/azure/containers/provision.sh >> /var/log/azure/cluster-provision.log 2>&1\"')]"
                },
                "publisher": "Microsoft.Azure.Extensions",
                "settings": {},
                "type": "CustomScript",
                "typeHandlerVersion": "2.0"
            },
            "type": "Microsoft.Compute/virtualMachines/extensions"
        }
    ],
    "outputs": {
        "agentStorageAccountPrefixes": {
            "type": "array",
            "value": "[variables('storageAccountPrefixes')]"
        },
        "agentStorageAccountSuffix": {
            "type": "string",
            "value": "[variables('storageAccountBaseName')]"
        },
        "agentpriStorageAccountCount": {
            "type": "int",
            "value": "[variables('agentpriStorageAccountsCount')]"
        },
        "agentpriStorageAccountOffset": {
            "type": "int",
            "value": "[variables('agentpriStorageAccountOffset')]"
        },
        "agentpriSubnetName": {
            "type": "string",
            "value": "[variables('agentpriSubnetName')]"
        },
        "masterFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
        },
        "primaryAvailabilitySetName": {
            "type": "string",
            "value": "[variables('primaryAvailabilitySetName')]"
        },
        "resourceGroup": {
            "type": "string",
            "value": "[variables('resourceGroup')]"
        },
        "routeTableName": {
            "type": "string",
            "value": "[variables('routeTableName')]"
        },
        "securityGroupName": {
            "type": "string",
            "value": "[variables('nsgName')]"
        },
        "subnetName": {
            "type": "string",
            "value": "[variables('subnetName')]"
        },
        "virtualNetworkName": {
            "type": "string",
            "value": "[variables('virtualNetworkName')]"
        }
    }
}